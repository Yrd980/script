GoAWK: an AWK interpreter with CSV support !Documentationhttps://pkg.go.dev/github.com/benhoyt/goawk !GitHub Actions Buildhttps://github.com/benhoyt/goawk/actions/workflows/tests.yml AWK is a fascinating text-processing language, and somehow after reading the delightfully-terse The AWK Programming Language I was inspired to write an interpreter for it in Go. So here it is, feature-complete and tested against "the one true AWK" and GNU AWK test suites. GoAWK is a POSIX-compatible version of AWK, and additionally has a CSV mode for reading and writing CSV and TSV files. This feature was sponsored by the library of the University of Antwerp. Read the CSV documentation. You can also read one of the articles I've written about GoAWK: The original article about how GoAWK works and performs How I converted the tree-walking interpreter to a bytecode compiler and virtual machine A description of why and how I added CSV support Basic usage To use the command-line version, simply use to install it, and then run it using assuming is in your : To use it in your Go programs, you can call directly for simple needs: Or you can use the module and then to control execution, set variables, and so on: If you need to repeat execution of the same program on different inputs, you can call https://pkg.go.dev/github.com/benhoyt/goawk/interpNew once, and then call the returned object's method as many times as you need. Read the package documentation for more details. Differences from AWK The intention is for GoAWK to conform to 's behavior and to the POSIX AWK spec, but this section describes some areas where it's different. Additional features GoAWK has over AWK: It has proper support for CSV and TSV files read the documentation. It's the only AWK implementation we know with a code coverage feature read the documentation. It supports negative field indexes to access fields from the right, for example, refers to the last field. It's embeddable in your Go programs! You can even call custom Go functions from your AWK scripts. Most AWK scripts are faster than and on a par with , though usually slower than . See recent benchmarks. The parser supports in addition to , primarily to make Windows one-liners easier when using the shell which uses as the quote character. Things AWK has over GoAWK: Scripts that use regular expressions are slower than other implementations unfortunately Go's package is relatively slow. AWK is written by Alfred Aho, Peter Weinberger, and Brian Kernighan. Stability This project has a good suite of tests, which include my own intepreter tests, the original AWK test suite, and the relevant tests from the Gawk test suite. I've used it a bunch personally, and it's used in the Benthos stream processor as well as by the software team at the library of the University of Antwerp. However, to , so please use GoAWK at your own risk. I intend not to change the Go API in a breaking way in any v1.x.y version. AWKGo The GoAWK repository also includes the creatively-named AWKGo, an AWK-to-Go compiler. This is experimental and is not subject to the stability requirements of GoAWK itself. You can read more about AWKGo or browse the code on the branch. License GoAWK is licensed under an open source MIT license. The end Have fun, and please contact me if you're using GoAWK or have any feedback!