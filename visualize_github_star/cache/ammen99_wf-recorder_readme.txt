wf-recorder wf-recorder is a utility program for screen recording of -based compositors more specifically, those that support and . Its dependencies are , and . installation comment: <> List ordered alphabetically Alpine Linux wf-recorder is available in the community repositories: Arch Linux Arch users can install wf-recorder from the Community repo. Artix Linux Artix users can install wf-recorder from the official repos Debian GNU/Linux Debian users can install wf-recorder from official repos Fedora Linux Fedora users can install wf-recorder from the official repos Gentoo Linux Gentoo users can install wf-recorder from the official repository. NixOS / Nix Users of the Nix package manager can add the package to their system configurations, or use / / : Void Linux Void users can install wf-recorder from the official repos From Source Install Dependencies Ubuntu Fedora Download & Build Optionally configure with . The default is libx264. Now you can just run or install it with . The man page can be read with . Usage In its simplest form, run to start recording and use Ctrl+C to stop. This will create a file called in the current working directory using the default codec. Use to specify the output file. In case of multiple outputs, you'll first be prompted to select the output you want to record. If you know the output name beforehand, you can use the option. To view all available output options, use the list flag or To select a specific part of the screen you can either use , or use slurp for interactive selection of the screen area that will be recorded: You can record screen and sound simultaneously with To specify an audio device, use the or options. To specify a video codec, use the option. To modify codec parameters, use . You can also specify an audio codec, using . Alternatively, the long form can be used. You can use the following command to check all available video codecs and the following for audio codecs Use ffmpeg to get details about specific encoder, filter or muxer. To set a specific output format, use the option. For example, to output to a video4linux2 loopback you might use: To use GPU encoding, use a VAAPI codec for ex. and specify a GPU device to use with the option: Some drivers report support for rgb0 data for vaapi input but really only support yuv planar formats. In this case, use the or option in addition to the vaapi options to convert the data to yuv planar data before sending it to the GPU.