!fzy fzy is a fast, simple fuzzy text selector for the terminal with an advanced scoring algorithm. Try it out online! !http://i.hawth.ca/u/fzyanimateddemo.svg <blockquote> It's been kind of life-changing. -<a href="https://github.com/graygilmore/">@graygilmore</a> </blockquote> <blockquote> fzy works great btw -<a href="https://twitter.com/alexblackie/status/719297828892188672">@alexblackie</a> </blockquote> !Build Statushttps://github.com/jhawthorn/fzy/actions Why use this over fzf, pick, selecta, ctrlp, ...? fzy is faster and shows better results than other fuzzy finders. Most other fuzzy matchers sort based on the length of a match. fzy tries to find the result the user intended. It does this by favouring matches on consecutive letters and starts of words. This allows matching using acronyms or different parts of the path. A gory comparison of the sorting used by fuzzy finders can be found in ALGORITHM.md fzy is designed to be used both as an editor plugin and on the command line. Rather than clearing the screen, fzy displays its interface directly below the current cursor position, scrolling the screen if necessary. Installation macOS Using Homebrew brew install fzy Using MacPorts sudo port install fzy Arch Linux/MSYS2: FreeBSD: Gentoo Linux: Ubuntu/Debian: pkgsrc NetBSD and others: openSUSE: From source make sudo make install The environment variable can be used to specify the install location, the default is . Usage fzy is a drop in replacement for selecta, and can be used with its usage examples. Use with Vim fzy can be easily integrated with vim. Any program can be used to filter files presented through fzy. ag the silver searcher can be used to ignore files specified by . Sorting fzy attempts to present the best matches first. The following considerations are weighted when sorting: It prefers consecutive characters: will match <tt><b>file</b></tt> over <tt><b>fil</b>t<b>e</b>r</tt>. It prefers matching the beginning of words: is likely to match <tt><b>a</b>pp/<b>m</b>odels/<b>p</b>osts.rb</tt>. It prefers shorter matches: matches <tt><b>abc</b>d<b>e</b>f</tt> over <tt><b>abc</b> d<b>e</b></tt>. It prefers shorter candidates: matches <tt><b>test</b>s</tt> over <tt><b>test</b>ing</b></tt>. See Also fzy.js Javascript port