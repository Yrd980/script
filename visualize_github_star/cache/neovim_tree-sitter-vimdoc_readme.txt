tree-sitter-vimdoc ================== This grammar implements the vimdoc "spec" ref1, ref2. Predictable results are the primary goal, so that output formats e.g. HTML are well-formed; the input vimdoc is secondary. The first step should always be to try to fix the input rather than insist on a grammar that handles vimdoc's endless quirks. Overview -------- - is the main top-level node, delimited by blank lines or any line starting with codeblock terminator. - contains and nodes. - : - contains atoms words, tags, taglinks, â€¦ - contains headings , , , because terminated by "implicit stop" no terminating consumes blank lines, so has no way to end. - "listitem" - lines starting with / not / are listitems. - consumes lines until blank line, codeblock, or next listitem. - nesting is ignored: indented listitems are parsed as siblings. - : - contained by or , because ">" can start a codeblock at the end of any line. - contains nodes without nodes: it's just the full raw text line including whitespace. This is somewhat dictated by its "preformatted" nature; parsing the contents would require loading a "child" language injection. See 2. - the terminating and any following whitespace is discarded anonymous. - = "Heading 1": followed by text and optional . - = "Heading 2": followed by text and optional . - = "Heading 3": UPPERCASE WORDS, followed by optional , followed by atoms. Known issues ------------ - Input must end with newline/EOL . Grammar does not support files without EOL. - Input must end with a blank line. Though this doesn't seem to matter in practice. - Spec requires that delimiter ">" must be preceded by a space " >", not a tab. But currently the grammar doesn't enforce this. Example: . - doesn't handle surrounding parens. E.g. yields - doesn't handle nested parens. E.g. - currently only recognizes tilde preceded by space i.e. not . This covers 99% of :help files. - children should be plaintext, but currently are parsed as . - must be preceded by a blank line. TODO ---- - : lines containing only tags, typically implies a "heading" before a block. Release ------- Steps to perform a release: 1. Bump and tag the version: First bump , , and to the new version. Then bump the package: Choose // to indicate query compatibility: - for bugfixes no changes to queries needed - for added nodes queries may need changes to use new nodes but will not error - for removed or renamed nodes queries will error if not adapted, other breaking changes 2. Bump to prerelease, without creating a tag: 3. Push: 4. Release the tagged commit: https://github.com/neovim/tree-sitter-vimdoc/releases/new