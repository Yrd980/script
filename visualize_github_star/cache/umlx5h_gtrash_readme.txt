gtrash !demo is a trash CLI manager that fully complies with the FreeDesktop.org specification. Unlike , moves files to the system trash can, enabling easy restoration of important files at any time. If you usually use in the shell, can serve as a substitute. This tool utilizes the system trash can on Linux, enabling seamless integration with other CLI and desktop applications. Additionally, features a modern TUI interface, making it very intuitive to restore any file. The interface is made with an awesome bubbletea TUI framework. Table of Contents - Features - Supported OS - Installation - Usage - How it works - FAQ - Tips - Configuration - Related projects Features - Intuitive TUI interface for file restoration - Allows incremental search for trashed files, enabling the restoration of multiple files simultaneously. - Full compliance with FreeDesktop.org specification - Supports directory size caching, enabling fast size-based filtering and pruning. - Close compatibility with rm interface - Has rm-like mode, You can customize -r, -d behavior - Multi subcommands design in a single static binary written in Go - Restoration of co-deleted files together - Easy integration with other CLI tools, such as fzf - Safe and Ergonomic - Ensures safety by displaying a list and confirmation prompt whenever a file is permanently deleted. Supported OS Linux Supported Mac Supported but Mac's system trash can is not used Windows Not supported It works perfectly on WSL2 because it is real Linux Installation From binaries Download the binary from GitHub Releases and place it in your . Install the latest binary to : AUR Arch User Repository with any AUR helpers Nixpkgs NixOS Homebrew macOS Go install Build from source Usage To trash a file, use the subcommand. Deleting a directory doesn't require the option by default. This behavior can be adjusted using --rm-mode. The subcommand provides information about the trash can, displaying item count and total size. There is a path name, the file has been moved to this path. The subcommand lists the files in the trash. The field shows the original file location, not the one in the trash. String queries can be passed as command line arguments for searching files in the trash, using regular expressions by default. There are several ways to restore a file. To restore with an interactive TUI, use the subcommand. !restore-table Within , multiple files can be selected for restoration. The table on the left is the list of files in the trash and the table on the right is the list to be restored. Press for detailed operations. Navigate using , , or the cursor keys. Use or or to move files to the right table. Vim key bindings are used. Incremental searches can be performed with . Press after selecting files to restore. A list of selected files and a confirmation prompt will appear. Confirm restoration by pressing . There is another type of restoration with TUI. To restore all the deleted files together in one command, use the subcommand. In above example, , , and can be restored together. This is useful when many files were deleted together but you want to restore them at once. For non-TUI restoration, use the option with . To permanently delete files in the trash, use the option with . Be aware that this action is irreversible, akin to rm, and the files cannot be restored. Help can be viewed with the option. Examples are provided for each subcommand. How it works adheres to the FreeDesktop.org specification. Its primary function is akin to , but it extends functionality by recording meta-information and automatically transferring files to the trash can in the external file system. Files within the main file system are moved to the following paths in the home directory. The files are moved to the directory, while metadata is stored in the directory. Files within an external file system will be moved to either of the subsequent paths. To use the first directory, create a directory in advance: is the same as the information displayed in the command. The command copies and deletes files when moving across file systems. This process consumes more time and increases disk usage on the destination file system. The inability to use the rename2 syscall across different file systems necessitates this behavior. For this reason, attempts to move files to the trash can within the same file system whenever possible. You can also configure it to always use the trash can in the directory. Refer to the Configuration for further details. The subcommand lists paths to all trash cans: Using the option with the command displays the real path for each trashed file. For detailed behavior insights, run the command with the option to view internal processes. FAQ What's the difference between this command and the rm command? While uses the unlink syscall, rendering file deletion irreversible, moves files using the rename syscall, enabling restoration. aims to mirror the interface but ignores , , , and by default. The option is not necessary for deleting folders since files are restorable even if mistakenly removed. However, some users may prefer the behavior. In such cases, enable the above option with . Although it is not completely compatible. This behavior can be set using an environment variable or an alias, whichever suits your preference. What are the advantages of using a system trash can? offers several benefits over similar applications like rip that don't utilize the Linux system trash can. Seamless integration with CLI and desktop applications following the FreeDesktop specification. Support for various trash cans, even on different file systems, enabling fast file movement between them. Compatibility with standard specifications ensures smoother migration to alternative applications adhering to the same standards. Unique specifications become a problem when they are no longer maintained. Can I alias ? You can but I do not recommend due to potential risks, unintentionally executing actual commands, such as or on SSH servers. As isn't fully compatible with , it's prudent to establish different aliases to avoid confusion and prevent accidental deletion of files. Consider setting up alternative short aliases, such as: If you are in the habit of using rm, consider creating an alias that displays a cautionary message. When you want to execute the actual rm, use to bypass the alias. Can I run in one command without using alias? In certain situations, supporting trash cans within programs might necessitate working with a trash CLI without the ability to specify a subcommand like . In such cases, consider a simple wrapper script. With this setup, execute a single command. This wrapper facilitates direct execution without needing an alias. Is gtrash compatible with the gio trash and trash-put commands? It uses the exact same trash FreeDesktop specification as and , so they are compatible. If some program depends on these clis and cannot be changed, there is no need to change to . Typing takes too long Set up an different alias from put. Example Or you could setup a symbolic link. Note that gtrash works perfectly well with any binary name. If you don't like the name "gtrash", you can change it to whatever name you like. However, be aware that if you are installing via a package manager, you may not be able to update it. What happens when I run it with sudo? Files are moved to the Trash under the user's home directory. The option displays the location where the file was moved. The subcommand can also reveal the Trash can location. To restore or delete a file deleted with sudo, you need to use sudo. How does the subcommand work? The subcommand can restore multiple deleted files simultaneously with one command. However, it's not an exact grouping of files deleted at the same time. Files with the same deletion timestamp recorded in seconds are simply grouped together. When files are trashed using , they are designed to have the same timestamp, allowing reliable grouping. But this isn't guaranteed if trashed via other apps. Note that multiple commands executed within one second are also grouped together. In an interactive shell executing , timestamps rarely match within seconds. However, caution is needed when running it via a shell script. In such cases, use the subcommand to select specific files. What does the subcommand do? command records meta-information in the folder in the Trash directory and moves files to the directory. For instance, if you manually delete files from the directory, the trash will become inconsistent. In such cases, and commands won't display inconsistent orphaned meta-information. can detect this condition and remove unnecessary meta-information. The following trashinfo file will be deleted instead of the file. The display in the TUI is corrupted It seems that the table in TUI may be corrupted on certain terminals. The display of the library used itself may be corrupted and may not be able to be fixed. In that case, I recommend migrating the terminal. Terminal confirmed that it cannot be fixed KDE Konsole Terminal confirmed to work Wezterm Alacritty Kitty GNOME Terminal Xfce Terminal Windows Terminal Mac Terminal Mac iTerm2 If you find a problem, please open an ticket. Tips Shell Integration supports , , shell integration. See for further details. Filtering by the current working directory or specific directory By default, and display all files, not limited to the current directory. This differs from other applications. You can filter using the option . The subcommand also supports filtering by the current directory in the TUI. Avoid using , directly access the TUI, and press the key to toggle filtering. The or option allows filtering in directories other than the current one. Fuzzy find Fuzzy find isn't currently implemented due to complexity. However, is designed to work seamlessly with other commands like fzf. The find subcommand outputs a tab-delimited table if it detects pipe or file output other than a terminal. This enables easy field extraction using tools like awk. Example with fzf: For permanent removal or restoration, specify the original path as a command-line argument in the or subcommand. Note that the option must be specified when using to display the confirmation prompt. Pruning the trash can by size and date criteria Date-based: Currently possible only by day. Size-based: There are two methods. filters by the specified size and removes them. removes large files first so that the overall trash size is smaller than the specified size: Sizes and dates can be combined in , and other filters can be applied: Configuration Certain behaviors can be altered by setting environment variables. Refer to the Configuration. Related projects Using system trash can andreafrancia/trash-cli oberblastmeister/trashy rushsteve1/trash-d For a comparison, You can see alternatives.md. Not using system trash can nivekuil/rip babarot/gomi This program is mainly inspired by babarot/gomi.