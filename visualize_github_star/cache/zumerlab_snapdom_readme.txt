<p align="center"> <a href="http://zumerlab.github.io/snapdom"> <img src="https://raw.githubusercontent.com/zumerlab/snapdom/main/docs/assets/newhero.png" width="70%"> </a> </p> <p align="center"> <a href="https://www.npmjs.com/package/@zumer/snapdom"> <img alt="NPM version" src="https://img.shields.io/npm/v/@zumer/snapdom?style=flat-square&label=Version"> </a> <a href="https://github.com/zumerlab/snapdom/graphs/contributors"> <img alt="GitHub contributors" src="https://img.shields.io/github/contributors/zumerlab/snapdom?style=flat-square&label=Contributors"> </a> <a href="https://github.com/zumerlab/snapdom/stargazers"> <img alt="GitHub stars" src="https://img.shields.io/github/stars/zumerlab/snapdom?style=flat-square&label=Stars"> </a> <a href="https://github.com/zumerlab/snapdom/network/members"> <img alt="GitHub forks" src="https://img.shields.io/github/forks/zumerlab/snapdom?style=flat-square&label=Forks"> </a> <a href="https://github.com/sponsors/tinchox5"> <img alt="Sponsor tinchox5" src="https://img.shields.io/github/sponsors/tinchox5?style=flat-square&label=Sponsor"> </a> <a href="https://github.com/zumerlab/snapdom/blob/main/LICENSE"> <img alt="License" src="https://img.shields.io/github/license/zumerlab/snapdom?style=flat-square"> </a> </p> snapDOM snapDOM is a fast and accurate DOM-to-image capture tool built for Zumly, a zoom-based view transition framework. It captures any HTML element as a scalable SVG image, preserving styles, fonts, background images, pseudo-elements, and even shadow DOM. It also supports export to raster image formats and canvas. üì∏ Full DOM capture üé® Embedded styles, pseudo-elements, and fonts üñºÔ∏è Export to SVG, PNG, JPG, WebP, , or Blob ‚ö° Ultra fast, no dependencies üì¶ 100% based on standard Web APIs Demo https://zumerlab.github.io/snapdom/ Installation NPM / Yarn Then import it in your code: CDN Script tag local ES Module Module via CDN Basic usage Reusable capture One-step shortcuts API Returns an object with reusable export methods: Shortcut methods | Method | Description | | ------------------------------ | ------------------------------------- | | | Returns an | | | Returns a | | | Returns an SVG | | | Returns a PNG image | | | Returns a JPG image | | | Returns a WebP image | | | Triggers download in specified format | Options All capture methods accept an object: | Option | Type | Default | Description | | ----------------- | -------- | -------- | ------------------------------------------ | | | boolean | | Removes redundant styles | | | boolean | | Skips idle delay for faster results | | | boolean | | Inlines fonts icon fonts always embedded | | | number | | Output scale multiplier | | | number | | Device pixel ratio | | | number | - | Output specific width size | | | number | - | Output specific height size | | | string | | Fallback color for JPG/WebP | | | number | | Quality for JPG/WebP 0 to 1 | | | string | '' | Specify a proxy for handling CORS images as fallback| | | string | | Select , , Blob type| | | string | - | CSS selectors for elements to exclude | | | function | - | Custom filter function ie | Setting custom dimensions with width and height options Use the and options to generate an image with specific dimensions. Examples: 1. Fixed width proportional height Sets a specific width while maintaining the aspect ratio. Height adjusts proportionally. 2. Fixed height proportional width Sets a specific height while maintaining the aspect ratio. Width adjusts proportionally. 3. Fixed width and height may distort image Forces exact dimensions, potentially distorting the image if the aspect ratio differs. Note: If is different from 1, it takes priority over width and height. Example: ignores width and scales the image 3x instead. Cross-Origin Images By default, snapDOM loads images with or . In case fails to get the images, can be used to deal with CORS images: Download options ‚Äì Optional helper The function can be used to load external resources like images and fonts in advance. It is specially useful when the element to capture is big and complex. Options for : boolean, default: true ‚Äî Inlines non-icon fonts during preload. string ‚Äî Proxy for handling CORS images as fallback. Features Captures shadow DOM and Web Components Supports , and pseudo-elements Inlines background images and fonts Handles Font Awesome, Material Icons, and more to ignore an element with for masked replacements Limitations External images should be CORS-accessible use option for handling CORS denied Iframes are not supported When WebP format is used on Safari, it will fallback to PNG rendering. CSS rule is well supported, but if need to use JS , see this workaround https://github.com/zumerlab/snapdom/issues/43 ‚ö° Performance Benchmarks Snapdom has received significant performance improvements since version . The following benchmarks compare: Snapdom current Snapdom v1.8.0 Simple elements | Scenario | Snapdom current | Snapdom v1.8.0 | html2canvas | html-to-image | | ------------------------ | ----------------- | -------------- | ----------- | ------------- | | Small 200√ó100 | 0.4 ms | 1.2 ms | 70.3 ms | 3.6 ms | | Modal 400√ó300 | 0.4 ms | 1.1 ms | 68.8 ms | 3.6 ms | | Page View 1200√ó800 | 0.4 ms | 1.0 ms | 100.5 ms | 3.4 ms | | Large Scroll 2000√ó1500 | 0.4 ms | 1.0 ms | 153.1 ms | 3.4 ms | | Very Large 4000√ó2000 | 0.4 ms | 1.0 ms | 278.9 ms | 4.3 ms | Complex elements | Scenario | Snapdom current | Snapdom v1.8.0 | html2canvas | html-to-image | | ------------------------ | ----------------- | -------------- | ----------- | ------------- | | Small 200√ó100 | 1.1 ms | 3.2 ms | 76.0 ms | 15.3 ms | | Modal 400√ó300 | 4.5 ms | 14.0 ms | 133.2 ms | 55.4 ms | | Page View 1200√ó800 | 32.9 ms | 113.6 ms | 303.4 ms | 369.1 ms | | Large Scroll 2000√ó1500 | 133.9 ms | 387.4 ms | 594.4 ms | 1,163.0 ms | | Very Large 4000√ó2000 | 364.0 ms | 1,200.4 ms | 1,380.8 ms | 3,023.9 ms | Summary Snapdom current is 2√ó‚Äì6√ó faster than Up to 150√ó faster than Up to 8√ó faster than in large scenarios <sub>Benchmarks run in Chromium using Vitest.<br> Hardware: MacBook Air 2018.<br> ‚ö†Ô∏è Performance may vary depending on device.</sub> Run the benchmarks Roadmap Planned improvements for future versions of SnapDOM: Implement plugin system SnapDOM will support external plugins to extend or override internal behavior e.g. custom node transformers, exporters, or filters. Refactor to modular architecture Internal logic will be split into smaller, focused modules to improve maintainability and code reuse. X Decouple internal logic from global options Functions will be redesigned to avoid relying directly on . A centralized capture context will improve clarity, autonomy, and testability. See branch Expose cache control Users will be able to manually clear image and font caches or configure their own caching strategies. Auto font preloading Required fonts will be automatically detected and preloaded before capture, reducing the need for manual calls. Document plugin development A full guide will be provided for creating and registering custom SnapDOM plugins. Make export utilities tree-shakeable Export functions like , , , etc. will be restructured into independent modules to support tree shaking and minimal builds. Have ideas or feature requests? Feel free to share suggestions or feedback in GitHub Discussions. Development To contribute or build snapDOM locally: The main entry point is in , and output bundles are generated in the folder. For detailed contribution guidelines, please see CONTRIBUTING. Contributors üôå <!-- CONTRIBUTORS:START --> <p> <a href="https://github.com/tinchox5" title="tinchox5"><img src="https://avatars.githubusercontent.com/u/11557901?v=4&s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="tinchox5"/></a> <a href="https://github.com/tarwin" title="tarwin"><img src="https://avatars.githubusercontent.com/u/646149?v=4&s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="tarwin"/></a> <a href="https://github.com/17biubiu" title="17biubiu"><img src="https://avatars.githubusercontent.com/u/13295895?v=4&s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="17biubiu"/></a> <a href="https://github.com/av01d" title="av01d"><img src="https://avatars.githubusercontent.com/u/6247646?v=4&s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="av01d"/></a> <a href="https://github.com/CHOYSEN" title="CHOYSEN"><img src="https://avatars.githubusercontent.com/u/25995358?v=4&s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="CHOYSEN"/></a> <a href="https://github.com/pedrocateexte" title="pedrocateexte"><img src="https://avatars.githubusercontent.com/u/207524750?v=4&s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="pedrocateexte"/></a> <a href="https://github.com/domialex" title="domialex"><img src="https://avatars.githubusercontent.com/u/4694217?v=4&s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="domialex"/></a> <a href="https://github.com/elliots" title="elliots"><img src="https://avatars.githubusercontent.com/u/622455?v=4&s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="elliots"/></a> <a href="https://github.com/jswhisperer" title="jswhisperer"><img src="https://avatars.githubusercontent.com/u/1177690?v=4&s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="jswhisperer"/></a> <a href="https://github.com/sharuzzaman" title="sharuzzaman"><img src="https://avatars.githubusercontent.com/u/7421941?v=4&s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="sharuzzaman"/></a> <a href="https://github.com/simon1uo" title="simon1uo"><img src="https://avatars.githubusercontent.com/u/60037549?v=4&s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="simon1uo"/></a> <a href="https://github.com/titoBouzout" title="titoBouzout"><img src="https://avatars.githubusercontent.com/u/64156?v=4&s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="titoBouzout"/></a> <a href="https://github.com/jhbae200" title="jhbae200"><img src="https://avatars.githubusercontent.com/u/20170610?v=4&s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="jhbae200"/></a> <a href="https://github.com/miusuncle" title="miusuncle"><img src="https://avatars.githubusercontent.com/u/7549857?v=4&s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="miusuncle"/></a> <a href="https://github.com/rbbydotdev" title="rbbydotdev"><img src="https://avatars.githubusercontent.com/u/101137670?v=4&s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="rbbydotdev"/></a> <a href="https://github.com/zhanghaotian2018" title="zhanghaotian2018"><img src="https://avatars.githubusercontent.com/u/169218899?v=4&s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="zhanghaotian2018"/></a> <a href="https://github.com/kohaiy" title="kohaiy"><img src="https://avatars.githubusercontent.com/u/15622127?v=4&s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="kohaiy"/></a> <a href="https://github.com/fu050409" title="fu050409"><img src="https://avatars.githubusercontent.com/u/46275354?v=4&s=100" style="border-radius:10px; width:60px; height:60px; object-fit:cover; margin:5px;" alt="fu050409"/></a> </p> <!-- CONTRIBUTORS:END --> üíñ Sponsors Special thanks to @megaphonecolin for supporting this project! If you'd like to support this project too, you can become a sponsor. Star History !Star History Charthttps://www.star-history.com/zumerlab/snapdom&Date License MIT ¬© Zumerlab