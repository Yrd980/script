Termux application !Build statushttps://github.com/termux/termux-app/actions !Testing statushttps://github.com/termux/termux-app/actions !Join the chat at https://gitter.im/termux/termuxhttps://gitter.im/termux/termux !Join the Termux discord serverhttps://discord.gg/HXpF69X !Termux library releases at Jitpackhttps://jitpack.io/termux/termux-app Termux is an Android terminal application and Linux environment. Note that this repository is for the app itself the user interface and the terminal emulation. For the packages installable inside the app, see termux/termux-packages. Quick how-to about Termux package management is available at Package Management. It also has info on how to fix errors when running or commands. We are looking for Termux Android application maintainers. NOTICE: Termux may be unstable on Android 12+. Android OS will kill any phantom processes greater than 32 limit is for all apps combined and also kill any processes using excessive CPU. You may get message in the terminal without actually exiting the shell process yourself. Check the related issue 2366, issue tracker, phantom cached and empty processes docs and this TLDR comment on how to disable trimming of phantom and excessive cpu usage processes. A proper docs page will be added later. An option to disable the killing should be available in Android 12L or 13, so upgrade at your own risk if you are on Android 11, specially if you are not rooted. Contents - Termux App and Plugins - Installation - Uninstallation - Important Links - Debugging - For Maintainers and Contributors - Forking Termux App and Plugins The core Termux app comes with the following optional plugin apps. - Termux:API - Termux:Boot - Termux:Float - Termux:Styling - Termux:Tasker - Termux:Widget Installation Latest version is . NOTICE: It is highly recommended that you update to or higher ASAP for various bug fixes, including a critical world-readable vulnerability reported here. See below for information regarding Termux on Google Play. Termux can be obtained through various sources listed below for only Android with full support for apps and packages. Support for both app and packages was dropped for Android and on 2020-01-01 at , however it was re-added just for the app without any support for package updates on 2022-05-24 via the GitHub sources. Check here for the details. The APK files of different sources are signed with different signature keys. The app and all its plugins use the same https://developer.android.com/guide/topics/manifest/manifest-element and so all their APKs installed on a device must have been signed with the same signature key to work together and so they must all be installed from the same source. Do not attempt to mix them together, i.e do not try to install an app or plugin from and another one from a different source like . Android Package Manager will also normally not allow installation of APKs with different signatures and you will get errors on installation like , , , , , etc. This restriction can be bypassed with root or with custom roms. If you wish to install from a different source, then you must uninstall any and all existing Termux or its plugin app APKs from your device first, then install all new APKs from the same new source. Check Uninstallation section for details. You may also want to consider Backing up Termux before the uninstallation so that you can restore it after re-installing from Termux different source. In the following paragraphs, "bootstrap" refers to the minimal packages that are shipped with the itself to start a working shell environment. Its zips are built and released here. F-Droid Termux application can be obtained from from here. You do not need to download the app via the link to install Termux. You can download the Termux APK directly from the site by clicking the link at the bottom of each version section. It usually takes a few days or even a week or more for updates to be available on once an update has been released on . The releases are built and published by once they detect a new release. The Termux maintainers do not have any control over the building and publishing of the Termux apps on . Moreover, the Termux maintainers also do not have access to the APK signing keys of releases, so we cannot release an APK ourselves on that would be compatible with releases. The app often may not notify you of updates and you will manually have to do a pull down swipe action in the tab of the app for it to check updates. Make sure battery optimizations are disabled for the app, check https://dontkillmyapp.com/ for details on how to do that. Only a universal APK is released, which will work on all supported architectures. The APK and bootstrap installation size will be . does not support architecture specific APKs. GitHub Termux application can be obtained on either from https://github.com/termux/termux-app/releases for version or from https://github.com/termux/termux-app/actions/workflows/debugbuild.yml?query=branch%3Amaster+event%3Apush workflows. For android , only install variants. For android and , only install variants. The APKs for will be listed under drop-down of a release. These are automatically attached when a new version is released. The APKs for action workflows will be listed under section of a workflow run. These are created for each commit/push done to the repository and can be used by users who don't want to wait for releases and want to try out the latest features immediately or want to test their pull requests. Note that for action workflows, you need to be logged into a account for the links to be enabled/clickable. If you are using the app, then make sure to open workflow link in a browser like Chrome or Firefox that has your GitHub account logged in since the in-app browser may not be logged in. The APKs for both of these are https://developer.android.com/studio/debug and are compatible with each other but they are not compatible with other sources. Both universal and architecture specific APKs are released. The APK and bootstrap installation size will be if using universal and if using architecture specific. Check here for details. Security warning: APK files on GitHub are signed with a test key that has been shared with community. This IS NOT an official developer key and everyone can use it to generate releases for own testing. Be very careful when using Termux GitHub builds obtained elsewhere except https://github.com/termux/termux-app. Everyone is able to use it to forge a malicious Termux update installable over the GitHub build. Think twice about installing Termux builds distributed via Telegram or other social media. If your device get caught by malware, we will not be able to help you. The test key shall not be used to impersonate @termux and can't be used for this anyway. This key is not trusted by us and it is quite easy to detect its use in user generated content. <details> <summary>Keystore information</summary> </details> Google Play Store Experimental branch There is currently a build of Termux available on Google Play for Android 11+ devices, with extensive adjustments in order to pass policy requirements there. This is under development and has missing functionality and bugs see here for status updates compared to the stable F-Droid build, which is why most users who can should still use F-Droid or GitHub build as mentioned above. Currently, Google Play will try to update installations away from F-Droid ones. Updating will still fail as sharedUserId has been removed. A planned 0.118.1 F-Droid release will fix this by setting a higher version code than used for the PlayStore app. Meanwhile, to prevent Google Play from attempting to download and then fail to install the Google Play releases over existing installations, you can open the Termux apps pages on Google Play and then click on the 3 dots options button in the top right and then disable the Enable auto update toggle. However, the Termux apps updates will still show in the PlayStore app updates list. If you want to help out with testing the Google Play build or cannot install Termux from other sources, be aware that it's built from a separate repository https://github.com/termux-play-store/ - be sure to report issues there, as any issues encountered might very well be specific to that repository. Uninstallation Uninstallation may be required if a user doesn't want Termux installed in their device anymore or is switching to a different install source. You may also want to consider Backing up Termux before the uninstallation. To uninstall Termux completely, you must uninstall any and all existing Termux or its plugin app APKs listed in Termux App and Plugins. Go to -> and then look for those apps. You can also use the search feature if itâ€™s available on your device and search in the applications list. Even if you think you have not installed any of the plugins, it's strongly suggested to go through the application list in Android settings and double-check. Important Links Community All community links are available here. The main ones are the following. - Termux Reddit community - Termux User Matrix Channel Gitter - Termux Dev Matrix Channel Gitter - Termux X Twitter - Termux Support Email Wikis - Termux Wiki - Termux App Wiki - Termux Packages Wiki Miscellaneous - FAQ - Termux File System Layout - Differences From Linux - Package Management - Remote Access - Backing up Termux - Terminal Settings - Touch Keyboard - Android Storage and Sharing Data with Other Apps - Android APIs - Moved Termux Packages Hosting From Bintray to IPFS - Running Commands in Termux From Other Apps via intent - Termux and Android 10 Terminal <details> <summary></summary> Terminal resources - XTerm control sequences - vt100.net - Terminal codes ANSI and terminfo equivalents Terminal emulators - VTE libvte: Terminal emulator widget for GTK+, mainly used in gnome-terminal. Source, Open Issues, and All including closed issues. - iTerm 2: OS X terminal application. Source, Issues and Documentation which includes iTerm2 proprietary escape codes. - Konsole: KDE terminal application. Source, in particular tests, Bugs and Wishes. - hterm: JavaScript terminal implementation from Chromium. Source, including tests, and Google group. - xterm: The grandfather of terminal emulators. Source. - Connectbot: Android SSH client. Source - Android Terminal Emulator: Android terminal app which Termux terminal handling is based on. Inactive. Source. </details> Debugging You can help debug problems of the app and its plugins by setting appropriate in app settings -> -> -> Requires app version . The defaults to and log level currently logs additional information. Its best to revert log level to after you have finished debugging since private data may otherwise be passed to during normal operation and moreover, additional logging increases execution time. The plugin apps do not execute the commands themselves but send execution intents to app, which has its own log level which can be set in app settings -> -> -> . So you must set log level for both and the respective plugin app settings to get all the info. Once log levels have been set, you can run the command in app terminal to view the logs in realtime to stop or use to take a dump of the log. You can also view the logs from a PC over . For more information, check official android guide here. Moreover, users can generate termux files info and dump automatically too with terminal's long hold options menu -> option and selecting in the prompt shown to add debug info. This can be helpful for reporting and debugging other issues. If the report generated is too large, then option in context menu 3 dots on top right of can be used and the file viewed/shared instead. Users must post complete report optionally without sensitive info when reporting issues. Issues opened with partial screenshots of error reports instead of text will likely be automatically closed/deleted. Log Levels - - Log nothing. - - Start logging error, warn and info messages and stacktraces. - - Start logging debug messages. - - Start logging verbose messages. For Maintainers and Contributors The termux-shared library was added in https://github.com/termux/termux-app/releases/tag/v0.109. It defines shared constants and utils of the Termux app and its plugins. It was created to allow for the removal of all hardcoded paths in the Termux app. Some of the termux plugins are using this as well and rest will in future. If you are contributing code that is using a constant or a util that may be shared, then define it in library if it currently doesn't exist and reference it from there. Update the relevant changelogs as well. Pull requests using hardcoded values will/should not be accepted. Termux app and plugin specific classes must be added under package and general classes outside it. The must also be checked and updated if necessary when contributing code. The licenses of any external library or code must be honoured. The main Termux constants are defined by https://github.com/termux/termux-app/blob/master/termux-shared/src/main/java/com/termux/shared/termux/TermuxConstants.java class. It also contains information on how to fork Termux or build it with your own package name. Changing the package name will require building the bootstrap zip packages and other packages with the new , check Building Packages for more info. Check Termux Libraries for how to import termux libraries in plugin apps and Forking and Local Development for how to update termux libraries for plugins. The in files of Termux and its plugin apps must follow the semantic version spec in the format . When bumping in files and when creating a tag for new releases on GitHub, make sure to include the patch number as well, like instead of just . The files and workflow validates the version as well and the build/attachment will fail if does not follow the spec. Commit Messages Guidelines Commit messages must use the Conventional Commits spec so that chagelogs as per the Keep a Changelog spec can automatically be generated by the https://github.com/termux/create-conventional-changelog script, check its repo for further details on the spec. The first letter for and must be capital and description should be in the present tense. The space after the colon is necessary. For a breaking change, add an exclamation mark before the colon , so that it is highlighted in the chagelog automatically. Only the listed below must be used exactly as they are used in the changelog headings. For example, , , , etc. You can optionally add a scope as well, like . Do not use anything else as type, like instead of , etc. - Added for new features. - Changed for changes in existing functionality. - Deprecated for soon-to-be removed features. - Removed for now removed features. - Fixed for any bug fixes. - Security in case of vulnerabilities. Forking - Check https://github.com/termux/termux-app/blob/master/termux-shared/src/main/java/com/termux/shared/termux/TermuxConstants.java javadocs for instructions on what changes to make in the app to change package name. - You also need to recompile bootstrap zip for the new package name. Check building bootstrap, here and here. - Currently, not all plugins use from library and have hardcoded values and will need to be manually patched. - If forking termux plugins, check Forking and Local Development for info on how to use termux libraries for plugins.