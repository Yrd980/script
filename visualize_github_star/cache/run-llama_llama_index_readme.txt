üóÇÔ∏è LlamaIndex ü¶ô !PyPI - Downloadshttps://pypi.org/project/llama-index/ !Buildhttps://github.com/run-llama/llamaindex/actions/workflows/buildpackage.yml !GitHub contributorshttps://github.com/jerryjliu/llamaindex/graphs/contributors !Discordhttps://discord.gg/dGcwcsnxhU !Twitterhttps://x.com/llamaindex !Reddithttps://www.reddit.com/r/LlamaIndex/ !Ask AIhttps://www.phorm.ai/query?projectId=c5863b56-6703-4a5d-87b6-7e6031bf16b6 LlamaIndex GPT Index is a data framework for your LLM application. Building with LlamaIndex typically involves working with LlamaIndex core and a chosen set of integrations or plugins. There are two ways to start building with LlamaIndex in Python: 1. Starter: https://pypi.org/project/llama-index/. A starter Python package that includes core LlamaIndex as well as a selection of integrations. 2. Customized: https://pypi.org/project/llama-index-core/. Install core LlamaIndex and add your chosen LlamaIndex integration packages on LlamaHub that are required for your application. There are over 300 LlamaIndex integration packages that work seamlessly with core, allowing you to build with your preferred LLM, embedding, and vector store providers. The LlamaIndex Python library is namespaced such that import statements which include imply that the core package is being used. In contrast, those statements without imply that an integration package is being used. Important Links LlamaIndex.TS Typescript/Javascript Documentation X formerly Twitter LinkedIn Reddit Discord Ecosystem - LlamaHub community library of data loaders - LlamaLab cutting-edge AGI projects using LlamaIndex üöÄ Overview NOTE: This README is not updated as frequently as the documentation. Please check out the documentation above for the latest updates! Context - LLMs are a phenomenal piece of technology for knowledge generation and reasoning. They are pre-trained on large amounts of publicly available data. - How do we best augment LLMs with our own private data? We need a comprehensive toolkit to help perform this data augmentation for LLMs. Proposed Solution That's where LlamaIndex comes in. LlamaIndex is a "data framework" to help you build LLM apps. It provides the following tools: - Offers data connectors to ingest your existing data sources and data formats APIs, PDFs, docs, SQL, etc.. - Provides ways to structure your data indices, graphs so that this data can be easily used with LLMs. - Provides an advanced retrieval/query interface over your data: Feed in any LLM input prompt, get back retrieved context and knowledge-augmented output. - Allows easy integrations with your outer application framework e.g. with LangChain, Flask, Docker, ChatGPT, or anything else. LlamaIndex provides tools for both beginner users and advanced users. Our high-level API allows beginner users to use LlamaIndex to ingest and query their data in 5 lines of code. Our lower-level APIs allow advanced users to customize and extend any module data connectors, indices, retrievers, query engines, reranking modules, to fit their needs. üí° Contributing Interested in contributing? Contributions to LlamaIndex core as well as contributing integrations that build on the core are both accepted and highly encouraged! See our Contribution Guide for more details. New integrations should meaningfully integrate with existing LlamaIndex framework components. At the discretion of LlamaIndex maintainers, some integrations may be declined. üìÑ Documentation Full documentation can be found here Please check it out for the most up-to-date tutorials, how-to guides, references, and other resources! üíª Example Usage Examples are in the folder. Indices are in the folder see list of indices below. To build a simple vector store index using OpenAI: To build a simple vector store index using non-OpenAI LLMs, e.g. Llama 2 hosted on Replicate, where you can easily create a free trial API token: To query: By default, data is stored in-memory. To persist to disk under : To reload from disk: üîß Dependencies We use poetry as the package manager for all Python packages. As a result, the dependencies of each Python package can be found by referencing the file in each of the package's folders. üìñ Citation Reference to cite if you use LlamaIndex in a paper: