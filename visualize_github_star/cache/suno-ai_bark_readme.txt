> Notice: Bark is Suno's open-source text-to-speech+ model. If you are looking for our text-to-music models, please visit us on our web page and join our community on Discord. 🐶 Bark !https://suno.ai/discord !Twitterhttps://twitter.com/sunoai > 🔗 Examples • Suno Studio Waitlist • Updates • How to Use • Installation • FAQ //: <br> vertical spaces around image <br> <p align="center"> <img src="https://user-images.githubusercontent.com/5068315/235310676-a4b3b511-90ec-4edf-8153-7ccf14905d73.png" width="500"></img> </p> <br> Bark is a transformer-based text-to-audio model created by Suno. Bark can generate highly realistic, multilingual speech as well as other audio - including music, background noise and simple sound effects. The model can also produce nonverbal communications like laughing, sighing and crying. To support the research community, we are providing access to pretrained model checkpoints, which are ready for inference and available for commercial use. ⚠ Disclaimer Bark was developed for research purposes. It is not a conventional text-to-speech model but instead a fully generative text-to-audio model, which can deviate in unexpected ways from provided prompts. Suno does not take responsibility for any output generated. Use at your own risk, and please act responsibly. 📖 Quick Index 🚀 Updates 💻 Installation 🐍 Usage 🌀 Live Examples ❓ FAQ 🎧 Demos !Open in Spaceshttps://huggingface.co/spaces/suno/bark !Open on Replicatehttps://replicate.com/suno-ai/bark !Open In Colabhttps://colab.research.google.com/drive/1eJfA2XUa-mXwdMy7DoYKVYHI1iTd9Vkt?usp=sharing 🚀 Updates 2023.05.01 - ©️ Bark is now licensed under the MIT License, meaning it's now available for commercial use! - ⚡ 2x speed-up on GPU. 10x speed-up on CPU. We also added an option for a smaller version of Bark, which offers additional speed-up with the trade-off of slightly lower quality. - 📕 Long-form generation, voice consistency enhancements and other examples are now documented in a new notebooks section. - 👥 We created a voice prompt library. We hope this resource helps you find useful prompts for your use cases! You can also join us on Discord, where the community actively shares useful prompts in the audio-prompts channel. - 💬 Growing community support and access to new features here: !https://suno.ai/discord - 💾 You can now use Bark with GPUs that have low VRAM <4GB. 2023.04.20 - 🐶 Bark release! 🐍 Usage in Python <details open> <summary><h3>🪑 Basics</h3></summary> pizza1.webm </details> <details open> <summary><h3>🌎 Foreign Language</h3></summary> <br> Bark supports various languages out-of-the-box and automatically determines language from input text. When prompted with code-switched text, Bark will attempt to employ the native accent for the respective languages. English quality is best for the time being, and we expect other languages to further improve with scaling. <br> <br> sunokorean.webm Note: since Bark recognizes languages automatically from input text, it is possible to use, for example, a german history prompt with english text. This usually leads to english audio with a german accent. sunogermanaccent.webm </details> <details open> <summary><h3>🎶 Music</h3></summary> Bark can generate all types of audio, and, in principle, doesn't see a difference between speech and music. Sometimes Bark chooses to generate text as music, but you can help it out by adding music notes around your lyrics. <br> <br> lion.webm </details> <details open> <summary><h3>🎤 Voice Presets</h3></summary> Bark supports 100+ speaker presets across supported languages. You can browse the library of supported voice presets HERE, or in the code. The community also often shares presets in Discord. > Bark tries to match the tone, pitch, emotion and prosody of a given preset, but does not currently support custom voice cloning. The model also attempts to preserve music, ambient noise, etc. sloth.webm </details> 📃 Generating Longer Audio By default, works well with around 13 seconds of spoken text. For an example of how to do long-form generation, see 👉 Notebook 👈 <details> <summary>Click to toggle example long-form generations from the example notebook</summary> dialog.webm longformadvanced.webm longformbasic.webm </details> Command line 💻 Installation ‼️ CAUTION ‼️ Do NOT use . It installs a different package, which is not managed by Suno. or 🤗 Transformers Usage Bark is available in the 🤗 Transformers library from version 4.31.0 onwards, requiring minimal dependencies and additional packages. Steps to get started: 1. First install the 🤗 Transformers library from main: 2. Run the following Python code to generate speech samples: 3. Listen to the audio samples either in an ipynb notebook: Or save them as a file using a third-party library, e.g. : For more details on using the Bark model for inference using the 🤗 Transformers library, refer to the Bark docs or the hands-on Google Colab. 🛠️ Hardware and Inference Speed Bark has been tested and works on both CPU and GPU , CUDA 11.7 and CUDA 12.0. On enterprise GPUs and PyTorch nightly, Bark can generate audio in roughly real-time. On older GPUs, default colab, or CPU, inference time might be significantly slower. For older GPUs or CPU you might want to consider using smaller models. Details can be found in out tutorial sections here. The full version of Bark requires around 12GB of VRAM to hold everything on GPU at the same time. To use a smaller version of the models, which should fit into 8GB VRAM, set the environment flag . If you don't have hardware available or if you want to play with bigger versions of our models, you can also sign up for early access to our model playground here. ⚙️ Details Bark is fully generative text-to-audio model devolved for research and demo purposes. It follows a GPT style architecture similar to AudioLM and Vall-E and a quantized Audio representation from EnCodec. It is not a conventional TTS model, but instead a fully generative text-to-audio model capable of deviating in unexpected ways from any given script. Different to previous approaches, the input text prompt is converted directly to audio without the intermediate use of phonemes. It can therefore generalize to arbitrary instructions beyond speech such as music lyrics, sound effects or other non-speech sounds. Below is a list of some known non-speech sounds, but we are finding more every day. Please let us know if you find patterns that work particularly well on Discord! - - - - - - - or for hesitations - for song lyrics - CAPITALIZATION for emphasis of a word - and to bias Bark toward male and female speakers, respectively Supported Languages | Language | Status | | --- | :---: | | English en | ✅ | | German de | ✅ | | Spanish es | ✅ | | French fr | ✅ | | Hindi hi | ✅ | | Italian it | ✅ | | Japanese ja | ✅ | | Korean ko | ✅ | | Polish pl | ✅ | | Portuguese pt | ✅ | | Russian ru | ✅ | | Turkish tr | ✅ | | Chinese, simplified zh | ✅ | Requests for future language support here or in the forums channel on Discord. 🙏 Appreciation - nanoGPT for a dead-simple and blazing fast implementation of GPT-style models - EnCodec for a state-of-the-art implementation of a fantastic audio codec - AudioLM for related training and inference code - Vall-E, AudioLM and many other ground-breaking papers that enabled the development of Bark © License Bark is licensed under the MIT License. 📱 Community - Twitter - Discord 🎧 Suno Studio Early Access We’re developing a playground for our models, including Bark. If you are interested, you can sign up for early access here. ❓ FAQ How do I specify where models are downloaded and cached? Bark uses Hugging Face to download and store models. You can see find more info here. Bark's generations sometimes differ from my prompts. What's happening? Bark is a GPT-style model. As such, it may take some creative liberties in its generations, resulting in higher-variance model outputs than traditional text-to-speech approaches. What voices are supported by Bark? Bark supports 100+ speaker presets across supported languages. You can browse the library of speaker presets here. The community also shares presets in Discord. Bark also supports generating unique random voices that fit the input text. Bark does not currently support custom voice cloning. Why is the output limited to ~13-14 seconds? Bark is a GPT-style model, and its architecture/context window is optimized to output generations with roughly this length. How much VRAM do I need? The full version of Bark requires around 12Gb of memory to hold everything on GPU at the same time. However, even smaller cards down to ~2Gb work with some additional settings. Simply add the following code snippet before your generation: My generated audio sounds like a 1980s phone call. What's happening? Bark generates audio from scratch. It is not meant to create only high-fidelity, studio-quality speech. Rather, outputs could be anything from perfect speech to multiple people arguing at a baseball game recorded with bad microphones.