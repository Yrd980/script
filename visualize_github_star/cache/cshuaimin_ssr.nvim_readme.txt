ssr.nvim Structural search and replace for Neovim. https://user-images.githubusercontent.com/24775746/199903092-a499dee1-af0a-444f-8ac1-24102454196f.mov Installation with packer.nvim: then add a mapping to open SSR: Usage First put your cursor on the structure you want to search and replace if you are not sure, select a region instead, then open SSR by pressing . In the SSR float window you can see the placeholder search code, you can replace part of it with wildcards. A wildcard is an identifier starts with , like . A wildcard in the search pattern will match any AST node and will reference it in the replacement. Press to replace all matches in current buffer, or to choose which match to replace. The context When opening SSR, the cursor position is important, you need to put the cursor on the structure you want to search. If the placeholder code is not correct, exit SSR with and select the region instead. ssr.nvim parses your search pattern to syntax trees to perform structural searching. However directly parsing code without context is not accurate, for example TypeScript function argument will be parsed as a label without context, so ssr.nvim parses pattern in it's original context. Limitations ssr.nvim performs searching and replacing at AST level and doesn't understand code as much as LSP servers do. Use LSP server's ssr implementation if possible.