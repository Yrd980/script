google-java-format is a program that reformats Java source code to comply with Google Java Style. Google Java Style: https://google.github.io/styleguide/javaguide.html Using the formatter From the command-line Download the formatter and run it with: Note that it uses the module to parse the Java source code. The binary version used must therefore be from a JDK not JRE with a version equal to or newer than the Java language version of the files being formatted. The minimum Java version can be found in currently Java 17. An alternative is to use the available GraalVM based native binaries instead. The formatter can act on whole files, on limited lines , on specific offsets , passing through to standard-out default or altered in-place . To reformat changed lines in a specific patch, use https://github.com/google/google-java-format/blob/master/scripts/google-java-format-diff.py. Note: There is no configurability as to the formatter's algorithm for formatting. This is a deliberate design decision to unify our code formatting on a single format. IntelliJ, Android Studio, and other JetBrains IDEs A google-java-format IntelliJ plugin is available from the plugin repository. To install it, go to your IDE's settings and select the category. Click the tab, search for the plugin, and click the button. The plugin will be disabled by default. To enable, open the Project settings, then click "google-java-format Settings" and check the "Enable google-java-format" checkbox. To enable it by default in new projects, open the default settings for new projects and configure it under "Other Settings/google-java-format Settings". When enabled, it will replace the normal and actions. IntelliJ JRE Config The google-java-format plugin uses some internal classes that aren't available without extra configuration. To use the plugin, you need to add some options to your IDE's Java runtime. To do that, go to and paste in these lines: Once you've done that, restart the IDE. Eclipse The latest version of the Eclipse plugin can be downloaded from the releases page. Drop it into the Eclipse drop-ins folder to activate the plugin. The plugin adds a formatter implementation that can be configured in . Third-party integrations Visual Studio Code google-java-format-for-vs-code Gradle plugins spotless sherter/google-java-format-gradle-plugin Apache Maven plugins spotless spotify/fmt-maven-plugin talios/googleformatter-maven-plugin Cosium/maven-git-code-format: A maven plugin that automatically deploys google-java-format as a pre-commit git hook. SBT plugins sbt/sbt-java-formatter Github Actions googlejavaformat-action: Automatically format your Java files when you push on github as a library The formatter can be used in software which generates java to output more legible java code. Just include the library in your maven/gradle/etc. configuration. uses internal javac APIs for parsing Java source. The following JVM flags are required when running on JDK 16 and newer, due to JEP 396: Strongly Encapsulate JDK Internals by Default: Maven Gradle You can then use the formatter through the methods. E.g. or Your starting point should be the instance methods of . Building from source Contributing Please see the contributors guide for details. License