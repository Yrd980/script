<!-- markdownlint-disable MD001 MD041 --> <p align="center"> <picture> <source media="prefers-color-scheme: dark" srcset="https://raw.githubusercontent.com/vllm-project/vllm/main/docs/assets/logos/vllm-logo-text-dark.png"> <img alt="vLLM" src="https://raw.githubusercontent.com/vllm-project/vllm/main/docs/assets/logos/vllm-logo-text-light.png" width=55%> </picture> </p> <h3 align="center"> Easy, fast, and cheap LLM serving for everyone </h3> <p align="center"> | <a href="https://docs.vllm.ai"><b>Documentation</b></a> | <a href="https://blog.vllm.ai/"><b>Blog</b></a> | <a href="https://arxiv.org/abs/2309.06180"><b>Paper</b></a> | <a href="https://x.com/vllmproject"><b>Twitter/X</b></a> | <a href="https://discuss.vllm.ai"><b>User Forum</b></a> | <a href="https://slack.vllm.ai"><b>Developer Slack</b></a> | </p> --- Latest News ðŸ”¥ - 2025/08 We hosted vLLM Beijing Meetup focusing on large-scale LLM deployment! Please find the meetup slides here and the recording here. - 2025/05 We hosted NYC vLLM Meetup! Please find the meetup slides here. - 2025/05 vLLM is now a hosted project under PyTorch Foundation! Please find the announcement here. - 2025/01 We are excited to announce the alpha release of vLLM V1: A major architectural upgrade with 1.7x speedup! Clean code, optimized execution loop, zero-overhead prefix caching, enhanced multimodal support, and more. Please check out our blog post here. <details> <summary>Previous News</summary> - 2025/04 We hosted Asia Developer Day! Please find the meetup slides from the vLLM team here. - 2025/03 We hosted vLLM x Ollama Inference Night! Please find the meetup slides from the vLLM team here. - 2025/03 We hosted the first vLLM China Meetup! Please find the meetup slides from vLLM team here. - 2025/03 We hosted the East Coast vLLM Meetup! Please find the meetup slides here. - 2025/02 We hosted the ninth vLLM meetup with Meta! Please find the meetup slides from vLLM team here and AMD here. The slides from Meta will not be posted. - 2025/01 We hosted the eighth vLLM meetup with Google Cloud! Please find the meetup slides from vLLM team here, and Google Cloud team here. - 2024/12 vLLM joins pytorch ecosystem! Easy, Fast, and Cheap LLM Serving for Everyone! - 2024/11 We hosted the seventh vLLM meetup with Snowflake! Please find the meetup slides from vLLM team here, and Snowflake team here. - 2024/10 We have just created a developer slack slack.vllm.ai focusing on coordinating contributions and discussing features. Please feel free to join us there! - 2024/10 Ray Summit 2024 held a special track for vLLM! Please find the opening talk slides from the vLLM team here. Learn more from the talks from other vLLM contributors and users! - 2024/09 We hosted the sixth vLLM meetup with NVIDIA! Please find the meetup slides here. - 2024/07 We hosted the fifth vLLM meetup with AWS! Please find the meetup slides here. - 2024/07 In partnership with Meta, vLLM officially supports Llama 3.1 with FP8 quantization and pipeline parallelism! Please check out our blog post here. - 2024/06 We hosted the fourth vLLM meetup with Cloudflare and BentoML! Please find the meetup slides here. - 2024/04 We hosted the third vLLM meetup with Roblox! Please find the meetup slides here. - 2024/01 We hosted the second vLLM meetup with IBM! Please find the meetup slides here. - 2023/10 We hosted the first vLLM meetup with a16z! Please find the meetup slides here. - 2023/08 We would like to express our sincere gratitude to Andreessen Horowitz a16z for providing a generous grant to support the open-source development and research of vLLM. - 2023/06 We officially released vLLM! FastChat-vLLM integration has powered LMSYS Vicuna and Chatbot Arena since mid-April. Check out our blog post. </details> --- About vLLM is a fast and easy-to-use library for LLM inference and serving. Originally developed in the Sky Computing Lab at UC Berkeley, vLLM has evolved into a community-driven project with contributions from both academia and industry. vLLM is fast with: - State-of-the-art serving throughput - Efficient management of attention key and value memory with PagedAttention - Continuous batching of incoming requests - Fast model execution with CUDA/HIP graph - Quantizations: GPTQ, AWQ, AutoRound, INT4, INT8, and FP8 - Optimized CUDA kernels, including integration with FlashAttention and FlashInfer - Speculative decoding - Chunked prefill vLLM is flexible and easy to use with: - Seamless integration with popular Hugging Face models - High-throughput serving with various decoding algorithms, including parallel sampling, beam search, and more - Tensor, pipeline, data and expert parallelism support for distributed inference - Streaming outputs - OpenAI-compatible API server - Support NVIDIA GPUs, AMD CPUs and GPUs, Intel CPUs and GPUs, PowerPC CPUs, TPU, and AWS Neuron - Prefix caching support - Multi-LoRA support vLLM seamlessly supports most popular open-source models on HuggingFace, including: - Transformer-like LLMs e.g., Llama - Mixture-of-Expert LLMs e.g., Mixtral, Deepseek-V2 and V3 - Embedding Models e.g., E5-Mistral - Multi-modal LLMs e.g., LLaVA Find the full list of supported models here. Getting Started Install vLLM with or from source: Visit our documentation to learn more. - Installation - Quickstart - List of Supported Models Contributing We welcome and value any contributions and collaborations. Please check out Contributing to vLLM for how to get involved. Sponsors vLLM is a community project. Our compute resources for development and testing are supported by the following organizations. Thank you for your support! <!-- Note: Please sort them in alphabetical order. --> <!-- Note: Please keep these consistent with docs/community/sponsors.md --> Cash Donations: - a16z - Dropbox - Sequoia Capital - Skywork AI - ZhenFund Compute Resources: - Alibaba Cloud - AMD - Anyscale - AWS - Crusoe Cloud - Databricks - DeepInfra - Google Cloud - Intel - Lambda Lab - Nebius - Novita AI - NVIDIA - Replicate - Roblox - RunPod - Trainy - UC Berkeley - UC San Diego Slack Sponsor: Anyscale We also have an official fundraising venue through OpenCollective. We plan to use the fund to support the development, maintenance, and adoption of vLLM. Citation If you use vLLM for your research, please cite our paper: Contact Us <!-- --8<-- start:contact-us --> - For technical questions and feature requests, please use GitHub Issues or Discussions - For discussing with fellow users, please use the vLLM Forum - For coordinating contributions and development, please use Slack - For security disclosures, please use GitHub's Security Advisories feature - For collaborations and partnerships, please contact us at vllm-questions@lists.berkeley.edu <!-- --8<-- end:contact-us --> Media Kit - If you wish to use vLLM's logo, please refer to our media kit repo