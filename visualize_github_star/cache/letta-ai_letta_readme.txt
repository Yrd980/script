<p align="center"> <picture> <source media="prefers-color-scheme: dark" srcset="https://raw.githubusercontent.com/letta-ai/letta/refs/heads/main/assets/Letta-logo-RGBGreyonTransparentcroppedsmall.png"> <source media="prefers-color-scheme: light" srcset="https://raw.githubusercontent.com/letta-ai/letta/refs/heads/main/assets/Letta-logo-RGBOffBlackonTransparentcroppedsmall.png"> <img alt="Letta logo" src="https://raw.githubusercontent.com/letta-ai/letta/refs/heads/main/assets/Letta-logo-RGBGreyonOffBlackcroppedsmall.png" width="500"> </picture> </p> <div align="center"> <h1>Letta previously MemGPT</h1> <h3> Homepage // Documentation // ADE // Letta Cloud </h3> üëæ Letta is an open source framework for building stateful agents with advanced reasoning capabilities and transparent long-term memory. The Letta framework is white box and model-agnostic. !Discordhttps://discord.gg/letta !Twitter Followhttps://twitter.com/LettaAI !arxiv 2310.08560https://arxiv.org/abs/2310.08560 !Apache 2.0LICENSE !Releasehttps://github.com/cpacker/MemGPT/releases !Dockerhttps://hub.docker.com/r/letta/letta !GitHubhttps://github.com/cpacker/MemGPT <a href="https://trendshift.io/repositories/3612" target="blank"><img src="https://trendshift.io/api/badge/repositories/3612" alt="cpacker%2FMemGPT | Trendshift" style="width: 250px; height: 55px;" width="250" height="55"/></a> </div> > !IMPORTANT > Looking for MemGPT? You're in the right place! > > The MemGPT package and Docker image have been renamed to to clarify the distinction between MemGPT agents and the Letta API server / runtime that runs LLM agents as services. Read more about the relationship between MemGPT and Letta here. --- ‚ö° Quickstart The recommended way to use Letta is to run use Docker. To install Docker, see Docker's installation guide. For issues with installing Docker, see Docker's troubleshooting guide. You can also install Letta using see instructions below. üåñ Run the Letta server > !NOTE > Letta agents live inside the Letta server, which persists them to a database. You can interact with the Letta agents inside your Letta server via the REST API + Python / Typescript SDKs, and the Agent Development Environment a graphical interface. The Letta server can be connected to various LLM API backends OpenAI, Anthropic, vLLM, Ollama, etc.. To enable access to these LLM API providers, set the appropriate environment variables when you use : If you have many different LLM API keys, you can also set up a file instead and pass that to : Once the Letta server is running, you can access it via port e.g. sending REST API requests to . You can also connect your server to the Letta ADE to access and manage your agents in a web interface. üëæ Access the ADE Agent Development Environment > !NOTE > For a guided tour of the ADE, watch our ADE walkthrough on YouTube, or read our blog post and developer docs. The Letta ADE is a graphical user interface for creating, deploying, interacting and observing with your Letta agents. For example, if you're running a Letta server to power an end-user application such as a customer support chatbot, you can use the ADE to test, debug, and observe the agents in your server. You can also use the ADE as a general chat interface to interact with your Letta agents. <p align="center"> <picture> <source media="prefers-color-scheme: dark" srcset="https://raw.githubusercontent.com/letta-ai/letta/refs/heads/main/assets/exampleadescreenshot.png"> <source media="prefers-color-scheme: light" srcset="https://raw.githubusercontent.com/letta-ai/letta/refs/heads/main/assets/exampleadescreenshotlight.png"> <img alt="ADE screenshot" src="https://raw.githubusercontent.com/letta-ai/letta/refs/heads/main/assets/exampleadescreenshot.png" width="800"> </picture> </p> The ADE can connect to self-hosted Letta servers e.g. a Letta server running on your laptop, as well as the Letta Cloud service. When connected to a self-hosted / private server, the ADE uses the Letta REST API to communicate with your server. üñ•Ô∏è Connecting the ADE to your local Letta server To connect the ADE with your local Letta server, simply: 1. Start your Letta server 2. Visit https://app.letta.com and you will see "Local server" as an option in the left panel <p align="center"> <picture> <source media="prefers-color-scheme: dark" srcset="https://raw.githubusercontent.com/letta-ai/letta/refs/heads/main/assets/exampleadescreenshotagents.png"> <source media="prefers-color-scheme: light" srcset="https://raw.githubusercontent.com/letta-ai/letta/refs/heads/main/assets/exampleadescreenshotagentslight.png"> <img alt="Letta logo" src="https://raw.githubusercontent.com/letta-ai/letta/refs/heads/main/assets/exampleadescreenshotagents.png" width="800"> </picture> </p> üîê To password protect your server, include and in your command: üåê Connecting the ADE to an external self-hosted Letta server If your Letta server isn't running on for example, you deployed it on an external service like EC2: 1. Click "Add remote server" 2. Enter your desired server name, the IP address of the server, and the server password if set --- üßë‚ÄçüöÄ Frequently asked questions FAQ > "Do I need to install Docker to use Letta?" No, you can install Letta using via , as well as from source via . See instructions below. > "What's the difference between installing with vs ?" Letta gives your agents persistence they live indefinitely by storing all your agent data in a database. Letta is designed to be used with a PostgreSQL the world's most popular database, however, it is not possible to install PostgreSQL via , so the install of Letta defaults to using SQLite. If you have a PostgreSQL instance running on your own computer, you can still connect Letta installed via to PostgreSQL by setting the environment variable . Database migrations are not officially supported for Letta when using SQLite, so if you would like to ensure that you're able to upgrade to the latest Letta version and migrate your Letta agents data, make sure that you're using PostgreSQL as your Letta database backend. Full compatability table below: | Installation method | Start server command | Database backend | Data migrations supported? | |---|---|---|---| | | | SQLite | ‚ùå | | | + | PostgreSQL | ‚úÖ | | Install Docker | full command | PostgreSQL | ‚úÖ | > "How do I use the ADE locally?" To connect the ADE to your local Letta server, simply run your Letta server make sure you can access and go to https://app.letta.com. If you would like to use the old version of the ADE that runs on , downgrade to Letta version . > "If I connect the ADE to my local server, does my agent data get uploaded to letta.com?" No, the data in your Letta server database stays on your machine. The Letta ADE web application simply connects to your local Letta server via the REST API and provides a graphical interface on top of it to visualize your local Letta data in your browser's local state. > "Do I have to use your ADE? Can I build my own?" The ADE is built on top of the fully open source Letta server and Letta Agents API. You can build your own application like the ADE on top of the REST API view the documentation here. > "Can I interact with Letta agents via the CLI?" The recommended way to use Letta is via the REST API and ADE, however you can also access your agents via the CLI. <details> <summary>View instructions for running the Letta CLI</summary> You can chat with your agents via the Letta CLI tool . If you have a Letta Docker container running, you can use to run the Letta CLI inside the container: You can also use within the command to automatically find the ID of your Letta container: In the CLI tool, you'll be able to create new agents, or load existing agents: </details> --- ‚ö° Quickstart pip > !WARNING > Database migrations are not officially supported with > > When you install Letta with , the default database backend is you can still use an external service with your install of Letta by setting . > > We do not officially support migrations between Letta versions with backends, only . If you would like to keep your agent data across multiple Letta versions we highly recommend using the Docker install method which is the easiest way to use with Letta. <details> <summary>View instructions for installing with pip</summary> You can also install Letta with , which will default to using for the database backends whereas Docker will default to using . Step 1 - Install Letta using Step 2 - Set your environment variables for your chosen LLM / embedding providers For Ollama see our full documentation for examples of how to set up various providers: Step 3 - Run the Letta CLI You can create agents and chat with them via the Letta CLI tool : Step 4 - Run the Letta server You can start the Letta API server with see the full API reference here: </details> --- ü§ó How to contribute Letta is an open source project built by over a hundred contributors. There are many ways to get involved in the Letta OSS project! Contribute to the project: Interested in contributing? Start by reading our Contribution Guidelines. Ask a question: Join our community on Discord and direct your questions to the channel. Report issues or suggest features: Have an issue or a feature request? Please submit them through our GitHub Issues page. Explore the roadmap: Curious about future developments? View and comment on our project roadmap. Join community events: Stay updated with the event calendar or follow our Twitter account. --- Legal notices: By using Letta and related Letta services such as the Letta endpoint or hosted service, you are agreeing to our privacy policy and terms of service.