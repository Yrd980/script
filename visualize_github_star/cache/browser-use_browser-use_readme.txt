<picture> <source media="prefers-color-scheme: dark" srcset="./static/browser-use-dark.png"> <source media="prefers-color-scheme: light" srcset="./static/browser-use.png"> <img alt="Shows a black Browser Use Logo in light color mode and a white one in dark color mode." src="./static/browser-use.png" width="full"> </picture> <h1 align="center">Enable AI to control your browser ü§ñ</h1> !GitHub starshttps://github.com/gregpr07/browser-use/stargazers !Discordhttps://link.browser-use.com/discord !Cloudhttps://cloud.browser-use.com !Documentationhttps://docs.browser-use.com !Twitter Followhttps://x.com/intent/user?screenname=gregpr07 !Twitter Followhttps://x.com/intent/user?screenname=mamagnus00 !Weave Badgehttps://app.workweave.ai/reports/repository/orgT5Pvn3UBswTHIsN1dWS3voPg/881458615 üåê Browser-use is the easiest way to connect your AI agents with the browser. üí° See what others are building and share your projects in our Discord! Want Swag? Check out our Merch store. üå§Ô∏è Skip the setup - try our <b>hosted version</b> for instant browser automation! <b>Try the cloud ‚òÅÔ∏é</b>. Quick start With pip Python>=3.11: Install the browser: Spin up your agent: Add your API keys for the provider you want to use to your file. For other settings, models, and more, check out the documentation üìï. Test with UI You can test browser-use using its Web UI or Desktop App. Test with an interactive CLI You can also use our interactive CLI similar to code: MCP Integration Browser-use supports the Model Context Protocol MCP, enabling integration with Claude Desktop and other MCP-compatible clients. Use as MCP Server with Claude Desktop Add browser-use to your Claude Desktop configuration: This gives Claude Desktop access to browser automation tools for web scraping, form filling, and more. Connect External MCP Servers to Browser-Use Agent Browser-use agents can connect to multiple external MCP servers to extend their capabilities: See the MCP documentation for more details. Demos <br/><br/> Task: Add grocery items to cart, and checkout. !AI Did My Grocerieshttps://www.youtube.com/watch?v=L2Ya9PYNns8 <br/><br/> Prompt: Add my latest LinkedIn follower to my leads in Salesforce. !LinkedIn to Salesforce <br/><br/> Prompt: Read my CV & find ML jobs, save them to a file, and then start applying for them in new tabs, if you need help, ask me.' https://github.com/user-attachments/assets/171fb4d6-0355-46f2-863e-edb04a828d04 <br/><br/> Prompt: Write a letter in Google Docs to my Papa, thanking him for everything, and save the document as a PDF. !Letter to Papa <br/><br/> Prompt: Look up models with a license of cc-by-sa-4.0 and sort by most likes on Hugging face, save top 5 to file. https://github.com/user-attachments/assets/de73ee39-432c-4b97-b4e8-939fd7f323b3 <br/><br/> More examples For more examples see the examples folder or join the Discord and show off your project. You can also see our https://github.com/browser-use/awesome-prompts repo for prompting inspiration. Vision Tell your computer what to do, and it gets it done. Roadmap Agent - Improve agent memory to handle +100 steps - Enhance planning capabilities load website specific context - Reduce token consumption system prompt, DOM state DOM Extraction - Enable detection for all possible UI elements - Improve state representation for UI elements so that all LLMs can understand what's on the page Workflows - Let user record a workflow - which we can rerun with browser-use as a fallback - Make rerunning of workflows work, even if pages change User Experience - Create various templates for tutorial execution, job application, QA testing, social media, etc. which users can just copy & paste. - Improve docs - Make it faster Parallelization - Human work is sequential. The real power of a browser agent comes into reality if we can parallelize similar tasks. For example, if you want to find contact information for 100 companies, this can all be done in parallel and reported back to a main agent, which processes the results and kicks off parallel subtasks again. Contributing We love contributions! Feel free to open issues for bugs or feature requests. To contribute to the docs, check out the folder. üß™ How to make your agents robust? We offer to run your tasks in our CI‚Äîautomatically, on every update! - Add your task: Add a YAML file in see the tests/agenttasks/README.md for details. - Automatic validation: Every time we push updates, your task will be run by the agent and evaluated using your criteria. Local Setup To learn more about the library, check out the local setup üìï. is the primary development branch with frequent changes. For production use, install a stable versioned release instead. --- Swag Want to show off your Browser-use swag? Check out our Merch store. Good contributors will receive swag for free üëÄ. Citation If you use Browser Use in your research or project, please cite: <div align="center"> <img src="https://github.com/user-attachments/assets/06fa3078-8461-4560-b434-445510c1766f" width="400"/> !Twitter Followhttps://x.com/intent/user?screenname=gregpr07 !Twitter Followhttps://x.com/intent/user?screenname=mamagnus00 </div> <div align="center"> Made with ‚ù§Ô∏è in Zurich and San Francisco </div>