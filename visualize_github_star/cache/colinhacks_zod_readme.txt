<p align="center"> <img src="logo.svg" width="200px" align="center" alt="Zod logo" /> <h1 align="center">Zod</h1> <p align="center"> TypeScript-first schema validation with static type inference <br/> by <a href="https://x.com/colinhacks">@colinhacks</a> </p> </p> <br/> <p align="center"> <a href="https://github.com/colinhacks/zod/actions?query=branch%3Amain"><img src="https://github.com/colinhacks/zod/actions/workflows/test.yml/badge.svg?event=push&branch=main" alt="Zod CI status" /></a> <a href="https://opensource.org/licenses/MIT" rel="nofollow"><img src="https://img.shields.io/github/license/colinhacks/zod" alt="License"></a> <a href="https://www.npmjs.com/package/zod" rel="nofollow"><img src="https://img.shields.io/npm/dw/zod.svg" alt="npm"></a> <a href="https://discord.gg/KaSRdyX2vc" rel="nofollow"><img src="https://img.shields.io/discord/893487829802418277?label=Discord&logo=discord&logoColor=white" alt="discord server"></a> <a href="https://github.com/colinhacks/zod" rel="nofollow"><img src="https://img.shields.io/github/stars/colinhacks/zod" alt="stars"></a> </p> <div align="center"> <a href="https://zod.dev/api">Docs</a> <span>&nbsp;&nbsp;‚Ä¢&nbsp;&nbsp;</span> <a href="https://discord.gg/RcG33DQJdf">Discord</a> <span>&nbsp;&nbsp;‚Ä¢&nbsp;&nbsp;</span> <a href="https://twitter.com/colinhacks">ùïè</a> <span>&nbsp;&nbsp;‚Ä¢&nbsp;&nbsp;</span> <a href="https://bsky.app/profile/zod.dev">Bluesky</a> <br /> </div> <br/> <br/> <h2 align="center">Featured sponsor: Jazz</h2> <div align="center"> <a href="https://jazz.tools/?utmsource=zod"> <picture width="85%" > <source media="prefers-color-scheme: dark" srcset="https://raw.githubusercontent.com/garden-co/jazz/938f6767e46cdfded60e50d99bf3b533f4809c68/homepage/homepage/public/Zod%20sponsor%20message.png"> <img alt="jazz logo" src="https://raw.githubusercontent.com/garden-co/jazz/938f6767e46cdfded60e50d99bf3b533f4809c68/homepage/homepage/public/Zod%20sponsor%20message.png" width="85%"> </picture> </a> <br/> <p><sub>Learn more about <a target="blank" rel="noopener noreferrer" href="mailto:sponsorship@colinhacks.com">featured sponsorships</a></sub></p> </div> <br/> <br/> <br/> Read the docs ‚Üí <br/> <br/> What is Zod? Zod is a TypeScript-first validation library. Define a schema and parse some data with it. You'll get back a strongly typed, validated result. <br/> Features - Zero external dependencies - Works in Node.js and all modern browsers - Tiny: core bundle gzipped - Immutable API: methods return a new instance - Concise interface - Works with TypeScript and plain JS - Built-in JSON Schema conversion - Extensive ecosystem <br/> Installation <br/> Basic usage Before you can do anything else, you need to define a schema. For the purposes of this guide, we'll use a simple object schema. Parsing data Given any Zod schema, use to validate an input. If it's valid, Zod returns a strongly-typed deep clone of the input. Note ‚Äî If your schema uses certain asynchronous APIs like refinements or transforms, you'll need to use the method instead. Handling errors When validation fails, the method will throw a instance with granular information about the validation issues. To avoid a block, you can use the method to get back a plain result object containing either the successfully parsed data or a . The result type is a discriminated union, so you can handle both cases conveniently. Note ‚Äî If your schema uses certain asynchronous APIs like refinements or transforms, you'll need to use the method instead. Inferring types Zod infers a static type from your schema definitions. You can extract this type with the utility and use it however you like. In some cases, the input & output types of a schema can diverge. For instance, the API can convert the input from one type to another. In these cases, you can extract the input and output types independently: