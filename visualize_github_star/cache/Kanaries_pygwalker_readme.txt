English | Español | Français | Deutsch | 中文 | Türkçe | 日本語 | 한국어 | Русский <p align="center"><a href="https://github.com/Kanaries/pygwalker"><img width=100% alt="" src="https://github.com/user-attachments/assets/f90db669-6e5a-45d3-942e-547c9d0471c9" /></a></p> <h2 align="center">PyGWalker: A Python Library for Exploratory Data Analysis with Visualization</h2> <p align="center"> <a href="https://arxiv.org/abs/2406.11637"> <img src="https://img.shields.io/badge/arXiv-2406.11637-b31b1b.svg" height="18" align="center"> </a> <a href="https://badge.fury.io/py/pygwalker"> <img src="https://badge.fury.io/py/pygwalker.svg" alt="PyPI version" height="18" align="center" /> </a> <a href="https://mybinder.org/v2/gh/Kanaries/pygwalker/main"> <img src="https://mybinder.org/badgelogo.svg" alt="binder" height="18" align="center" /> </a> <a href="https://pypi.org/project/pygwalker"> <img src="https://img.shields.io/pypi/dm/pygwalker" alt="PyPI downloads" height="18" align="center" /> </a> <a href="https://anaconda.org/conda-forge/pygwalker"> <img src="https://anaconda.org/conda-forge/pygwalker/badges/version.svg" alt="conda-forge" height="18" align="center" /> </a> </p> <p align="center"> <a href="https://discord.gg/Z4ngFWXz2U"> <img alt="discord invitation link" src="https://dcbadge.vercel.app/api/server/Z4ngFWXz2U?style=flat" align="center" /> </a> <a href='https://twitter.com/intent/follow?originalreferer=https%3A%2F%2Fpublish.twitter.com%2F&refsrc=twsrc%5Etfw&screenname=kanariesdata&twp=followbutton'> <img alt="Twitter Follow" src="https://img.shields.io/twitter/follow/kanariesdata?style=social" alt='Twitter' align="center" /> </a> <a href="https://kanaries-community.slack.com/join/sharedinvite/zt-20kpp56wl-ke9S0MxTcNQjUhKf6SOfvQ/shared-invite/email"> <img src="https://img.shields.io/badge/Slack-green?style=flat-square&logo=slack&logoColor=white" alt="Join Kanaries on Slack" align="center" /> </a> </p> PyGWalker can simplify your Jupyter Notebook data analysis and data visualization workflow, by turning your pandas dataframe into an interactive user interface for visual exploration. PyGWalker pronounced like "Pig Walker", just for fun is named as an abbreviation of "Python binding of Graphic Walker". It integrates Jupyter Notebook with Graphic Walker, an open-source alternative to Tableau. It allows data scientists to visualize / clean / annotates the data with simple drag-and-drop operations and even natural language queries. https://github.com/Kanaries/pygwalker/assets/22167673/2b940e11-cf8b-4cde-b7f6-190fb10ee44b > !TIP > If you want more AI features, we also build runcell, an AI Code Agent in Jupyter that understands your code/data/cells and generate code, execute cells and take actions for you. It can be used in jupyter lab with https://github.com/user-attachments/assets/9ec64252-864d-4bd1-8755-83f9b0396d38 Visit Google Colab, Kaggle Code or Graphic Walker Online Demo to test it out! > If you prefer using R, check GWalkR, the R wrapper of Graphic Walker. > If you prefer a Desktop App that can be used offline and without any coding, check out PyGWalker Desktop. Features PyGWalker is a Python library that simplifies data analysis and visualization workflows by turning pandas DataFrames into interactive visual interfaces. It offers a variety of features that make it a powerful tool for data exploration: - Interactive Data Exploration: - Drag-and-drop interface for easy visualization creation. - Real-time updates as you make changes to the visualization. - Ability to zoom, pan, and filter the data. - Data Cleaning and Transformation: - Visual data cleaning tools to identify and remove outliers or inconsistencies. - Ability to create new variables and features based on existing data. - Advanced Visualization Capabilities: - Support for various chart types bar charts, line charts, scatter plots, etc.. - Customization options for colors, labels, and other visual elements. - Interactive features like tooltips and drill-down capabilities. - Integration with Jupyter Notebooks: - Seamless integration with Jupyter Notebooks for a smooth workflow. - Open-Source and Free: - Available for free and allows for customization and extension. Getting Started > Check our video tutorial about using pygwalker, pygwalker + streamlit and pygwalker + snowflake, How to explore data with PyGWalker in Python | Run in Kaggle | Run in Colab | |--------------------------------------------------------------|--------------------------------------------------------| | !Kaggle Codehttps://www.kaggle.com/code/lxy21495892/airbnb-eda-pygwalker-demo | !Google Colabhttps://colab.research.google.com/drive/171QUQeq-uTLgSj1u-P9DQig7Md1kpXQ2?usp=sharing | Setup pygwalker Before using pygwalker, make sure to install the packages through the command line using pip or conda. pip > Note > > For an early trial, you can install with to keep your version up to date with the latest release or even to obtain latest features and bug-fixes. Conda-forge or See conda-forge feedstock for more help. Use pygwalker in Jupyter Notebook Quick Start Import pygwalker and pandas to your Jupyter Notebook to get started. You can use pygwalker without breaking your existing workflow. For example, you can call up PyGWalker with the dataframe loaded in this way: !https://docs-us.oss-us-west-1.aliyuncs.com/img/pygwalker/travel-ani-0-light.gif That's it. Now you have an interactive UI to analyze and visualize data with simple drag-and-drop operations. !https://docs-us.oss-us-west-1.aliyuncs.com/img/pygwalker/travel-ani-1-light.gif Cool things you can do with PyGwalker: + You can change the mark type into others to make different charts, for example, a line chart: !graphic walker line chart + To compare different measures, you can create a concat view by adding more than one measure into rows/columns. !graphic walker area chart + To make a facet view of several subviews divided by the value in dimension, put dimensions into rows or columns to make a facets view. !graphic walker scatter chart + PyGWalker contains a powerful data table, which provides a quick view of data and its distribution, profiling. You can also add filters or change the data types in the table. <img width="1537" alt="pygwalker-data-preview" src="https://github.com/Kanaries/pygwalker/assets/22167673/e3239932-bc3c-4de3-8387-1eabf2ca3a3a"> + You can save the data exploration result to a local file Better Practices There are some important parameters you should know when using pygwalker: + : for save/load chart config json string or file path + : for using duckdb as computing engine which allows you to handle larger dataset faster in your local machine. + : Deprecated, use instead. Example in local notebook Notebook Code: Click Here Preview Notebook Html: Click Here Example in cloud notebook Use PyGWalker in Kaggle Use PyGWalker in Google Colab Programmatic Export of Charts After saving a chart from the UI, you can retrieve the image directly from Python. Use pygwalker in Streamlit Streamlit allows you to host a web version of pygwalker without figuring out details of how web application works. Here are some of the app examples build with pygwalker and streamlit: + PyGWalker + streamlit for Bike sharing dataset + Earthquake Dashboard !https://earthquake-dashboard-pygwalker.streamlit.app/ API Reference pygwalker.walk | Parameter | Type | Default | Description | |------------------------|-----------------------------------------------------------|----------------------|--------------------------------------------------------------------------------------------------------------------------------------------------| | dataset | UnionDataFrame, Connector | - | The dataframe or connector to be used. | | gid | Unionint, str | None | ID for the GraphicWalker container div, formatted as 'gwalker-gid'. | | env | Literal'Jupyter', 'JupyterWidget' | 'JupyterWidget' | Environment using pygwalker. | | fieldspecs | OptionalDictstr, FieldSpec | None | Specifications of fields. Will be automatically inferred from if not specified. | | hidedatasourceconfig | bool | True | If True, hides DataSource import and export button. | | themekey | Literal'vega', 'g2' | 'g2' | Theme type for the GraphicWalker. | | appearance | Literal'media', 'light', 'dark' | 'media' | Theme setting. 'media' will auto-detect the OS theme. | | spec | str | "" | Chart configuration data. Can be a configuration ID, JSON, or remote file URL. | | usepreview | bool | True | If True, uses the preview function. | | kernelcomputation | bool | False | If True, uses kernel computation for data. | | kwargs | Any | - | Additional keyword arguments. | Development Refer it: local-development Tested Environments - x Jupyter Notebook - x Google Colab - x Kaggle Code - x Jupyter Lab - x Jupyter Lite - x Databricks Notebook Since version - x Jupyter Extension for Visual Studio Code Since version - x Most web applications compatiable with IPython kernels. Since version - x Streamlit Since version , enabled with - x DataCamp Workspace Since version - x Panel. See panel-graphic-walker. - x marimo Since version - Hex Projects - ...feel free to raise an issue for more environments. Configuration And Privacy Policypygwalker >= 0.3.10 You can use to set your privacy configuration. More details, refer it: How to set your privacy configuration? License Apache License 2.0 Contribution Guideline You are encouraged to contribute to PyGWalker in any way that suits your interests. This may include: - Answering questions and providing support - Sharing ideas for new features - Reporting bugs and glitches - Contributing code to the project - Offering suggestions for website improvements and better documentation Resources > PyGWalker Cloud is released! You can now save your charts to cloud, publish the interactive cell as a web app and use advanced GPT-powered features. Check out the PyGWalker Cloud for more details. + Check out more resources about PyGWalker on Kanaries PyGWalker + PyGWalker Paper PyGWalker: On-the-fly Assistant for Exploratory Visual Data Analysis + We are also working on RATH: an Open Source, Automate exploratory data analysis software that redefines the workflow of data wrangling, exploration and visualization with AI-powered automation. Check out the Kanaries website and RATH GitHub for more! + Youtube: How to explore data with PyGWalker in Python + Use pygwalker to build visual analysis app in streamlit + Use panel-graphic-walker to build data visualization apps with Panel. + If you encounter any issues and need support, please join our Discord channel or raise an issue on github. + Share pygwalker on these social media platforms if you like it! !Reddithttps://reddit.com/submit?url=https://github.com/Kanaries/pygwalker&title=Say%20Hello%20to%20pygwalker%3A%20Combining%20Jupyter%20Notebook%20with%20a%20Tableau-like%20UI !HackerNewshttps://news.ycombinator.com/submitlink?u=https://github.com/Kanaries/pygwalker !Twitterhttps://twitter.com/share?url=https://github.com/Kanaries/pygwalker&text=Say%20Hello%20to%20pygwalker%3A%20Combining%20Jupyter%20Notebook%20with%20a%20Tableau-alternative%20UI !Facebookhttps://www.facebook.com/sharer/sharer.php?u=https://github.com/Kanaries/pygwalker !LinkedInhttps://www.linkedin.com/shareArticle?url=https://github.com/Kanaries/pygwalker&&title=Say%20Hello%20to%20pygwalker%3A%20Combining%20Jupyter%20Notebook%20with%20a%20Tableau-alternative%20UI