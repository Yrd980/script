Proxychains.exe - Proxychains for Windows README !Build Statushttps://github.com/shunf4/proxychains.exe/actions?query=workflow%3A%22C%2FC%2B%2B+CI%22 README | 简体中文文档 Proxychains.exe is a proxifier for Win32Windows or Cygwin/Msys2 programs. It hijacks most of the Win32 or Cygwin programs' TCP connection, making them through one or more SOCKS5 proxyies. Proxychains.exe hooks network-related Ws232.dll Winsock functions in dynamically linked programs via injecting a DLL and redirects the connections through SOCKS5 proxyies. Proxychains.exe is a port or rewrite of proxychains4 or proxychains-ng to Win32 and Cygwin. It also uses uthash for some data structures and minhook for API hooking. Proxychains.exe is tested on Windows 10 x64 1909 18363.418, Windows 7 x64 SP1, Windows XP x86 SP3 and Cygwin 64-bit 3.1.2. Target OS should have Visual C++ Redistributable for Visual Studio 2015 installed. WARNING: ANONYMITY IS NOT GUARANTEED! WARNING: this program works only on dynamically linked programs. Also both proxychains.exe and the program to call must be the same platform and architecture use proxychainsx86.exe to call x86 program, proxychainsx64.exe to call x64 program; use Cygwin builds to call Cygwin program. WARNING: this program is based on hacks and is at its early development stage. Any unexpected situation may happen during usage. The called program may crash, not work, produce unwanted results etc. Be careful when working with this tool. WARNING: this program can be used to circumvent censorship. doing so can be VERY DANGEROUS in certain countries. ALWAYS MAKE SURE THAT PROXYCHAINS.EXE WORKS AS EXPECTED BEFORE USING IT FOR ANYTHING SERIOUS. This involves both the program and the proxy that you're going to use. For example, you can connect to some "what is my ip" service like ifconfig.me to make sure that it's not using your real ip. ONLY USE PROXYCHAINS.EXE IF YOU KNOW WHAT YOU'RE DOING. THE AUTHORS AND MAINTAINERS OF PROXYCHAINS DO NOT TAKE ANY RESPONSIBILITY FOR ANY ABUSE OR MISUSE OF THIS SOFTWARE AND THE RESULTING CONSEQUENCES. Download Download the pre-built binaries from Release Page. Build If you want to buid proxychains.exe yourself... First you need to clone this repository and run in it to retrieve all submodules. Win32 Build Open proxychains.exe.sln with a recent version Visual Studio tested with Visual Studio 2019 with platform toolset v141xp on a 64-bit Windows. Select the configuration Debug/Release and the platform x86/x64. Build the whole solution and you will see DLL file and executable file generated under . Cygwin/Msys2 Build Install Cygwin/Msys2 and various build tool packages gcc, w32api-headers, w32api-runtime etc. Run bash, switch to / directory and run . Install Copy , to some directory included in your environment variable. You can rename the main executable like to names you favor, like . Last you need to create the needed configuration file in correct place. See "Configuration". Configuration Proxychains.exe looks for configuration in the following order: On Win32 - file listed in environment variable or provided as a argument - - On modern Windows versions, a typical path is - On modern Windows versions, a typical path is On Cygwin - file listed in environment variable or provided as a argument - - - For options, see . Usage Example Run for more command line argument options. How It Works - Main program hooks Win32 API call. - Main program creates child process which is intended to be called. - After creating process, hooked injects the Hook DLL into child process. When child process gets injected, it hooks the Win32 API call below: - , so that every descendant process gets hooked; - , and , so that TCP connections get hijacked; - series, so that Fake IP is used to trace hostnames you visited, allowing remote DNS resolving; - etc. - Main program does not exit, but serves as a named pipe server. Child process communicates with the main program to exchange data including logs, hostnames, etc. Main program does most of the bookkeeping of Fake IP and presence of descendant processes. - When all descendant processes exit, main program exits. - Main program terminates all descendant processes when it receives a SIGINT Ctrl-C. About Cygwin/Msys2 and Busybox Cygwin is fully supported since 0.6.0! Switching the DLL injection technique from to modifying the target process' entry point, proxychains.exe now supports proxifying Cygwin/Msys2 process perfectly. Even when you call them with Win32 version of proxychains.exe. See DevNotes. If you want to proxify MinGit busybox variant, replace its with this version modified by me. See DevNotes. To-do and Known Issues ConEmu Compatibility ConEmu prevents its descendant processes to do . This means proxychains.exe is in no way compatible with terminals based on ConEmu like cmder. To-do In the following period, I will try to re-structure proxychains.exe files, functions, ... and complete some to-dos at the same time. - Domain name resolution should be case-insensitive - Proxify osu!lazer launcher? 11 - Configuration file path 9 - Recognize IPv4-mapped fake IPv6 address - Resolve proxy server name by custom hosts file, or at least declare it as not supported in docs - Properly handle "fork-and-exit" child process ? In this case the descendant processes' dns queries would never succeed - Remote DNS resolving based on UDP associate - Hook , coping with applications which do TCP fast open - Powershell wget bug - X IPs resolved from hosts file should also be filtered like fake ip fixed in 0.6.8 - X Resolve encoding issue regarding Cygwin and Mintty fixed in 0.6.7 - X Fake IPs should be filtered according to types of resolved IPs and hints in and , otherwise crash may happen fixed in 0.6.7 - X Add an option to totally prevent "DNS leak" ? Do name lookup on SOCKS5 server only fixed in 0.6.6 - x Connection closure should be correctly handled in and fixed in 0.6.5 - x A large part of socks5 server name possibly lost when parsing configuration fixed in 0.6.5 - x Correctly handle conf and hosts that start with BOM fixed in 0.6.5 - X Detect .NET CLR programs that is AnyCPU&prefers 32-bit/targeted x86 /targeted x64. These are "shimatta" programs, which must be injected by fixed in 0.6.2 - X in case of error during injection fixed in 0.6.1 - X Fix choco fixed in 0.6.1 - X Get rid of Offending&Matching host key confirmation when proxifying git/SSH, probably using a FQDN hash function fixed in 0.6.0 - X Tell the user if command line is bad under Cygwin fixed in 0.6.4 - X Inherit exit code of direct child fixed in 0.6.4 Developing Line ending, encoding and BOM Different file types are required to have different line endings, encodings. See for details. Licensing This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License version 2 as published by the Free Software Foundation, either version 3 of the License, or at your option any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License version 2 for more details. You should have received a copy of the GNU General Public License version 2 along with this program COPYING. If not, see <http://www.gnu.org/licenses/>. Uthash https://github.com/troydhanson/uthash This program contains uthash as a git submodule, which is published under The 1-clause BSD License: MinHook https://github.com/TsudaKageyu/minhook This program contains minhook as a git submodule, which is published under The 2-clause BSD License: