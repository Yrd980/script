gpt-engineer !GitHub Repo starshttps://github.com/gpt-engineer-org/gpt-engineer !Discord Followhttps://discord.gg/8tcDQ89Ej2 !Licensehttps://github.com/gpt-engineer-org/gpt-engineer/blob/main/LICENSE !GitHub Issues or Pull Requestshttps://github.com/gpt-engineer-org/gpt-engineer/issues !GitHub Release !Twitter Followhttps://twitter.com/antonosika The OG code genereation experimentation platform! If you are looking for the evolution that is an opinionated, managed service – check out gptengineer.app. If you are looking for a well maintained hackable CLI for – check out aider. gpt-engineer lets you: - Specify software in natural language - Sit back and watch as an AI writes and executes the code - Ask the AI to implement improvements Getting Started Install gpt-engineer For stable release: - For development: - - - - to activate the virtual environment We actively support Python 3.10 - 3.12. The last version to support Python 3.8 - 3.9 was 0.2.6. Setup API key Choose one of: - Export env variable you can add this to .bashrc so that you don't have to do it each time you start the terminal - - .env file: - Create a copy of named - Add your OPENAIAPIKEY in .env - Custom model: - See docs, supports local model, azure, etc. Check the Windows README for Windows usage. Other ways to run: - Use Docker instructions - Do everything in your browser: !Open in GitHub Codespaceshttps://github.com/gpt-engineer-org/gpt-engineer/codespaces Create new code default usage - Create an empty folder for your project anywhere on your computer - Create a file called no extension inside your new folder and fill it with instructions - Run with a relative path to your folder - For example: from the gpt-engineer directory root with your new folder in Improve existing code - Locate a folder with code which you want to improve anywhere on your computer - Create a file called no extension inside your new folder and fill it with instructions for how you want to improve the code - Run with a relative path to your folder - For example: from the gpt-engineer directory root with your folder in Benchmark custom agents - gpt-engineer installs the binary 'bench', which gives you a simple interface for benchmarking your own agent implementations against popular public datasets. - The easiest way to get started with benchmarking is by checking out the template repo, which contains detailed instructions and an agent template. - Currently supported benchmark: - APPS - MBPP The community has started work with different benchmarking initiatives, as described in this Loom video. Research Some of our community members have worked on different research briefs that could be taken further. See this document if you are interested. Terms By running gpt-engineer, you agree to our terms. Relation to gptengineer.app GPT Engineer gptengineer.app is a commercial project for the automatic generation of web apps. It features a UI for non-technical users connected to a git-controlled codebase. The gptengineer.app team is actively supporting the open source community. Features Pre Prompts You can specify the "identity" of the AI agent by overriding the folder with your own version of the . You can do so via the argument. Editing the is how you make the agent remember things between projects. Vision By default, gpt-engineer expects text input via a file. It can also accept image inputs for vision-capable models. This can be useful for adding UX or architecture diagrams as additional context for GPT Engineer. You can do this by specifying an image directory with the flag and setting a vision-capable model in the second CLI argument. E.g. Open source, local and alternative models By default, gpt-engineer supports OpenAI Models via the OpenAI API or Azure OpenAI API, as well as Anthropic models. With a little extra setup, you can also run with open source models like WizardCoder. See the documentation for example instructions. Mission The gpt-engineer community mission is to maintain tools that coding agent builders can use and facilitate collaboration in the open source community. If you are interested in contributing to this, we are interested in having you. If you want to see our broader ambitions, check out the roadmap, and join discord to learn how you can contribute to it. gpt-engineer is governed by a board of long-term contributors. If you contribute routinely and have an interest in shaping the future of gpt-engineer, you will be considered for the board. Significant contributors <ul style="list-style-type: none; padding: 0; display: flex; flex-wrap: wrap;"> <li style="margin-right: 10px; margin-bottom: 10px;"> <a href="https://github.com/ATheorell"> <img src="https://avatars.githubusercontent.com/u/143704446?s=64&v=4" alt="@ATheorell" width="32" height="32" style="border-radius: 50%;"> @ATheorell </a> </li> <li style="margin-right: 10px; margin-bottom: 10px;"> <a href="https://github.com/similato87"> <img src="https://avatars.githubusercontent.com/u/71301573?s=64&v=4" alt="@similato87" width="32" height="32" style="border-radius: 50%;"> @similato87 </a> </li> <li style="margin-right: 10px; margin-bottom: 10px;"> <a href="https://github.com/TheoMcCabe"> <img src="https://avatars.githubusercontent.com/u/9841960?s=64&v=4" alt="@TheoMcCabe" width="32" height="32" style="border-radius: 50%;"> @TheoMcCabe </a> </li> <li style="margin-right: 10px; margin-bottom: 10px;"> <a href="https://github.com/captivus"> <img src="https://avatars.githubusercontent.com/u/366332?s=64&v=4" alt="@captivus" width="32" height="32" style="border-radius: 50%;"> @captivus </a> </li> </ul> Example https://github.com/gpt-engineer-org/gpt-engineer/assets/4467025/40d0a9a8-82d0-4432-9376-136df0d57c99