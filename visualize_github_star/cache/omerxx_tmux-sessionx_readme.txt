Tmux SessionX A fuzzy Tmux session manager with preview capabilities, deleting, renaming and more! !image Prerequisites üõ†Ô∏è - tpm - fzf - fzf-tmux - bat - Optional: zoxide Install üíª Add this to your and run for TPM to install the plugin. <details> <summary> Install on Nix </summary> Via Nixpkgs The plugin can be found in Nixpkgs and can be installed in one of three ways: Via nix-env On NixOS Non NixOS Via NixOS Configuration Add the following Nix code to your NixOS Configuration, usually located in . Via nix-shell A nix-shell will temporarily modify your environment variable. This can be used to try a piece of software before deciding to permanently install it. Via flakes You may find that Nixpkgs does not have the latest updates of this plugin, this is where you might want to use a custom flake: In your flake.nix inputs In your tmux.nix configuration or anywhere else in your configuration </details> Configure ‚öôÔ∏è The default binding for this plugin is You can change it by adding this line with your desired key: Additional configuration options: Working with SessionX üë∑ Launching the plugin pops up an fzf-tmux "popup" with fuzzy search over existing session -current session. If you insert a non-existing name and hit enter, a new session with that name will be created. - will delete the selected session - scroll preview up - scroll preview down - select preview up - select preview down - "read": will launch a prompt to rename a session within the list - "window": will reload the list with all the available windows and their preview - will fuzzy read or a configurable path of your choice with - "expand": will expand and search for local directories to create additional session from - "back": reloads the first query. Useful when going into window or expand mode, to go back - "tree": reloads the preview with the tree of sessions+windows familiar from the native session manager C-S - "tmuxinator": fetches a list of tmuxinator sessions and previews them - "fzf-marks": show fzf-marks marks - toggles the preview pane Rebind keys: If you want to change the default key bindings, you can do using this configuration options: Tmuxinator Integration üöÄ If you want sessionx to detect existing tmuxinator projects, you can set a in your config see snippet below. With Tmuxinator turned 'on' off by default, the plugin will take a given name and look for a tmuxinator project with that name. If found, it'll launch the template using tmuxinator!. There's also a binding to list tmuxinator projects, defaulting to , configurable via: fzf-marks Integration üéØ You can turn on fzf-marks mode with to quickly jump to your marks in a new session. Sessionx will look for marks file in a default location first . Important: If the fzf-marks file does not exist, fzf-marks mode will not turn on. Currently, you have to manually specify the marks file with if you change it to other location see snippet below. WARNING ‚ö†Ô∏è - If you're running lower than 0.35.0 there are a few missing missing features that might break the plugin. Either consider upgrading or add to your config see configuration - This plugin is not designed to be used outside Tmux, although PRs are happily received! Thanks ‚ù§Ô∏è Inspired by these: - https://github.com/joshmedeski/t-smart-tmux-session-manager - https://github.com/ThePrimeagen/.dotfiles/blob/master/bin/.local/scripts/tmux-sessionizer - https://crates.io/crates/tmux-sessionizer - https://github.com/petobens/dotfiles/commit/c21c306660142d93d283186210ad9d301a2f5186 Contributors <a href="https://github.com/omerxx/tmux-sessionx/graphs/contributors"> <img src="https://contrib.rocks/image?repo=omerxx/tmux-sessionx" /> </a> Made with contrib.rocks.