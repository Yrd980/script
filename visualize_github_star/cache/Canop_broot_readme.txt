Broot !Testss3l3 !MITs2l2 !Latest Versions1l1 !Chat on Miaous4l4 !Packaging statussreplrep s1: https://img.shields.io/crates/v/broot.svg l1: https://crates.io/crates/broot s2: https://img.shields.io/badge/license-MIT-blue.svg l2: LICENSE s3: https://github.com/Canop/broot/actions/workflows/tests.yml/badge.svg l3: https://github.com/Canop/broot/actions/workflows/tests.yml s4: https://miaou.dystroy.org/static/shields/room.svg l4: https://miaou.dystroy.org/3490?broot srep: https://repology.org/badge/tiny-repos/broot.svg lrep: https://repology.org/project/broot/versions Broot is a better way to navigate directories, find files, and launch commands. !cows Complete Documentation - Installation Instructions - Contributing or Getting Help Get an overview of a directory, even a big one Hit !overview Notice the unlisted? That's what makes it usable where the old command would produce pages of output. files are properly dealt with to put unwanted files out of your way. As you sometimes want to see gitignored files, or hidden ones, you'll soon get used to the <kbd>alt</kbd><kbd>i</kbd> and <kbd>alt</kbd><kbd>h</kbd> shortcuts to toggle those visibilities. you can ignore them though, see documentation. Find a directory then to it type a few letters !cd Hit <kbd>alt</kbd><kbd>enter</kbd> and you're back to the terminal in the desired location. This way, you can navigate to a directory with the minimum amount of keystrokes, even if you don't exactly remember where it is. Broot is fast and doesn't block any keystroke interrupts the current search to start the next one. Most useful keys for this: the letters of what you're looking for <kbd>enter</kbd> on the root line to go up to the parent staying in broot <kbd>enter</kbd> to focus a directory staying in broot <kbd>esc</kbd> to get back to the previous state or clear your search <kbd class=b>↓</kbd> and <kbd class=b>↑</kbd> may be used to move the selection <kbd>alt</kbd><kbd>enter</kbd> to get back to the shell having to the selected directory <kbd>alt</kbd><kbd>h</kbd> to toggle showing hidden files the ones whose name starts with a dot <kbd>alt</kbd><kbd>i</kbd> to toggle showing gitignored files if you just want to quit you can use <kbd>ctrl</kbd><kbd>q</kbd> if you prefer Never lose track of file hierarchy while you search !search Broot tries to select the most relevant file. You can still go from one match to another one using <kbd>tab</kbd> or arrow keys. You may also search with a regular expression. To do this, add a before the pattern. And you have other types of searches, for example searching on file content start with : !content search You may also apply logical operators or combine patterns, for example searching in all files except json ones could be and searching both in file names and file contents would be . Once the file you want is selected you can hit <kbd>enter</kbd> or double-click to open it in your system's default program hit <kbd>alt</kbd><kbd>enter</kbd> to open it in your system's default program and close broot hit <kbd>ctrl</kbd><kbd>→</kbd> to preview it and then a second time to go inside the preview type a verb. For example opens the file in your preferred editor which may be a terminal one blog: a broot content search workflow Manipulate your files Most often, when not using broot, you move your files in the blind. You do a few before, then your manipulation, and maybe you check after. You can instead do it without losing the view of the file hierarchy. !mv Move, copy, rm, mkdir, are built in and you can add your own shortcuts. Here's chmod: !chmod Manage files with panels When a directory is selected, do <kbd>ctrl</kbd><kbd>→</kbd> and you open another panel you may open other ones, or navigate between them, with <kbd>ctrl</kbd><kbd>←</kbd> and <kbd>ctrl</kbd><kbd>→</kbd>. !custom colors tree yes, colors are fully customizable You can for example copy or move elements between panels: !cpp If you like you may do it Norton Commander style by binding to <kbd>F5</kbd> and to <kbd>F6</kbd>. Preview files Hit <kbd>ctrl</kbd><kbd>→</kbd> when a file is selected and the preview panel appears. !preview !preview The preview panel stays synchronized with the selection in tree panels. Broot displays images in high resolution when the terminal supports Kitty's graphics protocol compatible terminals: Kitty, WezTerm: !kitty preview Apply a standard or personal command to a file !size Just find the file you want to edit with a few keystrokes, type , then <kbd>enter</kbd>. You can add verbs or configure the existing ones; see documentation. And you can add shortcuts, for example a <kbd>ctrl</kbd> sequence or a function key Apply commands on several files Add files to the staging area then execute any command on all of them. !staging mv Replace and its clones: If you want to display sizes, dates and permissions, do which gets you this: !replace ls You may also toggle options with a few keystrokes while inside broot. For example you could have typed this while in broot. Or hit <kbd>alt</kbd><kbd>h</kbd> and you see hidden files. Sort, see what takes space: You may sort by launching broot with or . Or you may, inside broot, type a space, then , and <kbd>enter</kbd> and you toggled the mode. When sorting, the whole content of directories is taken into account. So if you want to find on Monday morning the most recently modified files, launch . If you start broot with the option or its shortcut , you get a mode tailored to "whale spotting" navigation, making it easy to determine what files or folders take space. Sizes, dates, files counts, are computed in the background, you don't have to wait for them when you navigate. !size And you keep all broot tools, like filtering or the ability to delete or open files and directories. If you hit , you can check the usage of all filesystems, so that you focus on cleaning the full ones. !fs Check git statuses: Use to display the statuses of files what are the new ones, the modified ones, etc., the current branch name and the change statistics. !size And if you want to see only the files which would be displayed by the command, do . From there it's easy to edit, or diff, selected files. !gg From there it's easy to edit, diff, or revert selected files. blog: use broot and meld to diff before commit Further Reading See Broot's web site for instructions regarding installation and usage.