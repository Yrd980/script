Dufs !CIhttps://github.com/sigoden/dufs/actions/workflows/ci.yaml !Crateshttps://crates.io/crates/dufs !Docker Pullshttps://hub.docker.com/r/sigoden/dufs Dufs is a distinctive utility file server that supports static serving, uploading, searching, accessing control, webdav... !demo Features - Serve static files - Download folder as zip file - Upload files and folders Drag & Drop - Create/Edit/Search files - Resumable/partial uploads/downloads - Access control - Support https - Support webdav - Easy to use with curl Install With cargo With docker With Homebrew Binaries on macOS, Linux, Windows Download from Github Releases, unzip and add dufs to your $PATH. CLI Examples Serve current working directory in read-only mode Allow all operations like upload/delete/search/create/edit... Only allow upload operation Serve a specific directory Serve a single file Serve a single-page application like react/vue Serve a static website with index.html Require username/password Listen on specific host:ip Listen on unix socket Use https API Upload a file Download a file Download a folder as zip file Delete a file/folder Create a directory Move the file/folder to the new path List/search directory contents With authorization Both basic or digest auth works Resumable downloads Resumable uploads Health checks <details> <summary><h2>Advanced Topics</h2></summary> Access Control Dufs supports account based access control. You can control who can do what on which path with /. 1. Use to separate the account and paths. No account means anonymous user. 2. Use to separate the username and password of the account. 3. Use to separate paths. 4. Use path suffix / set permissions: /. can be omitted. - : has complete permissions for all paths. - : has read-only permissions for all paths. - : has read-write permissions for , has read-only permissions for . - : All paths is publicly accessible, everyone can view/download it. Auth permissions are restricted by dufs global permissions. If dufs does not enable upload permissions via , then the account will not have upload permissions even if it is granted permissions. Hashed Password DUFS supports the use of sha-512 hashed password. Create hashed password: Use hashed password: > The hashed password contains , which can expand to a variable in some shells, so you have to use single quotes to wrap it. Two important things for hashed passwords: 1. Dufs only supports sha-512 hashed passwords, so ensure that the password string always starts with . 2. Digest authentication does not function properly with hashed passwords. Hide Paths Dufs supports hiding paths from directory listings via option . > The glob used in --hidden only matches file and directory names, not paths. So is invalid. Log Format Dufs supports customize http log format with option . The log format can use following variables. | variable | description | | ------------ | ------------------------------------------------------------------------- | | $remoteaddr | client address | | $remoteuser | user name supplied with authentication | | $request | full original request line | | $status | response status | | $http | arbitrary request header field. examples: $httpuseragent, $httpreferer | The default log format is . Disable http log Log user-agent Log remote-user Environment variables All options can be set using environment variables prefixed with . Configuration File You can specify and use the configuration file by selecting the option . The following are the configuration items: Customize UI Dufs allows users to customize the UI with your own assets. > If you only need to make slight adjustments to the current UI, you copy dufs's assets directory and modify it accordingly. The current UI doesn't use any frameworks, just plain HTML/JS/CSS. As long as you have some basic knowledge of web development, it shouldn't be difficult to modify. Your assets folder must contains a file. can use the following placeholder variables to retrieve internal data. - : directory listing data - : assets url prefix </details> License Copyright c 2022-2024 dufs-developers. dufs is made available under the terms of either the MIT License or the Apache License 2.0, at your option. See the LICENSE-APACHE and LICENSE-MIT files for license details.