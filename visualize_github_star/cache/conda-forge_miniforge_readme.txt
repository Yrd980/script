Miniforge !Build miniforgehttps://github.com/conda-forge/miniforge/actions/workflows/ci.yml !GitHub downloadshttps://tooomm.github.io/github-release-stats/?username=conda-forge&repository=miniforge This repository holds the minimal installers for Conda and Mamba specific to conda-forge, with the following features pre-configured: Packages in the base environment are obtained from the conda-forge channel. The conda-forge channel is set as the default and only channel. We put an emphasis on supporting various CPU architectures x8664, ppc64le, and aarch64 including Apple Silicon. <details> <summary>ðŸš¨ PyPy support is deprecated <b>Deprecated</b> as of August 2024 ðŸš¨</summary> TL;DR: We are planning to remove PyPy from conda-forge feedstock recipes in a few weeks and thus to stop building new releases of packages for PyPy, unless there is substantial enough interest to justify the continued maintenance effort. To help with this transition, the latest installers will: The installer will refuse to proceed every two weeks in October The installer will refuse to proceed every ten days in November The installer will refuse to proceed every five days in December The installer will refuse to proceed in 2025+ Miniforge-pypy3 Latest installers with PyPy 3.9 in the base environment are listed below. However, the latest installers will cease to work and will stop being made available in 2025. You should therefore pin to 24.7.0 if you require PyPy3. | OS | Architecture | Minimum Version | Miniforge Version | | ------- | ------------------ | --------------- | -------------------------------------------------------------------------- | | Linux | x8664 amd64 | glibc >= 2.17 | 24.9.2-0 | | Linux | x8664 amd64 | glibc >= 2.12 | 24.3.0-0 | | Linux | aarch64 arm64 | glibc >= 2.17 | 24.9.2-0 | | Linux | aarch64 arm64 | glibc >= 2.12 | 24.3.0-0 | | Linux | ppc64le POWER8/9 | glibc >= 2.17 | 24.9.2-0 | | Linux | ppc64le POWER8/9 | glibc >= 2.12 | 24.3.0-0 | | macOS | x8664 | macOS >= 10.13 | 24.9.2-0 | | macOS | x8664 | macOS >= 10.9 | 24.3.0-0 | | Windows | x8664 | Windows >= 7 | 24.9.2-0 | </details> <details> <summary>ðŸš¨ Mambaforge <b>Deprecated</b> as of July 2024 ðŸš¨</summary> Update for July 2024: As of July 2024, is deprecated. We suggest users switch to immediately. These installers will be retired from new releases after January 2025. To assist in the migration, we will be introducing rollowing brownouts to the latest Mambaforge installer. Installers up to version 24.5.0-1 will not have any brownouts. 24.5.0-1 will include a warning message. Installers 2024.5.0-2 and later will have the following brownout schedule: The installer will refuse to proceed every two weeks in October The installer will refuse to proceed every ten days in November The installer will refuse to proceed every five days in December The installer will refuse to proceed in 2025+ Previous information: With the release of , that incorporated the changes in 277, the packages and configuration of and are now identical. The only difference between the two is the name of the installer and, subsequently, the default installation directory. We recommend switching to immediately. These installers will be retired in January 2025. To assist in the migration to Miniforge3 for CI users, we've stopped the latest Mambaforge 24.5+ installer from proceeding with following schedule Every two weeks in October Every ten days in November Every five days in December Never in 2025 You can still find the latest installers in the 24.9.2 release. </details> Usage Miniforge provides installers for the commands https://conda.io/ and https://github.com/mamba-org/mamba. Once the installer for your OS and architecture has been executed, you should be able to use these commands in a terminal. conda/mamba usable in any terminals However, with the default choices of the Windows installer, these commands are only available in the "Miniforge Prompt". To be able to use these commands in other terminals, one needs to initialize conda for your shell by running in the Miniforge Prompt. Note that one can also just add the folder to the path environment variable manuallyto-add-a-path-to-the-path-environment-variable so and may be used more conveniently from any command prompt with limited chance of software conflicts. The same situation arises on Unix if you use the non-interactive install. Initialization can be done by calling conda with its full path, with something like Automatic activation of environments By default, once conda has been initialized for your shell, the environment is activated so that the command corresponds to the base Python provided by Miniforge and installs packages in the environment. This can be convenient for but it is cleaner to deactivate this automatic activation with and use or to create and activate other environments, with for example to create an environment called Finally, it is also possible to add to your shell configuration file typically or on Unix; on Windows, edit with the activation command. Requirements and installers Latest installers with Python 3.12 in the base environment: | OS | Architecture | Minimum Version | File | | ------- | ----------------------------- | --------------- | ------------------------------- | | Linux | x8664 amd64 | glibc >= 2.17 | | | Linux | aarch64 arm64 | glibc >= 2.17 | | | Linux | ppc64le POWER8/9 | glibc >= 2.17 | | | macOS | x8664 | macOS >= 10.13 | | | macOS | arm64 Apple Silicon | macOS >= 11.0 | | | Windows | x8664 | Windows >= 7 | | The Python version is specific only to the base environment. Conda can create new environments with different Python versions and implementations. For Raspberry PI that include a 64 bit processor, you must also use a 64-bit operating system such as Raspberry Pi OS 64-bit or Ubuntu for Raspberry PI. The versions listed as "System: 32-bit" are not compatible with the installers on this website. Apple silicon builds are experimental and haven't had testing like the other platforms. Install Windows Download and execute the Windows installer. Follow the prompts, taking note of the option to "Create start menu shortcuts". The most convenient and tested way to use the installed software such as commands and is via the "Miniforge Prompt" installed to the start menu. If you require conda to be accessible to other software, you may consider the option to "Add Miniforge3 to my PATH environment variable". The latter is not selected by default due to the potential of serious conflicts with other software. See https://github.com/conda-forge/miniforge/issues/520 and https://github.com/conda-forge/miniforge/issues/453 There are known issues with the usage of special characters and spaces in the installation location, see for example https://github.com/conda-forge/miniforge/issues/484 and https://github.com/conda-forge/miniforge/issues/593 . We recommend users install in a directory without any such characters in the name. For non-interactive usage one can use the batch install option: Windows Subsystem for Linux WSL The Windows Subsystem for Linux WSL lets developers use both Windows and Linux at the same time on a Windows machine. WSL users should make sure they are in a Linux terminal window not Powershell and use the Linux installer appropriate for the computer's architecture as described in the instructions in the next section. Unix-like platforms macOS, Linux, & WSL From a terminal window, download the installer appropriate for your computer's architecture using curl or wget or your favorite program. For example: or Run the script with: The interactive installation will prompt you to initialize conda with your shell. This is typically with recommended workflow. For non-interactive install for example on a CI, the following command can be used call with to list the extra options: In non-interactive installations, the conda initialization commands will not be run by default. Note that on macOS, Miniforge can also be installed with Homebrew. As part of a CI pipeline If you wish to download the appropriate installer through the command line in a more automated fashion, you may wish to a command similar to For Linux, any architecture, use the following command For macOS, any architecture, use the following command This will download the appropriate installer for the present architecture with the filename . Run the shell script with the command in batch mode with the flag: is prefix option. A directory will be created on . Then you should create the path to conda and activate conda. Run this command: Finally, you can run the command to activate the base environment Uninstall Unix-like platforms macOS & Linux Uninstalling Miniforge means removing the files that were created during the installation process. You will typically want to remove: 1. Any modifications to your shell rc files that were made by Miniforge: 2. Remove the folder and all subfolders where the base environment for Miniforge was installed: 3. Any global conda configuration files that are left behind. Features - X Automatic build of constructor. - X Automatic upload of constructor results. - X Automatic testing of constructor. - Integration with conda-forge's developer documentation. - Integration with conda-forge's official site. - Upstream to Anaconda ? Testing After construction on the CI, the installer is tested against a range of distribution that match the installer architecture . For example when architecture is , the constructed installer is tested against: - Centos 7 - Debian Bullseye 11 - Debian Bookworm 12 - Ubuntu 16.04 LTS - Ubuntu 18.04 LTS - Ubuntu 20.04 LTS - Ubuntu 22.04 LTS - Ubuntu 24.04 Latest release -- also happens to be LTS Building a Miniforge Installer Installers are built and uploaded via the CI but if you want to construct your own Miniforge installer, here is how: With Docker Without Docker Linux Be sure to delete the installation directory after has run. You will get installation errors if you run subsequent tests. Without docker Windows You must have Git Bash, or some other MINGW64 shell installed on Windows for this to run successfully. Support for older operating systems Support for macOS 10.9-10.12 If you require support for macOS 10.9 through 10.12 you may download version 24.3.0-0 of miniforge available at https://github.com/conda-forge/miniforge/releases/tag/24.3.0-0 Support for glibc 2.12-2.16 If you require support for glibc 2.12 through 2.16 you may download version 24.3.0-0 of miniforge available at https://github.com/conda-forge/miniforge/releases/tag/24.3.0-0 FAQ What's the difference between Mambaforge and Miniforge? After the release of Miniforge 23.3.1 in August 2023, Miniforge and Mambaforge are essentially identical. The only difference is the name of the installer and subsequently the default installation path. Before that release, Miniforge only shipped conda, while Mambaforge added mamba on top. Since Miniconda started shipping conda-libmamba-solver in July 2023, Miniforge followed suit and started shipping it too in August. At that point, since conda-libmamba-solver depends on libmambapy, the only difference between Miniforge and Mambaforge was the presence of the mamba Python package. To minimize surprises, we decided to add mamba to Miniforge too. Should I choose one or another going forward at the risk of one of them getting deprecated? As of June 2024, Mambaforge is deprecated and will be retired in January 2025. We recommend users switch to Miniforge3 immediately. For more details, please see the note above. Release To release a new version of Miniforge: - Make a new pre-release on GitHub with name - Wait until all artifacts are uploaded by CI - For each build, we upload 3 artifacts 1. One installer with the version name 2. One installer without the version name 3. The SHA256 - At the time of writing, the is a sum of 72 artifacts, and with the two sources, we expect a grand total of 74 artifacts. - Mark the pre-release as a release NOTE: using a pre-release is important to make sure the latest links work. License BSD 3-Clause History Relevant conversations: - https://github.com/conda-forge/conda-forge.github.io/issues/871issue-496677528 - https://github.com/conda-forge/conda-forge.github.io/pull/922