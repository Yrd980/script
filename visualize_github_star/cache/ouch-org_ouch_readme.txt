<p align="center"> <a href="https://crates.io/crates/ouch"> <img src="https://img.shields.io/crates/v/ouch?color=6090FF&style=flat-square" alt="Crates.io link"> </a> <a href="https://github.com/ouch-org/ouch/blob/main/LICENSE"> <img src="https://img.shields.io/crates/l/ouch?color=6090FF&style=flat-square" alt="License"> </a> </p> Ouch! stands for Obvious Unified Compression Helper. It's a CLI tool for compressing and decompressing for various formats. - Features - Usage - Installation - Supported Formats - Benchmarks - Contributing Features 1. Easy to use. 2. Fast. 3. Great error message feedback. 4. No runtime dependencies required for Linux x8664. 5. Accessibility mode see more. 6. Shell completions and man pages. Usage Ouch has three main subcommands: - alias - alias - alias or To see for a specific command: Decompressing Use the subcommand, will detect the extensions automatically. The flag can be used to redirect decompression results to another directory. Compressing Pass input files to the subcommand, add the output file at the end. detects the extensions of the output file to decide what formats to use. Listing Output: Supported formats | Format | | | | | | | | , | | | Snappy | | | | |:---------:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:| | Supported | ✓ | ✓¹ | ✓¹ | ✓² | ✓ | ✓⁴ | ✓⁴ | ✓ | ✓ | ✓ | ✓² | ✓² | ✓³ | ✓ | ✓: Supports compression and decompression. ✓¹: Due to limitations of the compression format itself, decompression can't be done with streaming. ✓²: Supported, and compression runs in parallel. ✓³: Due to RAR's restrictive license, only decompression and listing can be supported. ✓⁴: Only decompression is supported, compression is not implemented yet. If you wish to exclude non-free code from your build, you can disable RAR support by building without the feature. aliases are also supported: , , , , , , , , . Formats can be chained: - - If the filename has no extensions, will try to infer the format by the file signature and ask the user for confirmation. Installation <a href="https://repology.org/project/ouch/versions"> <img align="right" src="https://repology.org/badge/vertical-allrepos/ouch.svg" alt="Packaging status" /> </a> Refer to the packages list on the right. The most commonly used installation methods: On Arch Linux On MacOS via homebrew On Windows via Scoop From crates.io If you're in Ubuntu, you might need to install to build it from crates.io. Download the latest release bundle Check the releases page. Compiling from source code Check the wiki guide on compiling. Runtime Dependencies If running results in a linking error, it means you're missing a runtime dependency. If you're downloading binaries from the releases page, try the variants, those are static binaries that require no runtime dependencies. Otherwise, you'll need these libraries installed on your system: liblzma libbz2 libbz3 libz These should be available in your system's package manager. Benchmarks Benchmark results are available here. Performance of compressing and decompressing Rust source code are measured and compared with Hyperfine. The values presented are the average wall clock elapsed time. Note: focuses heavily on usage ergonomics and nice error messages, but we plan on doing some optimization in the future. Versions used: - 0.4.0 - 1.34 - infozip 6.00 - infozip 3.0 Contributing is made out of voluntary work, contributors are very welcome! Contributions of all sizes are appreciated. - Open an issue. - Package it for your favorite distribution or package manager. - Share it with a friend! - Open a pull request. If you're creating a Pull Request, check CONTRIBUTING.md. : https://www.gnu.org/software/tar/ infozip: http://www.info-zip.org/