!Python Versionshttps://pypi.org/project/pyqlib/files !Platformhttps://pypi.org/project/pyqlib/files !PypI Versionshttps://pypi.org/project/pyqlib/history !Upload Python Packagehttps://pypi.org/project/pyqlib/ !Github Actions Test Statushttps://github.com/microsoft/qlib/actions !Documentation Statushttps://qlib.readthedocs.io/en/latest/?badge=latest !LicenseLICENSE !Join the chat at https://gitter.im/Microsoft/qlibhttps://gitter.im/Microsoft/qlib?utmsource=badge&utmmedium=badge&utmcampaign=pr-badge&utmcontent=badge :newspaper: What's NEW! &nbsp; :sparklingheart: Recent released features Introducing <a href="https://github.com/microsoft/RD-Agent"><img src="docs/static/img/rdagentlogo.png" alt="RDAgent" style="height: 2em"></a>: LLM-Based Autonomous Evolving Agents for Industrial Data-Driven R&D We are excited to announce the release of RD-Agentüì¢, a powerful tool that supports automated factor mining and model optimization in quant investment R&D. RD-Agent is now available on GitHub, and we welcome your starüåü! To learn more, please visit our ‚ôæÔ∏èDemo page. Here, you will find demo videos in both English and Chinese to help you better understand the scenario and usage of RD-Agent. We have prepared several demo videos for you: | Scenario | Demo video English | Demo video ‰∏≠Êñá | | -- | ------ | ------ | | Quant Factor Mining | Link | Link | | Quant Factor Mining from reports | Link | Link | | Quant Model Optimization | Link | Link | - üìÉPaper: R&D-Agent-Quant: A Multi-Agent Framework for Data-Centric Factors and Model Joint Optimization - üëæCode: https://github.com/microsoft/RD-Agent/ !image | Feature | Status | | -- | ------ | | R&D-Agent-Quant Published | Apply R&D-Agent to Qlib for quant trading | | BPQP for End-to-end learning | üìàComing soon!Under review | | üî•LLM-driven Auto Quant Factoryüî• | üöÄ Released in ‚ôæÔ∏èRD-Agent on Aug 8, 2024 | | KRNN and Sandwich models | :chartwithupwardstrend: Released on May 26, 2023 | | Release Qlib v0.9.0 | :octocat: Released on Dec 9, 2022 | | RL Learning Framework | :hammer: :chartwithupwardstrend: Released on Nov 10, 2022. 1332, 1322, 1316,1299,1263, 1244, 1169, 1125, 1076| | HIST and IGMTF models | :chartwithupwardstrend: Released on Apr 10, 2022 | | Qlib notebook tutorial | üìñ Released on Apr 7, 2022 | | Ibovespa index data | :rice: Released on Apr 6, 2022 | | Point-in-Time database | :hammer: Released on Mar 10, 2022 | | Arctic Provider Backend & Orderbook data example | :hammer: Released on Jan 17, 2022 | | Meta-Learning-based framework & DDG-DA | :chartwithupwardstrend: :hammer: Released on Jan 10, 2022 | | Planning-based portfolio optimization | :hammer: Released on Dec 28, 2021 | | Release Qlib v0.8.0 | :octocat: Released on Dec 8, 2021 | | ADD model | :chartwithupwardstrend: Released on Nov 22, 2021 | | ADARNN model | :chartwithupwardstrend: Released on Nov 14, 2021 | | TCN model | :chartwithupwardstrend: Released on Nov 4, 2021 | | Nested Decision Framework | :hammer: Released on Oct 1, 2021. Example and Doc | | Temporal Routing Adaptor TRA | :chartwithupwardstrend: Released on July 30, 2021 | | Transformer & Localformer | :chartwithupwardstrend: Released on July 22, 2021 | | Release Qlib v0.7.0 | :octocat: Released on July 12, 2021 | | TCTS Model | :chartwithupwardstrend: Released on July 1, 2021 | | Online serving and automatic model rolling | :hammer: Released on May 17, 2021 | | DoubleEnsemble Model | :chartwithupwardstrend: Released on Mar 2, 2021 | | High-frequency data processing example | :hammer: Released on Feb 5, 2021 | | High-frequency trading example | :chartwithupwardstrend: Part of code released on Jan 28, 2021 | | High-frequency data1min | :rice: Released on Jan 27, 2021 | | Tabnet Model | :chartwithupwardstrend: Released on Jan 22, 2021 | Features released before 2021 are not listed here. <p align="center"> <img src="docs/static/img/logo/1.png" /> </p> Qlib is an open-source, AI-oriented quantitative investment platform that aims to realize the potential, empower research, and create value using AI technologies in quantitative investment, from exploring ideas to implementing productions. Qlib supports diverse machine learning modeling paradigms, including supervised learning, market dynamics modeling, and reinforcement learning. An increasing number of SOTA Quant research works/papers in diverse paradigms are being released in Qlib to collaboratively solve key challenges in quantitative investment. For example, 1 using supervised learning to mine the market's complex non-linear patterns from rich and heterogeneous financial data, 2 modeling the dynamic nature of the financial market using adaptive concept drift technology, and 3 using reinforcement learning to model continuous investment decisions and assist investors in optimizing their trading strategies. It contains the full ML pipeline of data processing, model training, back-testing; and covers the entire chain of quantitative investment: alpha seeking, risk modeling, portfolio optimization, and order execution. For more details, please refer to our paper "Qlib: An AI-oriented Quantitative Investment Platform". <table> <tbody> <tr> <th>Frameworks, Tutorial, Data & DevOps</th> <th>Main Challenges & Solutions in Quant Research</th> </tr> <tr> <td> <li><a href="plans"><strong>Plans</strong></a></li> <li><a href="framework-of-qlib">Framework of Qlib</a></li> <li><a href="quick-start">Quick Start</a></li> <ul dir="auto"> <li type="circle"><a href="installation">Installation</a> </li> <li type="circle"><a href="data-preparation">Data Preparation</a></li> <li type="circle"><a href="auto-quant-research-workflow">Auto Quant Research Workflow</a></li> <li type="circle"><a href="building-customized-quant-research-workflow-by-code">Building Customized Quant Research Workflow by Code</a></li></ul> <li><a href="quant-dataset-zoo"><strong>Quant Dataset Zoo</strong></a></li> <li><a href="learning-framework">Learning Framework</a></li> <li><a href="more-about-qlib">More About Qlib</a></li> <li><a href="offline-mode-and-online-mode">Offline Mode and Online Mode</a> <ul> <li type="circle"><a href="performance-of-qlib-data-server">Performance of Qlib Data Server</a></li></ul> <li><a href="related-reports">Related Reports</a></li> <li><a href="contact-us">Contact Us</a></li> <li><a href="contributing">Contributing</a></li> </td> <td valign="baseline"> <li><a href="main-challenges--solutions-in-quant-research">Main Challenges &amp; Solutions in Quant Research</a> <ul> <li type="circle"><a href="forecasting-finding-valuable-signalspatterns">Forecasting: Finding Valuable Signals/Patterns</a> <ul> <li type="disc"><a href="quant-model-paper-zoo"><strong>Quant Model Paper Zoo</strong></a> <ul> <li type="circle"><a href="run-a-single-model">Run a Single Model</a></li> <li type="circle"><a href="run-multiple-models">Run Multiple Models</a></li> </ul> </li> </ul> </li> <li type="circle"><a href="adapting-to-market-dynamics">Adapting to Market Dynamics</a></li> <li type="circle"><a href="reinforcement-learning-modeling-continuous-decisions">Reinforcement Learning: modeling continuous decisions</a></li> </ul> </li> </td> </tr> </tbody> </table> Plans New features under developmentorder by estimated release time. Your feedbacks about the features are very important. <!-- | Feature | Status | --> <!-- | -- | ------ | --> Framework of Qlib <div style="align: center"> <img src="docs/static/img/framework-abstract.jpg" /> </div> The high-level framework of Qlib can be found aboveusers can find the detailed framework of Qlib's design when getting into nitty gritty. The components are designed as loose-coupled modules, and each component could be used stand-alone. Qlib provides a strong infrastructure to support Quant research. Data is always an important part. A strong learning framework is designed to support diverse learning paradigms e.g. reinforcement learning, supervised learning and patterns at different levelse.g. market dynamic modeling. By modeling the market, trading strategies will generate trade decisions that will be executed. Multiple trading strategies and executors in different levels or granularities can be nested to be optimized and run together. At last, a comprehensive analysis will be provided and the model can be served online in a low cost. Quick Start This quick start guide tries to demonstrate 1. It's very easy to build a complete Quant research workflow and try your ideas with Qlib. 2. Though with public data and simple models, machine learning technologies work very well in practical Quant investment. Here is a quick demo shows how to install QlibcondacondaQlibcrontab -echeckdatahealthqrunqrunqrunqrunqrunpython -m pip install .analysisexamples/workflowbycode.ipynbjupyter notebookQlibQlibAlpha158Alpha360Qlibqrunworkflowbycodeexamplesrunallmodel.pyexamplespython runallmodel.py run --models=lightgbm--modelstensorflow==1.15.0Qlibrunallmodel.pyICbacktestpandasgroupkeygroupbypandasgroupkeyno defaultTruegroupkey=FalseQlibQlibQlibQlibForecast ModelTrading AgentLearning FrameworkWorkflowWorkflowInformation ExtractorExecution EnvExecution EnvWorkflowNestedExecutorOfflineOnlineOfflineOnline+-EExpressionCache+-DDatasetCacheQlibrg 'TODO|FIXME' qlib If you would like to become one of Qlib's maintainers to contribute more e.g. help merge PR, triage issues, please contact us by emailqlib@microsoft.com. We are glad to help to upgrade your permission. License Most contributions require you to agree to a Contributor License Agreement CLA declaring that you have the right to, and actually do, grant us the right to use your contribution. For details, visit https://cla.opensource.microsoft.com. When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately e.g., status check, comment. Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA. This project has adopted the Microsoft Open Source Code of Conduct. For more information see the Code of Conduct FAQ or contact opencode@microsoft.com with any additional questions or comments.