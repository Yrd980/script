<a name="logo"/> <div align="center"> <a href="https://julialang.org/" target="blank"> <img src="doc/src/assets/logo.svg" alt="Julia Logo" width="210" height="142"></img> </a> </div> <table> <!-- Docs --> <tr> <td>Documentation</td> <td> <a href="https://docs.julialang.org"><img src='https://img.shields.io/badge/docs-v1-blue.svg'/></a> </td> </tr> <!-- Continuous integration To change the badge to point to a different pipeline, it is not sufficient to simply change the part. You need to go to the Buildkite website and get the SVG URL for the correct pipeline. --> <tr> <td>Continuous integration</td> <td> <a href="https://buildkite.com/julialang/julia-master"><img src='https://badge.buildkite.com/f28e0d28b345f9fad5856ce6a8d64fffc7c70df8f4f2685cd8.svg?branch=master'/></a> </td> </tr> <!-- Coverage --> <tr> <td>Code coverage</td> <td> <a href='https://coveralls.io/github/JuliaLang/julia?branch=master'><img src='https://coveralls.io/repos/github/JuliaLang/julia/badge.svg?branch=master' alt='Coverage Status'/></a> <a href="https://codecov.io/gh/JuliaLang/julia"><img src="https://codecov.io/gh/JuliaLang/julia/branch/master/graph/badge.svg?token=TckCRxc7HS"/></a> </td> </tr> </table> The Julia Language Julia is a high-level, high-performance dynamic language for technical computing. The main homepage for Julia can be found at julialang.org. This is the GitHub repository of Julia source code, including instructions for compiling and installing Julia, below. Resources - Homepage: <https://julialang.org> - Install: <https://julialang.org/install/> - Source code: <https://github.com/JuliaLang/julia> - Documentation: <https://docs.julialang.org> - Packages: <https://julialang.org/packages/> - Discussion forum: <https://discourse.julialang.org> - Zulip: <https://julialang.zulipchat.com/> - Slack: <https://julialang.slack.com> get an invite from <https://julialang.org/slack/> - YouTube: <https://www.youtube.com/user/JuliaLanguage> - Code coverage: <https://coveralls.io/r/JuliaLang/julia> New developers may find the notes in CONTRIBUTING helpful to start contributing to the Julia codebase. Learning Julia - Learning resources Binary Installation The recommended way of installing Julia is to use which will install the latest stable for you and help keep it up to date. It can also let you install and run different Julia versions simultaneously. Instructions for this can be found here. If you want to manually download specific Julia binaries, you can find those on the downloads page. The downloads page also provides details on the different tiers of support for OS and platform combinations. If everything works correctly, you will get a program and when you run it in a terminal or command prompt, you will see a Julia banner and an interactive prompt into which you can enter expressions for evaluation. You can read about getting started in the manual. Note: Although some OS package managers provide Julia, such installations are neither maintained nor endorsed by the Julia project. They may be outdated, broken and/or unmaintained. We recommend you use the official Julia binaries instead. Building Julia First, make sure you have all the required dependencies installed. Then, acquire the source code by cloning the git repository: git clone https://github.com/JuliaLang/julia.git and then use the command prompt to change into the resulting julia directory. By default, you will be building the latest unstable version of Julia. However, most users should use the most recent stable version of Julia. You can get this version by running: git checkout v1.11.6 To build the executable, run from within the julia directory. Building Julia requires 2GiB of disk space and approximately 4GiB of virtual memory. Note: The build process will fail badly if any of the build directory's parent directories have spaces or other shell meta-characters such as or in their names this is due to a limitation in GNU make. Once it is built, you can run the executable. From within the julia directory, run ./julia Your first test of Julia determines whether your build is working properly. From the julia directory, type . You should see output that lists a series of running tests; if they complete without error, you should be in good shape to start using Julia. You can read about getting started in the manual. Detailed build instructions, should they be necessary, are included in the build documentation. Uninstalling Julia By default, Julia does not install anything outside the directory it was cloned into and . Julia and the vast majority of Julia packages can be completely uninstalled by deleting these two directories. Source Code Organization The Julia source code is organized as follows: | Directory | Contents | | - | - | | | source code for the Base module part of Julia's standard library | | | source for the command line interface/REPL | | | miscellaneous scripts | | | external dependencies | | | source for the user manual | | | contains | | | source for Julia language core | | | source code for other standard library packages | | | test suites | Terminal, Editors and IDEs The Julia REPL is quite powerful. See the section in the manual on the Julia REPL for more details. On Windows, we highly recommend running Julia in a modern terminal, such as Windows Terminal from the Microsoft Store. Support for editing Julia is available for many widely used editors: Emacs, Vim, Sublime Text, and many others. For users who prefer IDEs, we recommend using VS Code with the julia-vscode plugin.\ For notebook users, Jupyter notebook support is available through the IJulia package, and the Pluto.jl package provides Pluto notebooks.