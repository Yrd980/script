kickstart.nvim Introduction A starting point for Neovim that is: Small Single-file Completely Documented NOT a Neovim distribution, but instead a starting point for your configuration. Installation Install Neovim Kickstart.nvim targets only the latest 'stable' and latest 'nightly' of Neovim. If you are experiencing issues, please make sure you have the latest versions. Install External Dependencies External Requirements: - Basic utils: , , , C Compiler - ripgrep, fd-find - Clipboard tool xclip/xsel/win32yank or other depending on the platform - A Nerd Font: optional, provides various icons - if you have it set in to true - Emoji fonts Ubuntu only, and only if you want emoji! - Language Setup: - If you want to write Typescript, you need - If you want to write Golang, you will need - etc. > !NOTE > See Install Recipes for additional Windows and Linux specific notes > and quick install snippets Install Kickstart > !NOTE > Backup your previous configuration if any exists Neovim's configurations are located under the following paths, depending on your OS: | OS | PATH | | :- | :--- | | Linux, MacOS | , | | Windows cmd| | | Windows powershell| | Recommended Step Fork this repo so that you have your own copy that you can modify, then install by cloning the fork to your machine using one of the commands below, depending on your OS. > !NOTE > Your fork's URL will be something like this: > You likely want to remove from your fork's file too - it's ignored in the kickstart repo to make maintenance easier, but it's recommended to track it in version control. Clone kickstart.nvim > !NOTE > If following the recommended step above i.e., forking the repo, replace > with in the commands below <details><summary> Linux and Mac </summary> </details> <details><summary> Windows </summary> If you're using : If you're using </details> Post Installation Start Neovim That's it! Lazy will install all the plugins you have. Use to view the current plugin status. Hit to close the window. Read The Friendly Documentation Read through the file in your configuration folder for more information about extending and exploring Neovim. That also includes examples of adding popularly requested plugins. > !NOTE > For more information about a particular plugin check its repository's documentation. Getting Started The Only Video You Need to Get Started with Neovim FAQ What should I do if I already have a pre-existing Neovim configuration? You should back it up and then delete all associated files. This includes your existing init.lua and the Neovim files in which can be deleted with Can I keep my existing configuration in parallel to kickstart? Yes! You can use NVIMAPPNAME to maintain multiple configurations. For example, you can install the kickstart configuration in and create an alias: When you run Neovim using alias it will use the alternative config directory and the matching local directory . You can apply this approach to any Neovim distribution that you would like to try out. What if I want to "uninstall" this configuration: See lazy.nvim uninstall information Why is the kickstart a single file? Wouldn't it make sense to split it into multiple files? The main purpose of kickstart is to serve as a teaching tool and a reference configuration that someone can easily use to as a basis for their own. As you progress in learning Neovim and Lua, you might consider splitting into smaller parts. A fork of kickstart that does this while maintaining the same functionality is available here: kickstart-modular.nvim Discussions on this topic can be found here: Restructure the configuration Reorganize init.lua into a multi-file setup Install Recipes Below you can find OS specific install instructions for Neovim and dependencies. After installing all the dependencies continue with the Install Kickstart step. Windows Installation <details><summary>Windows with Microsoft C++ Build Tools and CMake</summary> Installation may require installing build tools and updating the run command for See documentation for more details This requires: - Install CMake and the Microsoft C++ Build Tools on Windows </details> <details><summary>Windows with gcc/make using chocolatey</summary> Alternatively, one can install gcc and make which don't require changing the config, the easiest way is to use choco: 1. install chocolatey either follow the instructions on the page or use winget, run in cmd as admin: 2. install all requirements using choco, exit the previous cmd and open a new one so that choco path is set, and run in cmd as admin: </details> <details><summary>WSL Windows Subsystem for Linux</summary> </details> Linux Install <details><summary>Ubuntu Install Steps</summary> </details> <details><summary>Debian Install Steps</summary> </details> <details><summary>Fedora Install Steps</summary> </details> <details><summary>Arch Install Steps</summary> </details>