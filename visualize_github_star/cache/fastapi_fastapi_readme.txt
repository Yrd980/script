<p align="center"> <a href="https://fastapi.tiangolo.com"><img src="https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png" alt="FastAPI"></a> </p> <p align="center"> <em>FastAPI framework, high performance, easy to learn, fast to code, ready for production</em> </p> <p align="center"> <a href="https://github.com/fastapi/fastapi/actions?query=workflow%3ATest+event%3Apush+branch%3Amaster" target="blank"> <img src="https://github.com/fastapi/fastapi/actions/workflows/test.yml/badge.svg?event=push&branch=master" alt="Test"> </a> <a href="https://coverage-badge.samuelcolvin.workers.dev/redirect/fastapi/fastapi" target="blank"> <img src="https://coverage-badge.samuelcolvin.workers.dev/fastapi/fastapi.svg" alt="Coverage"> </a> <a href="https://pypi.org/project/fastapi" target="blank"> <img src="https://img.shields.io/pypi/v/fastapi?color=%2334D058&label=pypi%20package" alt="Package version"> </a> <a href="https://pypi.org/project/fastapi" target="blank"> <img src="https://img.shields.io/pypi/pyversions/fastapi.svg?color=%2334D058" alt="Supported Python versions"> </a> </p> --- Documentation: <a href="https://fastapi.tiangolo.com" target="blank">https://fastapi.tiangolo.com</a> Source Code: <a href="https://github.com/fastapi/fastapi" target="blank">https://github.com/fastapi/fastapi</a> --- FastAPI is a modern, fast high-performance, web framework for building APIs with Python based on standard Python type hints. The key features are: Fast: Very high performance, on par with NodeJS and Go thanks to Starlette and Pydantic. One of the fastest Python frameworks available. Fast to code: Increase the speed to develop features by about 200% to 300%. Fewer bugs: Reduce about 40% of human developer induced errors. Intuitive: Great editor support. <abbr title="also known as auto-complete, autocompletion, IntelliSense">Completion</abbr> everywhere. Less time debugging. Easy: Designed to be easy to use and learn. Less time reading docs. Short: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs. Robust: Get production-ready code. With automatic interactive documentation. Standards-based: Based on and fully compatible with the open standards for APIs: <a href="https://github.com/OAI/OpenAPI-Specification" class="external-link" target="blank">OpenAPI</a> previously known as Swagger and <a href="https://json-schema.org/" class="external-link" target="blank">JSON Schema</a>. <small> estimation based on tests on an internal development team, building production applications.</small> Sponsors <!-- sponsors --> <a href="https://blockbee.io?ref=fastapi" target="blank" title="BlockBee Cryptocurrency Payment Gateway"><img src="https://fastapi.tiangolo.com/img/sponsors/blockbee.png"></a> <a href="https://platform.sh/try-it-now/?utmsource=fastapi-signup&utmmedium=banner&utmcampaign=FastAPI-signup-June-2023" target="blank" title="Build, run and scale your apps on a modern, reliable, and secure PaaS."><img src="https://fastapi.tiangolo.com/img/sponsors/platform-sh.png"></a> <a href="https://github.com/scalar/scalar/?utmsource=fastapi&utmmedium=website&utmcampaign=main-badge" target="blank" title="Scalar: Beautiful Open-Source API References from Swagger/OpenAPI files"><img src="https://fastapi.tiangolo.com/img/sponsors/scalar.svg"></a> <a href="https://www.propelauth.com/?utmsource=fastapi&utmcampaign=1223&utmmedium=mainbadge" target="blank" title="Auth, user management and more for your B2B product"><img src="https://fastapi.tiangolo.com/img/sponsors/propelauth.png"></a> <a href="https://zuplo.link/fastapi-gh" target="blank" title="Zuplo: Deploy, Secure, Document, and Monetize your FastAPI"><img src="https://fastapi.tiangolo.com/img/sponsors/zuplo.png"></a> <a href="https://liblab.com?utmsource=fastapi" target="blank" title="liblab - Generate SDKs from FastAPI"><img src="https://fastapi.tiangolo.com/img/sponsors/liblab.png"></a> <a href="https://docs.render.com/deploy-fastapi?utmsource=deploydoc&utmmedium=referral&utmcampaign=fastapi" target="blank" title="Deploy & scale any full-stack web app on Render. Focus on building apps, not infra."><img src="https://fastapi.tiangolo.com/img/sponsors/render.svg"></a> <a href="https://www.coderabbit.ai/?utmsource=fastapi&utmmedium=badge&utmcampaign=fastapi" target="blank" title="Cut Code Review Time & Bugs in Half with CodeRabbit"><img src="https://fastapi.tiangolo.com/img/sponsors/coderabbit.png"></a> <a href="https://subtotal.com/?utmsource=fastapi&utmmedium=sponsorship&utmcampaign=open-source" target="blank" title="The Gold Standard in Retail Account Linking"><img src="https://fastapi.tiangolo.com/img/sponsors/subtotal.svg"></a> <a href="https://vibe.mobb.ai/?utmsource=Fast+APi&utmmedium=Image&utmcampaign=MVS" target="blank" title="Secure Your AI-Generated Code to Unlock Dev Productivity"><img src="https://fastapi.tiangolo.com/img/sponsors/mobbai.png"></a> <a href="https://docs.railway.com/guides/fastapi?utmmedium=integration&utmsource=docs&utmcampaign=fastapi" target="blank" title="Deploy enterprise applications at startup speed"><img src="https://fastapi.tiangolo.com/img/sponsors/railway.png"></a> <a href="https://databento.com/?utmsource=fastapi&utmmedium=sponsor&utmcontent=display" target="blank" title="Pay as you go for market data"><img src="https://fastapi.tiangolo.com/img/sponsors/databento.svg"></a> <a href="https://speakeasy.com/editor?utmsource=fastapi+repo&utmmedium=github+sponsorship" target="blank" title="SDKs for your API | Speakeasy"><img src="https://fastapi.tiangolo.com/img/sponsors/speakeasy.png"></a> <a href="https://www.svix.com/" target="blank" title="Svix - Webhooks as a service"><img src="https://fastapi.tiangolo.com/img/sponsors/svix.svg"></a> <a href="https://www.stainlessapi.com/?utmsource=fastapi&utmmedium=referral" target="blank" title="Stainless | Generate best-in-class SDKs"><img src="https://fastapi.tiangolo.com/img/sponsors/stainless.png"></a> <a href="https://www.permit.io/blog/implement-authorization-in-fastapi?utmsource=github&utmmedium=referral&utmcampaign=fastapi" target="blank" title="Fine-Grained Authorization for FastAPI"><img src="https://fastapi.tiangolo.com/img/sponsors/permit.png"></a> <a href="https://www.interviewpal.com/?utmsource=fastapi&utmmedium=open-source&utmcampaign=dev-hiring" target="blank" title="InterviewPal - AI Interview Coach for Engineers and Devs"><img src="https://fastapi.tiangolo.com/img/sponsors/interviewpal.png"></a> <a href="https://dribia.com/en/" target="blank" title="Dribia - Data Science within your reach"><img src="https://fastapi.tiangolo.com/img/sponsors/dribia.png"></a> <!-- /sponsors --> <a href="https://fastapi.tiangolo.com/fastapi-people/sponsors" class="external-link" target="blank">Other sponsors</a> Opinions "... I'm using FastAPI a ton these days. ... I'm actually planning to use it for all of my team's ML services at Microsoft. Some of them are getting integrated into the core Windows product and some Office products." <div style="text-align: right; margin-right: 10%;">Kabir Khan - <strong>Microsoft</strong> <a href="https://github.com/fastapi/fastapi/pull/26" target="blank"><small>ref</small></a></div> --- "We adopted the FastAPI library to spawn a REST server that can be queried to obtain predictions. for Ludwig" <div style="text-align: right; margin-right: 10%;">Piero Molino, Yaroslav Dudin, and Sai Sumanth Miryala - <strong>Uber</strong> <a href="https://eng.uber.com/ludwig-v0-2/" target="blank"><small>ref</small></a></div> --- "Netflix is pleased to announce the open-source release of our crisis management orchestration framework: Dispatch! built with FastAPI" <div style="text-align: right; margin-right: 10%;">Kevin Glisson, Marc Vilanova, Forest Monsen - <strong>Netflix</strong> <a href="https://netflixtechblog.com/introducing-dispatch-da4b8a2a8072" target="blank"><small>ref</small></a></div> --- "I’m over the moon excited about FastAPI. It’s so fun!" <div style="text-align: right; margin-right: 10%;">Brian Okken - <strong><a href="https://pythonbytes.fm/episodes/show/123/time-to-right-the-py-wrongs?timeinsec=855" target="blank">Python Bytes</a> podcast host</strong> <a href="https://twitter.com/brianokken/status/1112220079972728832" target="blank"><small>ref</small></a></div> --- "Honestly, what you've built looks super solid and polished. In many ways, it's what I wanted Hug to be - it's really inspiring to see someone build that." <div style="text-align: right; margin-right: 10%;">Timothy Crosley - <strong><a href="https://github.com/hugapi/hug" target="blank">Hug</a> creator</strong> <a href="https://news.ycombinator.com/item?id=19455465" target="blank"><small>ref</small></a></div> --- "If you're looking to learn one modern framework for building REST APIs, check out FastAPI ... It's fast, easy to use and easy to learn ..." "We've switched over to FastAPI for our APIs ... I think you'll like it ..." <div style="text-align: right; margin-right: 10%;">Ines Montani - Matthew Honnibal - <strong><a href="https://explosion.ai" target="blank">Explosion AI</a> founders - <a href="https://spacy.io" target="blank">spaCy</a> creators</strong> <a href="https://twitter.com/inesmontani/status/1144173225322143744" target="blank"><small>ref</small></a> - <a href="https://twitter.com/honnibal/status/1144031421859655680" target="blank"><small>ref</small></a></div> --- "If anyone is looking to build a production Python API, I would highly recommend FastAPI. It is beautifully designed, simple to use and highly scalable, it has become a key component in our API first development strategy and is driving many automations and services such as our Virtual TAC Engineer." <div style="text-align: right; margin-right: 10%;">Deon Pillsbury - <strong>Cisco</strong> <a href="https://www.linkedin.com/posts/deonpillsburycisco-cx-python-activity-6963242628536487936-trAp/" target="blank"><small>ref</small></a></div> --- Typer, the FastAPI of CLIs <a href="https://typer.tiangolo.com" target="blank"><img src="https://typer.tiangolo.com/img/logo-margin/logo-margin-vector.svg" style="width: 20%;"></a> If you are building a <abbr title="Command Line Interface">CLI</abbr> app to be used in the terminal instead of a web API, check out <a href="https://typer.tiangolo.com/" class="external-link" target="blank">Typer</a>. Typer is FastAPI's little sibling. And it's intended to be the FastAPI of CLIs. ⌨️ 🚀 Requirements FastAPI stands on the shoulders of giants: <a href="https://www.starlette.io/" class="external-link" target="blank">Starlette</a> for the web parts. <a href="https://docs.pydantic.dev/" class="external-link" target="blank">Pydantic</a> for the data parts. Installation Create and activate a <a href="https://fastapi.tiangolo.com/virtual-environments/" class="external-link" target="blank">virtual environment</a> and then install FastAPI: <div class="termy"> </div> Note: Make sure you put in quotes to ensure it works in all terminals. Example Create it Create a file with: <details markdown="1"> <summary>Or use <code>async def</code>...</summary> If your code uses / , use : Note: If you don't know, check the "In a hurry?" section about <a href="https://fastapi.tiangolo.com/async/in-a-hurry" target="blank"> and in the docs</a>. </details> Run it Run the server with: <div class="termy"> </div> <details markdown="1"> <summary>About the command <code>fastapi dev main.py</code>...</summary> The command reads your file, detects the FastAPI app in it, and starts a server using <a href="https://www.uvicorn.org" class="external-link" target="blank">Uvicorn</a>. By default, will start with auto-reload enabled for local development. You can read more about it in the <a href="https://fastapi.tiangolo.com/fastapi-cli/" target="blank">FastAPI CLI docs</a>. </details> Check it Open your browser at <a href="http://127.0.0.1:8000/items/5?q=somequery" class="external-link" target="blank">http://127.0.0.1:8000/items/5?q=somequery</a>. You will see the JSON response as: You already created an API that: Receives HTTP requests in the paths and . Both paths take <em>operations</em> also known as HTTP methods. The path has a path parameter that should be an . The path has an optional query parameter . Interactive API docs Now go to <a href="http://127.0.0.1:8000/docs" class="external-link" target="blank">http://127.0.0.1:8000/docs</a>. You will see the automatic interactive API documentation provided by <a href="https://github.com/swagger-api/swagger-ui" class="external-link" target="blank">Swagger UI</a>: !Swagger UI Alternative API docs And now, go to <a href="http://127.0.0.1:8000/redoc" class="external-link" target="blank">http://127.0.0.1:8000/redoc</a>. You will see the alternative automatic documentation provided by <a href="https://github.com/Rebilly/ReDoc" class="external-link" target="blank">ReDoc</a>: !ReDoc Example upgrade Now modify the file to receive a body from a request. Declare the body using standard Python types, thanks to Pydantic. The server should reload automatically. Interactive API docs upgrade Now go to <a href="http://127.0.0.1:8000/docs" class="external-link" target="blank">http://127.0.0.1:8000/docs</a>. The interactive API documentation will be automatically updated, including the new body: !Swagger UI Click on the button "Try it out", it allows you to fill the parameters and directly interact with the API: !Swagger UI interaction Then click on the "Execute" button, the user interface will communicate with your API, send the parameters, get the results and show them on the screen: !Swagger UI interaction Alternative API docs upgrade And now, go to <a href="http://127.0.0.1:8000/redoc" class="external-link" target="blank">http://127.0.0.1:8000/redoc</a>. The alternative documentation will also reflect the new query parameter and body: !ReDoc Recap In summary, you declare once the types of parameters, body, etc. as function parameters. You do that with standard modern Python types. You don't have to learn a new syntax, the methods or classes of a specific library, etc. Just standard Python. For example, for an : or for a more complex model: ...and with that single declaration you get: Editor support, including: Completion. Type checks. Validation of data: Automatic and clear errors when the data is invalid. Validation even for deeply nested JSON objects. <abbr title="also known as: serialization, parsing, marshalling">Conversion</abbr> of input data: coming from the network to Python data and types. Reading from: JSON. Path parameters. Query parameters. Cookies. Headers. Forms. Files. <abbr title="also known as: serialization, parsing, marshalling">Conversion</abbr> of output data: converting from Python data and types to network data as JSON: Convert Python types , , , , , etc. objects. objects. Database models. ...and many more. Automatic interactive API documentation, including 2 alternative user interfaces: Swagger UI. ReDoc. --- Coming back to the previous code example, FastAPI will: Validate that there is an in the path for and requests. Validate that the is of type for and requests. If it is not, the client will see a useful, clear error. Check if there is an optional query parameter named as in for requests. As the parameter is declared with , it is optional. Without the it would be required as is the body in the case with . For requests to , read the body as JSON: Check that it has a required attribute that should be a . Check that it has a required attribute that has to be a . Check that it has an optional attribute , that should be a , if present. All this would also work for deeply nested JSON objects. Convert from and to JSON automatically. Document everything with OpenAPI, that can be used by: Interactive documentation systems. Automatic client code generation systems, for many languages. Provide 2 interactive documentation web interfaces directly. --- We just scratched the surface, but you already get the idea of how it all works. Try changing the line with: ...from: ...to: ...and see how your editor will auto-complete the attributes and know their types: !editor support For a more complete example including more features, see the <a href="https://fastapi.tiangolo.com/tutorial/">Tutorial - User Guide</a>. Spoiler alert: the tutorial - user guide includes: Declaration of parameters from other different places as: headers, cookies, form fields and files. How to set validation constraints as or . A very powerful and easy to use <abbr title="also known as components, resources, providers, services, injectables">Dependency Injection</abbr> system. Security and authentication, including support for OAuth2 with JWT tokens and HTTP Basic auth. More advanced but equally easy techniques for declaring deeply nested JSON models thanks to Pydantic. GraphQL integration with <a href="https://strawberry.rocks" class="external-link" target="blank">Strawberry</a> and other libraries. Many extra features thanks to Starlette as: WebSockets extremely easy tests based on HTTPX and CORS Cookie Sessions ...and more. Performance Independent TechEmpower benchmarks show FastAPI applications running under Uvicorn as <a href="https://www.techempower.com/benchmarks/section=test&runid=7464e520-0dc2-473d-bd34-dbdfd7e85911&hw=ph&test=query&l=zijzen-7" class="external-link" target="blank">one of the fastest Python frameworks available</a>, only below Starlette and Uvicorn themselves used internally by FastAPI. To understand more about it, see the section <a href="https://fastapi.tiangolo.com/benchmarks/" class="internal-link" target="blank">Benchmarks</a>. Dependencies FastAPI depends on Pydantic and Starlette. Dependencies When you install FastAPI with it comes with the group of optional dependencies: Used by Pydantic: <a href="https://github.com/JoshData/python-email-validator" target="blank"><code>email-validator</code></a> - for email validation. Used by Starlette: <a href="https://www.python-httpx.org" target="blank"><code>httpx</code></a> - Required if you want to use the . <a href="https://jinja.palletsprojects.com" target="blank"><code>jinja2</code></a> - Required if you want to use the default template configuration. <a href="https://github.com/Kludex/python-multipart" target="blank"><code>python-multipart</code></a> - Required if you want to support form <abbr title="converting the string that comes from an HTTP request into Python data">"parsing"</abbr>, with . Used by FastAPI: <a href="https://www.uvicorn.org" target="blank"><code>uvicorn</code></a> - for the server that loads and serves your application. This includes , which includes some dependencies e.g. needed for high performance serving. - to provide the command. This includes , which allows you to deploy your FastAPI application to <a href="https://fastapicloud.com" class="external-link" target="blank">FastAPI Cloud</a>. Without Dependencies If you don't want to include the optional dependencies, you can install with instead of . Without If you want to install FastAPI with the standard dependencies but without the , you can install with . Additional Optional Dependencies There are some additional dependencies you might want to install. Additional optional Pydantic dependencies: <a href="https://docs.pydantic.dev/latest/usage/pydanticsettings/" target="blank"><code>pydantic-settings</code></a> - for settings management. <a href="https://docs.pydantic.dev/latest/usage/types/extratypes/extratypes/" target="blank"><code>pydantic-extra-types</code></a> - for extra types to be used with Pydantic. Additional optional FastAPI dependencies: <a href="https://github.com/ijl/orjson" target="blank"><code>orjson</code></a> - Required if you want to use . <a href="https://github.com/esnme/ultrajson" target="blank"><code>ujson</code></a> - Required if you want to use . License This project is licensed under the terms of the MIT license.