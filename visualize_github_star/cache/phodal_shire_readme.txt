<p align="center"> <img src="src/main/resources/META-INF/pluginIcon.svg" width="160px" height="160px" alt="logo" /> </p> <h1 align="center">Shire - AI Coding Agent Language</h1> <p align="center"> <a href="https://github.com/phodal/shire/actions/workflows/build.yml"> <img src="https://github.com/phodal/shire/workflows/Build/badge.svg" alt="Build" /> </a> <a href="https://plugins.jetbrains.com/plugin/24549"> <img src="https://img.shields.io/jetbrains/plugin/v/24549.svg" alt="Version" /> </a> <a href="https://plugins.jetbrains.com/plugin/24549"> <img src="https://img.shields.io/jetbrains/plugin/d/24549.svg" alt="Downloads" /> </a> </p> Shire offers a straightforward AI Coding Agent Language that enables communication between an LLM and control IDE for automated programming. Quick Start → Documentation > The concept of Shire originated from AutoDev, a subproject > of UnitMesh. In AutoDev, we designed an AI-driven IDE for developers that includes DevIns, the > precursor to Shire. DevIns aims to enable users to create AI agents tailored to their own IDEs, allowing them to build > their customized AI-driven development environments. --- Unite Your Dev Ecosystem, Create Your AI Copilot !Inline Chat Agentic with Tool Ecosystem, Reshaping the SDLC 不论是组织内部的 DevOps 工具链：Jira、Confluence、SonarQube、Jenkins、GitLab、GitHub，还是各种内部 LLM 模型平台。 | 又或者在代码编辑器、终端、数据库、版本控制等等，Shire 都可以帮助你快速实现自动化编程。 | !Shire Command | |------------------------------------------------|--------------------------------------------------------------| Customize your AI Copilot with Your IDE 我们内置了多种交互方式，以快速将你的 IDE 变为你的专属 AI Copilot。。 | !Shire Customize Menu | 右键菜单、Alt+Enter、终端菜单、提交菜单、运行面板、输入框、数据库菜单、控制台菜单、VCS 日志菜单、聊天框、内联聊天等等。 | |----------------------------------------------------------------------------|--------------------------------------------------------------------| Follow Leading Community Practices 结合我们在行业的最佳洞见（https://aise.phodal.com/），你可以在 Shire 上体验到最佳的编程实践。 | StreamDiff、多文件编辑、FastApply、InlineChat 等 | <img src="https://shire.run/images/shire-industry-best-practise.png" alt="Shire Best Practice" width="350"> | |-----------------------------------------|-------------------------------------------------------------------------------------------------------------| Shire Shire example Project: Java example SDLC - Code change analysis use LLM to analysis requirements, then choose the best files to change. - Requirement + AutoCRUD analysis requirements, then auto generate CRUD code. - Dify + OpenAPI/Swagger interactive with Dify agent to design REST API - Add Spring doc to project add Spring doc to project. - Generate RestAssured Test AI to generate RestAssured test code. - Generate JavaDoc use LLM to generate JavaDoc. - Complexity Analysis calculate code complexity. - PlantUML: fetch Github issue for analysis fetch GitHub issue to generate mindmap. FrontEnd: - Frontend + HTML mockup use LLM to generate HTML mockup and show in WebView. - Mobile + Ionic use LLM to generate mobile mockup with Ionic, show in WebView. - Mobile + React use LLM to generate mobile mockup with React, show in WebView. - JavaScript Auto Unittest use LLM to generate JavaScript test code. Test: - E2E Test: Playwright AI to use Playwright to test the API and auto execute test. - API Test: Java use LLM to generate Java API test code. - Unit Test: Java use LLM to generate Java unit test code. - Unit Test: Python use LLM to generate Python unit test code. - Unit Test: Golang use LLM to generate Golang unit test code. Workflow & IDE Integration - Capture web pages and generate report capture web pages and generate report. - approvalExecute waiting for approval to execute next shire code - Custom InlineChat custom inline chat - Custom ChatBox custom prompt to use right panel chat box - Python as Foreign Function Interface use Python to run shell command in thread. - Quick Input show quick input dialog. - Terminal Agent use terminal agent to run shell command. EcoSystem - Git: Auto push code auto commit and push code to server. - Git: diff AI changed code diff AI changed code. - Git: Commit message generate commit message. - Git: Commit ID with Jira generate commit message with Jira ID. - Database: GitHub issue + Design Database Schema fetch GitHub issue as context to design database schema - Database: Run SQL in Database run SQL with command. - OpenRewrite: generate refactoring code use OpenRewrite to generate refactoring code. - MockServer: WireMock AI to generate mock server with WireMock and auto start mock server. - PlantUML: with remote Agent use remote agent to generate PlantUML code. - Mermaid: with remote Agent use remote agent to generate Mermaid code. - Sonarlint: fix issue use Sonarlint to fix issue. Shire Resources Shire Cheatsheet !Shire Cheatsheet Shire Data Architecture: !Shire Data Architecture Shire Resources - Documentation: Shire AI Coding Agent Language - Shire Book: AI for software-engineering Chinese only - Shire.Run - the shareable AI coding agent Demo Video Youtube: !Shire AI Coding Agent Languagehttps://www.youtube.com/watch?v=z1ijWOL1rFY Bilibili !Shire AI Coding Agent Languagehttps://www.bilibili.com/video/BV1Lf421q7S7/ Thanks 感谢智谱 AI 赞助的 GLM 4 Air 资源包。【加入Z计划，和智谱AI一起创业】（点击跳转👇） <a href="https://zhipu-ai.feishu.cn/share/base/form/shrcntPu1mUMhoapEseCJpmUUuf" target="blank"> <img src="https://aise.phodal.com/images/zhipu-z-plan.svg" width="256px" height="auto" alt="logo" /> </a> LICENSE Notes: StreamDiff based on Continue Dev, Inc, which is licensed under the Apache License, Version 2.0. See in this directory. This code is distributed under the MPL 2.0 license. See in this directory.