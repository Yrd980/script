<h1 align="center"> <img src="https://raw.githubusercontent.com/neovim/neovim.github.io/master/logos/neovim-logo-300x87.png" alt="Neovim"> <a href="https://neovim.io/doc/">Documentation</a> | <a href="https://app.element.io//room/neovim:matrix.org">Chat</a> </h1> !Coverity Scan analysishttps://scan.coverity.com/projects/2227 !Packageshttps://repology.org/metapackage/neovim !Debian CIhttps://buildd.debian.org/neovim !Downloadshttps://github.com/neovim/neovim/releases/ Neovim is a project that seeks to aggressively refactor Vim in order to: - Simplify maintenance and encourage contributions - Split the work between multiple developers - Enable advanced UIs without modifications to the core - Maximize extensibility See the Introduction wiki page and Roadmap for more information. Features -------- - Modern GUIs - API access from any language including C/C++, C, Clojure, D, Elixir, Go, Haskell, Java/Kotlin, JavaScript/Node.js, Julia, Lisp, Lua, Perl, Python, Racket, Ruby, Rust - Embedded, scriptable terminal emulator - Asynchronous job control - Shared data shada among multiple editor instances - XDG base directories support - Compatible with most Vim plugins, including Ruby and Python plugins See nvim-features for the full list, and nvim-news for noteworthy changes in the latest version! Install from package -------------------- Pre-built packages for Windows, macOS, and Linux are found on the Releases page. Managed packages are in Homebrew, Debian, Ubuntu, Fedora, Arch Linux, Void Linux, Gentoo, and more! Install from source ------------------- See BUILD.md and supported platforms for details. The build is CMake-based, but a Makefile is provided as a convenience. After installing the dependencies, run the following command. make CMAKEBUILDTYPE=RelWithDebInfo sudo make install To install to a non-default location: make CMAKEBUILDTYPE=RelWithDebInfo CMAKEINSTALLPREFIX=/full/path/ make install CMake hints for inspecting the build: - lists all build targets. - or contains the resolved values of all CMake variables. - shows the full compiler invocations for each translation unit. Transitioning from Vim -------------------- See https://neovim.io/doc/user/nvim.htmlnvim-from-vim for instructions. Project layout -------------- ├─ cmake/ CMake utils ├─ cmake.config/ CMake defines ├─ cmake.deps/ subproject to fetch and build dependencies optional ├─ runtime/ plugins and docs ├─ src/nvim/ application source code see src/nvim/README.md │ ├─ api/ API subsystem │ ├─ eval/ Vimscript subsystem │ ├─ event/ event-loop subsystem │ ├─ generators/ code generation pre-compilation │ ├─ lib/ generic data structures │ ├─ lua/ Lua subsystem │ ├─ msgpackrpc/ RPC subsystem │ ├─ os/ low-level platform code │ └─ tui/ built-in UI └─ test/ tests see test/README.md License ------- Neovim contributions since b17d96license-commit are licensed under the Apache 2.0 license, except for contributions copied from Vim identified by the token. See LICENSE for details. Vim is Charityware. You can use and copy it as much as you like, but you are encouraged to make a donation for needy children in Uganda. Please see the kcc section of the vim docs or visit the ICCF web site, available at these URLs: https://iccf-holland.org/ https://www.vim.org/iccf/ https://www.iccf.nl/ You can also sponsor the development of Vim. Vim sponsors can vote for features. The money goes to Uganda anyway. license-commit: https://github.com/neovim/neovim/commit/b17d9691a24099c9210289f16afb1a498a89d803 nvim-features: https://neovim.io/doc/user/vimdiff.htmlnvim-features nvim-news: https://neovim.io/doc/user/news.html Roadmap: https://neovim.io/roadmap/ advanced UIs: https://github.com/neovim/neovim/wiki/Related-projectsgui Managed packages: ./INSTALL.mdinstall-from-package Debian: https://packages.debian.org/testing/neovim Ubuntu: https://packages.ubuntu.com/search?keywords=neovim Fedora: https://packages.fedoraproject.org/pkgs/neovim/neovim/ Arch Linux: https://www.archlinux.org/packages/?q=neovim Void Linux: https://voidlinux.org/packages/?arch=x8664&q=neovim Gentoo: https://packages.gentoo.org/packages/app-editors/neovim Homebrew: https://formulae.brew.sh/formula/neovim <!-- vim: set tw=80: -->