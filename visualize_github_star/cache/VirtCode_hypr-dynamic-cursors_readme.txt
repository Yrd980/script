hypr-dynamic-cursors This plugin makes your cursor more realistic by simulating how it would behave if it was an actual object being dragged across your screen. This means that your cursor can change based on how it is used, e.g. tilt in the direction you are moving or straight out rotate towards it. Why did I implement this again? Inspired by KDE, it also supports shake to find, to enlarge the cursor when it is shaken, so it is easier to find it. It can be enabled separately or together with one simulation mode. simulation modes In this mode, the cursor is simulated as a stick which is dragged across the screen on one end. This means it will rotate towards the movement direction, and feels really realistic. https://github.com/VirtCode/hypr-dynamic-cursor/assets/41426325/ccd6d742-8e2b-4073-a35e-318c7e19705c In this mode, the cursor is tilted based on the direction and speed it is moving at. It was intended to simulate how an object would be affected by air drag, but implemented is only a rough approximation. This mode can also be customized extensively with different activation functions, and is enabled by default. https://github.com/VirtCode/hypr-dynamic-cursors/assets/41426325/ae25415c-e77f-4c85-864c-2eedbfe432e3 This mode tries recreating the stretching and squishing that is done to moving object in comic animations. It stretches your cursor in the direction you are moving based on the speed. Yes, this is not at all realistic. https://github.com/VirtCode/hypr-dynamic-cursors/assets/41426325/7b8289e7-9dd2-4b57-b406-4fa28779a260 shake to find The plugin supports shake to find, akin to how KDE Plasma, MacOS, etc. do it. It can also be extensively configured and is enabled by default. It also supports using hyprcursor for high resolution cursor images. The magnification can also be triggered as a dispatcher instead of on shake. If you only want shake to find, and no weird cursor behaviour, you can disable the above modes with the mode . https://github.com/user-attachments/assets/1346101e-4e62-4ba2-a1df-5940e0706514 state This plugin is still very early in its development. There are also multiple things which may or may not be implemented in the future: - X software cursor rendering - X hardware cursor rendering - X stick simulation - X air drag simulation - pendulum simulation - X per-shape length and starting angle if possible - X cursor shake to find - X overdue refactoring wait for aquamarine merge - X hyprcursor magnified shape If anything here sounds interesting to you, don't hesitate to contribute. Please note that this plugin was created more or less as a joke. I mainly wanted to see how using a rotating or tilted cursor was like. So I will not guarantee any future updates and bugfixes. The only useful feature, shake to find, was implemented more or less as an afterthought. installation hyprpm Installation is supported via . Supported hyprland versions are and upwards. The main branch generally tries to target . NixOS Add this flake to your inputs, note that using a mismatched/unsupported Hyprland release will fail to build or load the plugin: Then, in your home-manager config, add the plugin: or add it like this: configuration This plugin can be configured in its dedicated configuration section . The default values are shown below. shape rules Shape Rules can be used to override the mode or its behaviour on a per-shape basis. They can be defined with the keyword in the config file, preferably in the section. Note: Shape rules only apply to server side cursor shapes. Sadly, not everyone supports server side cursors yet, which means shape rules won't work in some applications. A shape rule usually consists of three parts: - : This is the name of the shape, this rule will apply to. Should be one of those specified in the protocol. You can use the special shape to apply your rule to ALL client side cursors. Also note that the compositor will set the shape to if you are on the wallpaper. - optional: Can override the mode used by this shape, see in the config. This argument is optional and can be left out. - : At the end of the rule follow zero or more property-value pairs. These are config values that will be overridden if this rule is active. Only config values from the sections , , as seen above can be used. Here are a few example rules to get you started: ipc This plugin can expose cursor shake events via IPC. This behaviour must be explicitly enabled via the option, as it will spam the socket quite a bit during a shake. These events will appear on Hyprland's event socket. The following events with the described arguments are available, when IPC is enabled: - : fired when a shake is detected. - : fired on frame during the shake, has arguments : - , are the current cursor position. - and are two floats, the first indicating the distance the mouse travelled, and second the diagonal this movement was within. Their quotient indicates how intense the shaking is. - is the current cursor magnification level, as currently shown by this plugin, depending on the shake configuration. It is also interpolated smoothly. - : fired when a shake has ended after the If you only want the IPC events and not the plugin actually changing the cursor size, you can set the properties to , , and to in the section such that the cursor is not magified during the shake. hyprcursor This plugin supports using hyprcursor to get higher-resolution images for when the cursor is magnified, i.e. when using shake to find. Due to the nature of cursors on wayland, there are some caveats to it. All configuration for it is located in the section. To use hyprcursor for magnified shapes, the following must be met: - must be true is by default - must be true is by default - you must be using a hyprcursor theme - the hyprcursor theme should be SVG-based As mentioned, there are some caveats to it. Here are the most common ones: - Still pixelated some apps and xwayland - These apps probably are using clientside cursors, so the program itself is specifying the cursor shape, hence we cannot load a higher resolution for it. You can set a specific shape to show in these cases with the option see config. - Blurred at very large sizes - The high resolution cursors are preloaded at a fixed size. If you magnify your cursor beyond this size, your cursors will look blurry. You can increase the preload size with the option see config, at the expense of some memory and higher loading times. Loading a cursor theme at a high resolution is relatively resource intensive. This plugin thus loads the theme asynchronously on a seperate thread, meaning your session will stay interactive during this time. But this means that when loading the plugin or changing cursor theme, your CPU might spike momentarily and the high-resolution theme will only be available after a short time usually just a couple of seconds. dispatchers This plugin has a couple of dispatchers to trigger certain effects with a keybind. Here's a list: - with arguments triggers cursor magnification like on a shake - optional: overrides duration in milliseconds to stay magnified - optional: overrides magnification factor performance > TL;DR: Hardware cursor performance is about the same as if an animated cursor shape was shown whenever you move your mouse. Sofware cursor performance is not impacted. When the cursor is magnified during a shake, the compositor will temporarily switch to software cursors. If your are using an nvidia gpu, this plugin will fall back to software cursors, see compatibility. Depending on your Hyprland configuration, this plugin can have a different performance impact, mainly depending on whether you are using software or hardware cursors: Software Cursors: No additional performance impact. <br> Transforming the cursor can be done in the same draw call that is used to draw the cursor anyway, so there is no additional performance impact. Note however that software cursors in of themselves are not really efficient. Hardware Cursors: Medium performance impact. <br> To transform the cursor smoothly, the cursor shape needs to be changed quite often. This is not exactly compatible with how hardware cursors are intended to work. Thus, performance can be compared to how an animated cursor shape would be rendered, every time the cursor is not stationary. It is however still more performant than software cursors. <br> Another limitation of hardware cursors are the size they are rendered at. This means that when the cursor is being magnified, software cursors will be used temporarily. <br> If your are using an Nvidia GPU, the plugin will also fall back to software cursors because of driver limitations see compatibility. If you have any ideas to improve performance, let me know! compatibility Compatibility with other plugins is not guaranteed. It probably should work with most plugins, unless they also change your cursor's behaviour. It will however work with any cursor theme. The plugin does also not support hardware cursors on Nvidia GPUs. If you are on nvidia, Hyprland will use CPU rendering to draw into your hardware cursor buffer, because of driver limitations. When using an effect with this plugin however, we potentially draw into the cursor buffer every frame when the cursor is moving which is really resource intensive if done on the CPU. Additionally the whole drawing logic would have to be implemented again to be able run on the CPU too. This is why on Nvidia GPUs, the plugin will automatically force the compositor to use software cursors, avoiding the above issues at a slight performance penalty. development To work on this plugin, you can clone this repository and use the Makefile to build it. I suggest opening a nested Hyprland session, and loading the plugin there: In some cases when working in a nest, nothing will happen with the plugin loaded. This is because the mouse input is handled differently in a wayland nest. In these cases, set to , to disable warp ignoring, which should fix the issue. If you want to debug hardware cursors, this plugin also has an additional configuration option, which when true will show where the whole cursor buffer is, and also shows when it is updated. Also make sure you disable the plugin on your host session if your are using hardware cursors, otherwise your cursor will be rotated twice. license This plugin is licensed under the MIT License. Have a look at the file for more information.