LeaderF ======= An efficient fuzzy finder that helps to locate files, buffers, mrus, gtags, etc. on the fly. - Written in Python. - Support fuzzy and regex searching. - Full-featured. - Well-designed fuzzy matching algorithm. - Extensible. Changelog --------- Please see the CHANGELOG for a release history. Wiki ---- Wiki. Extensions ---------- A list of community extensions can be found in the Extensions wiki. Screenshots ----------- !Popup Mode1 !And Mode2 Requirements ------------ - vim7.3 or higher. Only support 7.4.1126+ after v1.01. - Python2.7+ or Python3.1+. - To use the popup mode, neovim 0.5.0+ or vim 8.1.1615+ are required. Installation ------------ For vim-plug5 user: Performance ----------- LeaderF is already very fast. If you'd like better performance, install the C extension of the fuzzy matching algorithm, which is more than 10 times faster. To install the C extension, firstly, make sure and/or commands are available on Linux/Unix/MacOS and and/or commands are available on Windows. - Install the C extension There may be some errors during the installation, please google the error messages to resolve it. For example, , you can turn to here6 for help. - Uninstall the C extension After running any command of LeaderF, check the value of , if the value is 1, it means the C extension is loaded sucessfully. Usage ----- use to get specific help of subcommand, e.g., . Once LeaderF is launched: | Command | Description | ------- | ----------- | <br> | quit from LeaderF | | switch between fuzzy search mode and regex mode | | switch between full path search mode and name only search mode | | switch to normal mode | <br> | paste from clipboard | | clear the prompt | | delete the word before the cursor in the prompt | | move the cursor downward in the result window | | move the cursor upward in the result window | / | recall last/next input pattern from history | <br> | open the file under cursor or selectedwhen multiple files are selected | | open in horizontal split window | | open in vertical split window | | open in new tabpage | | show a prompt enable to choose split window method: vertical, horizontal, tabpage, etc | | refresh the cache | <br> | select multiple files | | select consecutive multiple files | | select all files | | clear all selections | | delete the preceding character in the prompt | | delete the current character in the prompt | | move the cursor to the begin of the prompt | | move the cursor to the end of the prompt | | move the cursor one character to the left in the prompt | | move the cursor one character to the right in the prompt | | preview the result | | scroll up in the popup preview window | | scroll down in the popup preview window Input formats: In NameOnly mode fuzzy mode If the first character you input is , then the searching will be the same as in FullPath mode.<br> If you input string as , then will match the file name and will match the directory name. In FullPath mode fuzzy mode Same as in NameOnly mode except that the pattern will match the full path but not the file name only. In Regexp mode The input string is the same as the Vim's regexp. Smart Case: If the characters in search pattern are all lowercase, the matching is case-insensitive. If the search pattern contains uppercase characters, all lowercase characters still are matched case-insensitively, the uppercase characters can only match upper case. So uppercase characters can speed up the narrowing down of the searching result. e.g., input ，it can match the following strings: but can not match the strings such as: Note: and are still case-insensitive. And operator: In fuzzy mode, using space as the and operator, the candidate lines should fuzzily match all the substrings separated by space. e.g., input ，it can match the following strings: Popup Mode ---------- Popup Mode is to open LeaderF in a popup windowvim 8.1.1615+ or floating windownvim 0.4.2+. To enable popup mode: or add after each subcommand, e.g., Customization ------------- Change key bindings By default, and are used to recall last/next input pattern from history. If you want to use them to navigate the result list just like and : for more detail, please refer to . Change the colors used in LeaderF All the highlight groups supported are defined in LeaderF/autoload/leaderf/colorscheme/popup/default.vim. Change the default mapping of searching files command e.g. Show icons should install fonts from https://github.com/ryanoasis/nerd-fonts Support commands: buffer,file,mru,window Configuration examples ---------------------- FAQ --- https://github.com/Yggdroot/LeaderF/issues?q=label%3AFAQ+ License ------- This plugin is released under the Apache License, Version 2.0 the "License". :heart: Sponsor ------- If you like this software, please consider buying me a coffee. https://github.com/Yggdroot/SponsorMe/blob/main/README.mddonate 捐赠的朋友最好备注一下自己的ID） 1: https://github.com/Yggdroot/Images/blob/master/leaderf/leaderfpopup.gif 2: https://github.com/Yggdroot/Images/blob/master/leaderf/leaderf2.gif 3: https://github.com/gmarik/Vundle.vim 4: https://github.com/Yggdroot/LeaderF/blob/master/doc/leaderf.txtL189-L349 5: https://github.com/junegunn/vim-plug 6: https://stackoverflow.com/questions/2817869/error-unable-to-find-vcvarsall-bat