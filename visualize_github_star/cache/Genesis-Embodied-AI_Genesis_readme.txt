!Genesis !Teaser !PyPI - Versionhttps://pypi.org/project/genesis-world/ !PyPI Downloadshttps://pepy.tech/projects/genesis-world !GitHub Issueshttps://github.com/Genesis-Embodied-AI/Genesis/issues !GitHub Discussionshttps://github.com/Genesis-Embodied-AI/Genesis/discussions !Discordhttps://discord.gg/nukCuhB47p <a href="https://drive.google.com/uc?export=view&id=1ZS9nnbQ-t1IwkzJlENBYqYIIOOZhXuBZ"><img src="https://img.shields.io/badge/WeChat-07C160?style=for-the-badge&logo=wechat&logoColor=white" height="20" style="display:inline"></a> !README in English./README.md !README en FranÃ§ais./READMEFR.md !í•œêµ­ì–´ README./READMEKR.md !ç®€ä½“ä¸­æ–‡ç‰ˆè‡ªè¿°æ–‡ä»¶./READMECN.md !æ—¥æœ¬èªžç‰ˆ README./READMEJA.md Genesis ðŸ”¥ News - 2025-08-05 Released v0.3.0 ðŸŽŠ ðŸŽ‰ - 2025-07-02 The development of Genesis is now officially supported by Genesis AI. - 2025-01-09 We released a detailed performance benchmarking and comparison report on Genesis, together with all the test scripts. - 2025-01-08 Released v0.2.1 ðŸŽŠ ðŸŽ‰ - 2025-01-08 Created Discord and Wechat group. - 2024-12-25 Added a docker including support for the ray-tracing renderer - 2024-12-24 Added guidelines for contributing to Genesis Table of Contents 1. What is Genesis? 2. Key Features 3. Quick Installation 4. Docker 5. Documentation 6. Contributing to Genesis 7. Support 8. License and Acknowledgments 9. Associated Papers 10. Citation What is Genesis? Genesis is a physics platform designed for general-purpose Robotics/Embodied AI/Physical AI applications. It is simultaneously multiple things: 1. A universal physics engine re-built from the ground up, capable of simulating a wide range of materials and physical phenomena. 2. A lightweight, ultra-fast, pythonic, and user-friendly robotics simulation platform. 3. A powerful and fast photo-realistic rendering system. 4. A generative data engine that transforms user-prompted natural language description into various modalities of data. Powered by a universal physics engine re-designed and re-built from the ground up, Genesis integrates various physics solvers and their coupling into a unified framework. This core physics engine is further enhanced by a generative agent framework that operates at an upper level, aiming towards fully automated data generation for robotics and beyond. Note: Currently, we are open-sourcing the underlying physics engine and the simulation platform. Our generative framework is a modular system that incorporates many different generative modules, each handling a certain range of data modalities, routed by a high level agent. Some of the modules integrated existing papers and some are still under submission. Access to our generative feature will be gradually rolled out in the near future. If you are interested, feel free to explore more in the paper list below. Genesis aims to: - Lower the barrier to using physics simulations, making robotics research accessible to everyone. See our mission statement. - Unify diverse physics solvers into a single framework to recreate the physical world with the highest fidelity. - Automate data generation, reducing human effort and letting the data flywheel spin on its own. Project Page: <https://genesis-embodied-ai.github.io/> Key Features - Speed: Over 43 million FPS when simulating a Franka robotic arm with a single RTX 4090 430,000 times faster than real-time. - Cross-platform: Runs on Linux, macOS, Windows, and supports multiple compute backends CPU, Nvidia/AMD GPUs, Apple Metal. - Integration of diverse physics solvers: Rigid body, MPM, SPH, FEM, PBD, Stable Fluid. - Wide range of material models: Simulation and coupling of rigid bodies, liquids, gases, deformable objects, thin-shell objects, and granular materials. - Compatibility with various robots: Robotic arms, legged robots, drones, soft robots, and support for loading , , , , , , and more. - Photo-realistic rendering: Native ray-tracing-based rendering. - Differentiability: Genesis is designed to be fully differentiable. Currently, our MPM solver and Tool Solver support differentiability, with other solvers planned for future versions starting with rigid & articulated body solver. - User-friendliness: Designed for simplicity, with intuitive installation and APIs. Quick Installation Install PyTorch first following the official instructions. Then, install Genesis via PyPI: For the latest version to date, make sure that is up-to-date via , then run command: Note that the package must still be updated manually to sync with main branch. Users seeking to edit the source code of Genesis are encourage to install Genesis in editable mode. First, make sure that has been uninstalled, then clone the repository and install locally: Docker If you want to use Genesis from Docker, you can first build the Docker image as: Then you can run the examples inside the docker image mounted to : AMD users AMD users can use Genesis using the file, which is built by running: and can then be used by running: The examples will be accessible from . Note: AMD users should use the vulkan backend. This means you will need to call to initialise Genesis. Documentation Comprehensive documentation is available in English, Chinese, and Japanese. This includes detailed installation steps, tutorials, and API references. Contributing to Genesis The Genesis project is an open and collaborative effort. We welcome all forms of contributions from the community, including: - Pull requests for new features or bug fixes. - Bug reports through GitHub Issues. - Suggestions to improve Genesis's usability. Refer to our contribution guide for more details. Support - Report bugs or request features via GitHub Issues. - Join discussions or ask questions on GitHub Discussions. License and Acknowledgments The Genesis source code is licensed under Apache 2.0. Genesis's development has been made possible thanks to these open-source projects: - Taichi: High-performance cross-platform compute backend. Kudos to the Taichi team for their technical support! - FluidLab: Reference MPM solver implementation. - SPHTaichi: Reference SPH solver implementation. - Ten Minute Physics and PBF3D: Reference PBD solver implementations. - MuJoCo: Reference for rigid body dynamics. - libccd: Reference for collision detection. - PyRender: Rasterization-based renderer. - LuisaCompute and LuisaRender: Ray-tracing DSL. - Madrona and Madrona-mjx: Batch renderer backend Associated Papers Genesis is a large scale effort that integrates state-of-the-art technologies of various existing and on-going research work into a single system. Here we include a non-exhaustive list of all the papers that contributed to the Genesis project in one way or another: - Xian, Zhou, et al. "Fluidlab: A differentiable environment for benchmarking complex fluid manipulation." arXiv preprint arXiv:2303.02346 2023. - Xu, Zhenjia, et al. "Roboninja: Learning an adaptive cutting policy for multi-material objects." arXiv preprint arXiv:2302.11553 2023. - Wang, Yufei, et al. "Robogen: Towards unleashing infinite data for automated robot learning via generative simulation." arXiv preprint arXiv:2311.01455 2023. - Wang, Tsun-Hsuan, et al. "Softzoo: A soft robot co-design benchmark for locomotion in diverse environments." arXiv preprint arXiv:2303.09555 2023. - Wang, Tsun-Hsuan Johnson, et al. "Diffusebot: Breeding soft robots with physics-augmented generative diffusion models." Advances in Neural Information Processing Systems 36 2023: 44398-44423. - Katara, Pushkal, Zhou Xian, and Katerina Fragkiadaki. "Gen2sim: Scaling up robot learning in simulation with generative models." 2024 IEEE International Conference on Robotics and Automation ICRA. IEEE, 2024. - Si, Zilin, et al. "DiffTactile: A Physics-based Differentiable Tactile Simulator for Contact-rich Robotic Manipulation." arXiv preprint arXiv:2403.08716 2024. - Wang, Yian, et al. "Thin-Shell Object Manipulations With Differentiable Physics Simulations." arXiv preprint arXiv:2404.00451 2024. - Lin, Chunru, et al. "UBSoft: A Simulation Platform for Robotic Skill Learning in Unbounded Soft Environments." arXiv preprint arXiv:2411.12711 2024. - Zhou, Wenyang, et al. "EMDM: Efficient motion diffusion model for fast and high-quality motion generation." European Conference on Computer Vision. Springer, Cham, 2025. - Qiao, Yi-Ling, Junbang Liang, Vladlen Koltun, and Ming C. Lin. "Scalable differentiable physics for learning and control." International Conference on Machine Learning. PMLR, 2020. - Qiao, Yi-Ling, Junbang Liang, Vladlen Koltun, and Ming C. Lin. "Efficient differentiable simulation of articulated bodies." In International Conference on Machine Learning, PMLR, 2021. - Qiao, Yi-Ling, Junbang Liang, Vladlen Koltun, and Ming Lin. "Differentiable simulation of soft multi-body systems." Advances in Neural Information Processing Systems 34 2021. - Wan, Weilin, et al. "Tlcontrol: Trajectory and language control for human motion synthesis." arXiv preprint arXiv:2311.17135 2023. - Wang, Yian, et al. "Architect: Generating Vivid and Interactive 3D Scenes with Hierarchical 2D Inpainting." arXiv preprint arXiv:2411.09823 2024. - Zheng, Shaokun, et al. "LuisaRender: A high-performance rendering framework with layered and unified interfaces on stream architectures." ACM Transactions on Graphics TOG 41.6 2022: 1-19. - Fan, Yingruo, et al. "Faceformer: Speech-driven 3d facial animation with transformers." Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition. 2022. - Wu, Sichun, Kazi Injamamul Haque, and Zerrin Yumak. "ProbTalk3D: Non-Deterministic Emotion Controllable Speech-Driven 3D Facial Animation Synthesis Using VQ-VAE." Proceedings of the 17th ACM SIGGRAPH Conference on Motion, Interaction, and Games. 2024. - Dou, Zhiyang, et al. "CÂ· ase: Learning conditional adversarial skill embeddings for physics-based characters." SIGGRAPH Asia 2023 Conference Papers. 2023. ... and many more on-going work. Citation If you use Genesis in your research, please consider citing: bibtex @miscGenesis, author = Genesis Authors, title = Genesis: A Generative and Universal Physics Engine for Robotics and Beyond, month = December, year = 2024, url = https://github.com/Genesis-Embodied-AI/Genesis