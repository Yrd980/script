Note of deprecation Thank you for developing with Llama models. As part of the Llama 3.1 release, we’ve consolidated GitHub repos and added some additional repos as we’ve expanded Llama’s functionality into being an e2e Llama Stack. Please use the following repos going forward: - llama-models - Central repo for the foundation models including basic utilities, model cards, license and use policies - PurpleLlama - Key component of Llama Stack focusing on safety risks and inference time mitigations - llama-toolchain - Model development inference/fine-tuning/safety shields/synthetic data generation interfaces and canonical implementations - llama-agentic-system - E2E standalone Llama Stack system, along with opinionated underlying interface, that enables creation of agentic applications - llama-cookbook - Community driven scripts and integrations If you have any questions, please feel free to file an issue on any of the above repos and we will do our best to respond in a timely manner. Thank you! Deprecated Llama 2 We are unlocking the power of large language models. Llama 2 is now accessible to individuals, creators, researchers, and businesses of all sizes so that they can experiment, innovate, and scale their ideas responsibly. This release includes model weights and starting code for pre-trained and fine-tuned Llama language models — ranging from 7B to 70B parameters. This repository is intended as a minimal example to load Llama 2 models and run inference. For more detailed examples leveraging Hugging Face, see llama-cookbook. Updates post-launch See UPDATES.md. Also for a running list of frequently asked questions, see here. Download In order to download the model weights and tokenizer, please visit the Meta website and accept our License. Once your request is approved, you will receive a signed URL over email. Then run the download.sh script, passing the URL provided when prompted to start the download. Pre-requisites: Make sure you have and installed. Then run the script: . Keep in mind that the links expire after 24 hours and a certain amount of downloads. If you start seeing errors such as , you can always re-request a link. Access to Hugging Face We are also providing downloads on Hugging Face. You can request access to the models by acknowledging the license and filling the form in the model card of a repo. After doing so, you should get access to all the Llama models of a version Code Llama, Llama 2, or Llama Guard within 1 hour. Quick Start You can follow the steps below to quickly get up and running with Llama 2 models. These steps will let you run quick inference locally. For more examples, see the Llama 2 cookbook repository. 1. In a conda env with PyTorch / CUDA available clone and download this repository. 2. In the top-level directory run: 3. Visit the Meta website and register to download the model/s. 4. Once registered, you will get an email with a URL to download the models. You will need this URL when you run the download.sh script. 5. Once you get the email, navigate to your downloaded llama repository and run the download.sh script. - Make sure to grant execution permissions to the download.sh script - During this process, you will be prompted to enter the URL from the email. - Do not use the “Copy Link” option but rather make sure to manually copy the link from the email. 6. Once the model/s you want have been downloaded, you can run the model locally using the command below: Note - Replace with the path to your checkpoint directory and with the path to your tokenizer model. - The should be set to the MP value for the model you are using. - Adjust the and parameters as needed. - This example runs the examplechatcompletion.py found in this repository but you can change that to a different .py file. Inference Different models require different model-parallel MP values: | Model | MP | |--------|----| | 7B | 1 | | 13B | 2 | | 70B | 8 | All models support sequence length up to 4096 tokens, but we pre-allocate the cache according to and values. So set those according to your hardware. Pretrained Models These models are not finetuned for chat or Q&A. They should be prompted so that the expected answer is the natural continuation of the prompt. See for some examples. To illustrate, see the command below to run it with the llama-2-7b model needs to be set to the value: Fine-tuned Chat Models The fine-tuned models were trained for dialogue applications. To get the expected features and performance for them, a specific formatting defined in https://github.com/facebookresearch/llama/blob/main/llama/generation.pyL212 needs to be followed, including the and tags, and tokens, and the whitespaces and breaklines in between we recommend calling on inputs to avoid double-spaces. You can also deploy additional classifiers for filtering out inputs and outputs that are deemed unsafe. See the llama-cookbook repo for an example of how to add a safety checker to the inputs and outputs of your inference code. Examples using llama-2-7b-chat: Llama 2 is a new technology that carries potential risks with use. Testing conducted to date has not — and could not — cover all scenarios. In order to help developers address these risks, we have created the Responsible Use Guide. More details can be found in our research paper as well. Issues Please report any software “bug”, or other problems with the models through one of the following means: - Reporting issues with the model: github.com/facebookresearch/llama - Reporting risky content generated by the model: developers.facebook.com/llamaoutputfeedback - Reporting bugs and security concerns: facebook.com/whitehat/info Model Card See MODELCARD.md. License Our model and weights are licensed for both researchers and commercial entities, upholding the principles of openness. Our mission is to empower individuals, and industry through this opportunity, while fostering an environment of discovery and ethical AI advancements. See the LICENSE file, as well as our accompanying Acceptable Use Policy References 1. Research Paper 2. Llama 2 technical overview 3. Open Innovation AI Research Community For common questions, the FAQ can be found here which will be kept up to date over time as new questions arise. Original Llama The repo for the original llama release is in the https://github.com/facebookresearch/llama/tree/llamav1 branch.