dive !GitHub releasehttps://github.com/wagoodman/dive/releases/latest !Validationshttps://github.com/wagoodman/dive/actions/workflows/validations.yaml !Go Report Cardhttps://goreportcard.com/report/github.com/wagoodman/dive !License: MIThttps://github.com/wagoodman/dive/blob/main/LICENSE !Donatehttps://www.paypal.me/wagoodman A tool for exploring a Docker image, layer contents, and discovering ways to shrink the size of your Docker/OCI image. !Image To analyze a Docker image simply run dive with an image tag/id/digest: or you can dive with Docker directly: or if you want to build your image then jump straight into analyzing it: Building on macOS supporting only the Docker container engine: Additionally you can run this in your CI pipeline to ensure you're keeping wasted space to a minimum this skips the UI: !Image This is beta quality! Feel free to submit an issue if you want a new feature or find a bug : Basic Features Show Docker image contents broken down by layer As you select a layer on the left, you are shown the contents of that layer combined with all previous layers on the right. Also, you can fully explore the file tree with the arrow keys. Indicate what's changed in each layer Files that have changed, been modified, added, or removed are indicated in the file tree. This can be adjusted to show changes for a specific layer, or aggregated changes up to this layer. Estimate "image efficiency" The lower left pane shows basic layer info and an experimental metric that will guess how much wasted space your image contains. This might be from duplicating files across layers, moving files across layers, or not fully removing files. Both a percentage "score" and total wasted file space is provided. Quick build/analysis cycles You can build a Docker image and do an immediate analysis with one command: You only need to replace your command with the same command. CI Integration Analyze an image and get a pass/fail result based on the image efficiency and wasted space. Simply set in the environment when invoking any valid dive command. Multiple Image Sources and Container Engines Supported With the option, you can select where to fetch the container image from: or With valid options as such: - : Docker engine the default option - : A Docker Tar Archive from disk - : Podman engine linux only Installation Ubuntu/Debian Using debs: Using snap: > !CAUTION > The Snap method is not recommended if you installed Docker via , since it might break your existing Docker daemon. > > See also: https://github.com/wagoodman/dive/issues/546 RHEL/Centos Arch Linux Available in the extra repository and can be installed via pacman: Mac If you use Homebrew: If you use MacPorts: Or download the latest Darwin build from the releases page. Windows If you use Chocolatey If you use scoop If you use winget: Or download the latest Windows build from the releases page. Go tools Requires Go version 1.10 or higher. Note: installing in this way you will not see a proper version when running . Nix/NixOS On NixOS: On non-NixOS Linux, Mac X-CMD x-cmd is a toolbox for Posix Shell, offering a lightweight package manager built using shell and awk. Docker When running you'll need to include the Docker socket file: Docker for Windows showing PowerShell compatible line breaks; collapse to a single line for Command Prompt compatibility Note: depending on the version of docker you are running locally you may need to specify the docker API version as an environment variable: or if you are running with a docker image: if you are using an alternative runtime Colima etc then you may need to specify the docker host as an environment variable in order to pull local images: CI Integration When running dive with the environment variable then the dive UI will be bypassed and will instead analyze your docker image, giving it a pass/fail indication via return code. Currently there are three metrics supported via a file that you can put at the root of your repo: You can override the CI config path with the option. KeyBindings Key Binding | Description -------------------------------------------|--------------------------------------------------------- <kbd>Ctrl + C</kbd> or <kbd>Q</kbd> | Exit <kbd>Tab</kbd> | Switch between the layer and filetree views <kbd>Ctrl + F</kbd> | Filter files <kbd>ESC</kbd> | Close filter files <kbd>PageUp</kbd> or <kbd>U</kbd> | Scroll up a page <kbd>PageDown</kbd> or <kbd>D</kbd> | Scroll down a page <kbd>Up</kbd> or <kbd>K</kbd> | Move up one line within a page <kbd>Down</kbd> or <kbd>J</kbd> | Move down one line within a page <kbd>Ctrl + A</kbd> | Layer view: see aggregated image modifications <kbd>Ctrl + L</kbd> | Layer view: see current layer modifications <kbd>Space</kbd> | Filetree view: collapse/uncollapse a directory <kbd>Ctrl + Space</kbd> | Filetree view: collapse/uncollapse all directories <kbd>Ctrl + A</kbd> | Filetree view: show/hide added files <kbd>Ctrl + R</kbd> | Filetree view: show/hide removed files <kbd>Ctrl + M</kbd> | Filetree view: show/hide modified files <kbd>Ctrl + U</kbd> | Filetree view: show/hide unmodified files <kbd>Ctrl + B</kbd> | Filetree view: show/hide file attributes <kbd>PageUp</kbd> or <kbd>U</kbd> | Filetree view: scroll up a page <kbd>PageDown</kbd> or <kbd>D</kbd> | Filetree view: scroll down a page UI Configuration No configuration is necessary, however, you can create a config file and override values: dive will search for configs in the following locations: - - - - can be used instead of if desired.