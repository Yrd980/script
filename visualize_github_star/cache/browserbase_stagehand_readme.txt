<div id="toc" align="center" style="margin-bottom: 0;"> <ul style="list-style: none; margin: 0; padding: 0;"> <a href="https://stagehand.dev"> <picture> <source media="prefers-color-scheme: dark" srcset="media/darklogo.png" /> <img alt="Stagehand" src="media/lightlogo.png" width="200" style="margin-right: 30px;" /> </picture> </a> </ul> </div> <p align="center"> <strong>The AI Browser Automation Framework</strong><br> <a href="https://docs.stagehand.dev">Read the Docs</a> </p> <p align="center"> <a href="https://github.com/browserbase/stagehand/tree/main?tab=MIT-1-ov-fileMIT-1-ov-file"> <picture> <source media="prefers-color-scheme: dark" srcset="media/darklicense.svg" /> <img alt="MIT License" src="media/lightlicense.svg" /> </picture> </a> <a href="https://join.slack.com/t/stagehand-dev/sharedinvite/zt-38khc8iv5-T2acb500OILUaX7lxeBOg"> <picture> <source media="prefers-color-scheme: dark" srcset="media/darkslack.svg" /> <img alt="Slack Community" src="media/lightslack.svg" /> </picture> </a> </p> <p align="center"> <a href="https://trendshift.io/repositories/12122" target="blank"><img src="https://trendshift.io/api/badge/repositories/12122" alt="browserbase%2Fstagehand | Trendshift" style="width: 250px; height: 55px;" width="250" height="55"/></a> </p> <p align="center"> If you're looking for the Python implementation, you can find it <a href="https://github.com/browserbase/stagehand-python"> here</a> </p> <div align="center" style="display: flex; align-items: center; justify-content: center; gap: 4px; margin-bottom: 0;"> <b>Vibe code</b> <span style="font-size: 1.05em;"> Stagehand with </span> <a href="https://director.ai" style="display: flex; align-items: center;"> <span>Director</span> </a> <span> </span> <picture> <img alt="Director" src="media/directoricon.svg" width="25" /> </picture> </div> Why Stagehand? Most existing browser automation tools either require you to write low-level code in a framework like Selenium, Playwright, or Puppeteer, or use high-level agents that can be unpredictable in production. By letting developers choose what to write in code vs. natural language, Stagehand is the natural choice for browser automations in production. 1. Choose when to write code vs. natural language: use AI when you want to navigate unfamiliar pages, and use code Playwright when you know exactly what you want to do. 2. Preview and cache actions: Stagehand lets you preview AI actions before running them, and also helps you easily cache repeatable actions to save time and tokens. 3. Computer use models with one line of code: Stagehand lets you integrate SOTA computer use models from OpenAI and Anthropic into the browser with one line of code. Example Here's how to build a sample browser automation with Stagehand: <div align="center"> <div style="max-width:300px;"> <img src="/media/githubdemo.gif" alt="See Stagehand in Action"> </div> </div> Documentation Visit docs.stagehand.dev to view the full documentation. Getting Started Start with Stagehand with one line of code, or check out our Quickstart Guide for more information: <div align="center"> <a href="https://www.loom.com/share/f5107f86d8c94fa0a8b4b1e89740f7a7"> <p>Watch Anirudh demo create-browser-app to create a Stagehand project!</p> </a> <a href="https://www.loom.com/share/f5107f86d8c94fa0a8b4b1e89740f7a7"> <img style="max-width:300px;" src="https://cdn.loom.com/sessions/thumbnails/f5107f86d8c94fa0a8b4b1e89740f7a7-ec3f428b6775ceeb-full-play.gif"> </a> </div> Build and Run from Source Stagehand is best when you have an API key for an LLM provider and Browserbase credentials. To add these to your project, run: Contributing > !NOTE > We highly value contributions to Stagehand! For questions or support, please join our Slack community. At a high level, we're focused on improving reliability, speed, and cost in that order of priority. If you're interested in contributing, we strongly recommend reaching out to Miguel Gonzalez or Paul Klein in our Slack community before starting to ensure that your contribution aligns with our goals. For more information, please see our Contributing Guide. Acknowledgements This project heavily relies on Playwright as a resilient backbone to automate the web. It also would not be possible without the awesome techniques and discoveries made by tarsier, gemini-zod, and fuji-web. We'd like to thank the following people for their major contributions to Stagehand: - Paul Klein - Anirudh Kamath - Sean McGuire - Miguel Gonzalez - Sameel Arif - Filip Michalsky - Jeremy Press - Navid Pour License Licensed under the MIT License. Copyright 2025 Browserbase, Inc.