What is Multipass? Multipass is a lightweight VM manager for Linux, Windows and macOS. It's designed for developers who want to spin up a fresh Ubuntu environment with a single command. It uses KVM on Linux, Hyper-V on Windows and QEMU on macOS to run virtual machines with minimal overhead. It can also use VirtualBox on Windows and macOS. Multipass will fetch Ubuntu images for you and keep them up to date. Since it supports metadata for cloud-init, you can simulate a small cloud deployment on your laptop or workstation. Project status | Service | Status | |------------------------------------------------------|:------------------------------------------------| | CI | !Build Statusgha-imagegha-url | | Snap | !Build Statussnap-imagesnap-url | | Codecov | !Codecov Statuscodecov-imagecodecov-url | Installation On Linux, Multipass is available as a snap: On macOS, download the installer from GitHub. Alternatively, you can use Homebrew. Please note that this method is not officially supported, as it is not maintained by the Multipass team, but by the community. Multipass is available as a cask: Please note that you may be required to enter your password for some sudo operations during installation. You may also need to disable the firewall to launch a multipass instance successfully on macOS. On Windows, download the installer from GitHub. For more information, see How to install Multipass. Usage Here are some pointers to get started with Multipass. For a more comprehensive learning experience, please check out the Multipass Tutorial. Find available images Launch a fresh instance of the current Ubuntu LTS Check out the running instances Learn more about an instance Connect to a running instance Don't forget to logout or Ctrl-D or you may find yourself heading all the way down Inception levels... ; Run commands inside an instance from outside Stop an instance to save resources Delete an instance The instance will now show up as deleted: If you want to completely get rid of it: Get help Contributing The Multipass team appreciates contributions to the project, through pull requests, issues, or discussions and questions on the Discourse forum. Please read the policy sections below carefully before contributing to the project. <!-- TODO: link to guidelines --> Building Multipass For build instructions, please refer to the following files: - BUILD.linux.md for Linux - BUILD.macOS.md for macOS - BUILD.windows.md for Windows Please report any outdated information or inconsistencies in these files. Or, even better, submit a pull request with the changes! Our CI setup is also a good reference for building and testing Multipass. Automatic linker selection Requires >= CMake 3.29 To accelerate the build, the build system will attempt to locate and utilize or respectively in place of the default linker of the toolchain. To override, set CMAKELINKERTYPE at CMake configure step. Code of Conduct When contributing, you must adhere to the Code of Conduct. Copyright The code in this repository is licensed under GNU General Public License v3.0. See LICENSE for more information. License agreement All contributors must sign the Canonical contributor license agreement CLA, which gives Canonical permission to use the contributions. Without the CLA, contributions cannot be accepted. Pull requests Changes to this project should be proposed as pull requests. Proposed changes will then go through review and once approved, be merged into the main branch. Additional information Multipass documentation gha-image: https://github.com/canonical/multipass/workflows/Linux/badge.svg?branch=main gha-url: https://github.com/canonical/multipass/actions?query=branch%3Amain+workflow%3ALinux snap-image: https://snapcraft.io/multipass/badge.svg snap-url: https://snapcraft.io/multipass codecov-image: https://codecov.io/gh/canonical/multipass/branch/main/graph/badge.svg codecov-url: https://codecov.io/gh/canonical/multipass