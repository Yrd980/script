Getting Started <!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! --> !CI is a notebook-driven development platform. Simply write notebooks with lightweight markup and get high-quality documentation, tests, continuous integration, and packaging for free! makes debugging and refactoring your code much easier than in traditional programming environments since you always have live objects at your fingertips. also promotes software engineering best practices because tests and documentation are first class. - Documentation is automatically generated using Quarto and hosted on GitHub Pages. Docs support LaTeX, are searchable, and are automatically hyperlinked including out-of-the-box support for many packages via https://github.com/fastai/nbdev-index - Publish packages to PyPI and conda as well as tools to simplify package releases. Python best practices are automatically followed, for example, only exported objects are included in - Two-way sync between notebooks and plaintext source code allowing you to use your IDE for code navigation or quick edits - Tests written as ordinary notebook cells are run in parallel with a single command - Continuous integration out-of-the-box with GitHub Actions that run your tests and rebuild your docs - Git-friendly notebooks with Jupyter/Git hooks that clean unwanted metadata and render merge conflicts in a human-readable format - … and much more! Install nbdev works on macOS, Linux, and most Unix-style operating systems. It works on Windows under WSL, but not under cmd or Powershell. You can install nbdev with pip: … or with conda or mamba: Note that must be installed into the same Python environment that you use for both Jupyter and your project. How to use nbdev The best way to learn how to use nbdev is to complete either the written walkthrough or video walkthrough: <a href="http://www.youtube.com/watch?v=l7zS8Ld4iA" target="blank" title="nbdev walkthrough"><img src="https://github.com/fastai/logos/raw/main/nbdevwalkthrough.png" style="border-radius: 10px" width="560" height="315" /></a> Alternatively, there’s a shortened version of the video walkthrough with coding sections sped up using the Python library – it’s 27 minutes faster, but a bit harder to follow. You can also run from the terminal to see the full list of available commands: nbdevbumpversion Increment version in settings.ini by one nbdevchangelog Create a CHANGELOG.md file from closed and labeled GitHub issues nbdevclean Clean all notebooks in to avoid merge conflicts nbdevconda Create a file ready to be built into a package, and optionally build and upload it nbdevcreateconfig Create a config file. nbdevdocs Create Quarto docs and README.md nbdevexport Export notebooks in to Python modules nbdevfilter A notebook filter for Quarto nbdevfix Create working notebook from conflicted notebook nbdevhelp Show help for all console scripts nbdevinstall Install Quarto and the current library nbdevinstallhooks Install Jupyter and git hooks to automatically clean, trust, and fix merge conflicts in notebooks nbdevinstallquarto Install latest Quarto on macOS or Linux, prints instructions for Windows nbdevmerge Git merge driver for notebooks nbdevmigrate Convert all markdown and notebook files in from v1 to v2 nbdevnew Create an nbdev project. nbdevprepare Export, test, and clean notebooks, and render README if needed nbdevpreview Preview docs locally nbdevprocnbs Process notebooks in for docs rendering nbdevpypi Create and upload Python package to PyPI nbdevreadme Create README.md from readmenb index.ipynb by default nbdevreleaseboth Release both conda and PyPI packages nbdevreleasegh Calls , lets you edit the result, then pushes to git and calls nbdevreleasegit Tag and create a release in GitHub for the current version nbdevrequirements Writes a file to based on settings.ini. nbdevsidebar Create sidebar.yml nbdevtest Test in parallel notebooks matching , passing along nbdevtrust Trust notebooks matching nbdevupdate Propagate change in modules matching to notebooks that created them nbdevupdatelicense Allows you to update the license of your project. FAQ Q: What is the warning “Found a cell containing mix of imports and computations. Please use separate cells”? A: You should not have cells that are not exported, and contain a mix of statements along with other code. For instance, don’t do this in a single cell: Instead, split this into two cells, one which does , and the other which does . The reason for this is that when we create your documentation website, we ensure that all of the signatures for functions you document are up to date, by running the imports, exported cells, and https://nbdev.fast.ai/api/showdoc.htmlshowdoc functions in your notebooks. When you mix imports with other code, that other code will be run too, which can cause errors or at least slowdowns when creating your website. Q: Why is nbdev asking for root access? How do I install Quarto without root access? A: When you setup your first project, nbdev will attempt to automatically download and install Quarto for you. This is the program that we use to create your documentation website. Quarto’s standard installation process requires root access, and nbdev will therefore ask for your root password during installation. For most people, this will work fine and everything will be handled automatically – if so, you can skip over the rest of this section, which talks about installing without root access. If you need to install Quarto without root access on Linux, first to wherever you want to store it, then download Quarto, and type: To use this non-root version of Quarto, you’ll need in your environment variable. Alternatively, change the step to place the symlink somewhere else in your path. Q: Someone told me not to use notebooks for “serious” software development! A: Watch this video. Don’t worry, we still get this too, despite having used for a wide range of “very serious” software projects over the last three years, including deep learning libraries, API clients, Python language extensions, terminal user interfaces, and more! Contributing If you want to contribute to , be sure to review the contributions guidelines. This project adheres to fastai’s code of conduct. By participating, you are expected to uphold this code. In general, we strive to abide by generally accepted best practices in open-source software development. Make sure you have ’s git hooks installed by running https://nbdev.fast.ai/api/clean.htmlnbdevinstallhooks in the cloned repository. Copyright Copyright © 2019 onward fast.ai, Inc. Licensed under the Apache License, Version 2.0 the “License”; you may not use this project’s files except in compliance with the License. A copy of the License is provided in the LICENSE file in this repository.