<!-- SPDX-FileCopyrightText: 2014 Julien Pfefferkorn --> <!-- SPDX-FileCopyrightText: 2015 James R. Barlow --> <!-- SPDX-License-Identifier: CC-BY-SA-4.0 --> <img src="docs/images/logo.svg" width="240" alt="OCRmyPDF"> !Build Statushttps://github.com/ocrmypdf/OCRmyPDF/actions/workflows/build.yml !PyPI versionpypihttps://pypi.org/project/ocrmypdf/ !Homebrew versionhomebrew !ReadTheDocsdocs !Python versionspyversions pypi: https://img.shields.io/pypi/v/ocrmypdf.svg "PyPI version" homebrew: https://img.shields.io/homebrew/v/ocrmypdf.svg "Homebrew version" docs: https://readthedocs.org/projects/ocrmypdf/badge/?version=latest "RTD" pyversions: https://img.shields.io/pypi/pyversions/ocrmypdf "Supported Python versions" OCRmyPDF adds an OCR text layer to scanned PDF files, allowing them to be searched or copy-pasted. See the release notes for details on the latest changes. Main features - Generates a searchable PDF/A file from a regular PDF - Places OCR text accurately below the image to ease copy / paste - Keeps the exact resolution of the original embedded images - When possible, inserts OCR information as a "lossless" operation without disrupting any other content - Optimizes PDF images, often producing files smaller than the input file - If requested, deskews and/or cleans the image before performing OCR - Validates input and output files - Distributes work across all available CPU cores - Uses Tesseract OCR engine to recognize more than 100 languages - Keeps your private data private. - Scales properly to handle files with thousands of pages. - Battle-tested on millions of PDFs. <img src="misc/screencast/demo.svg" alt="Demo of OCRmyPDF in a terminal session"> For details: please consult the documentation. Motivation I searched the web for a free command line tool to OCR PDF files: I found many, but none of them were really satisfying: - Either they produced PDF files with misplaced text under the image making copy/paste impossible - Or they did not handle accents and multilingual characters - Or they changed the resolution of the embedded images - Or they generated ridiculously large PDF files - Or they crashed when trying to OCR - Or they did not produce valid PDF files - On top of that none of them produced PDF/A files format dedicated for long time storage ...so I decided to develop my own tool. Installation Linux, Windows, macOS and FreeBSD are supported. Docker images are also available, for both x64 and ARM. | Operating system | Install command | | ----------------------------- | ------------------------------| | Debian, Ubuntu | -l LANGPATHPATH does not provide a Tesseract binary, we use the highest version number that is installed according to the Windows Registry. Documentation and support Once OCRmyPDF is installed, the built-in help which explains the command syntax and options can be accessed via: Our documentation is served on Read the Docs. Please report issues on our GitHub issues page, and follow the issue template for quick response. Feature demo For more features, see the documentation. Requirements In addition to the required Python version, OCRmyPDF requires external program installations of Ghostscript and Tesseract OCR. OCRmyPDF is pure Python, and runs on pretty much everything: Linux, macOS, Windows and FreeBSD. Press & Media - Going paperless with OCRmyPDF - Converting a scanned document into a compressed searchable PDF with redactions - c't 1-2014, page 59: Detailed presentation of OCRmyPDF v1.0 in the leading German IT magazine c't - heise Open Source, 09/2014: Texterkennung mit OCRmyPDF - heise Durchsuchbare PDF-Dokumente mit OCRmyPDF erstellen - Excellent Utilities: OCRmyPDF - LinuxUser Texterkennung mit OCRmyPDF und Scanbd automatisieren - Y Combinator discussion Business enquiries OCRmyPDF would not be the software that it is today without companies and users choosing to provide support for feature development and consulting enquiries. We are happy to discuss all enquiries, whether for extending the existing feature set, or integrating OCRmyPDF into a larger system. License The OCRmyPDF software is licensed under the Mozilla Public License 2.0 MPL-2.0. This license permits integration of OCRmyPDF with other code, included commercial and closed source, but asks you to publish source-level modifications you make to OCRmyPDF. Some components of OCRmyPDF have other licenses, as indicated by standard SPDX license identifiers or the DEP5 copyright and licensing information file. Generally speaking, non-core code is licensed under MIT, and the documentation and test files are licensed under Creative Commons ShareAlike 4.0 CC-BY-SA 4.0. Disclaimer The software is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.