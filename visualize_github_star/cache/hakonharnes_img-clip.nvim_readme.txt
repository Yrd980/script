📋 img-clip.nvim Effortlessly embed images into any markup language, like LaTeX, Markdown or Typst. https://github.com/HakonHarnes/img-clip.nvim/assets/89907156/ab4edc10-d296-4532-bfce-6abdd4f218bf ⚡ Features - 📋 Paste images directly from your system clipboard - 🖱️ Seamlessly drag and drop images from your web browser or file explorer - 📁 Embed images as files, web URLs, or Base64-encoded data - 🌐 Automatically download and embed images from the web - ⚙️ Process images using configurable shell commands - 🎨 Configurable templates with placeholders for file paths, labels, and cursor positioning - 📝 Built-in templates for popular markup languages like LaTeX, Markdown, and Typst - 🔧 Extensive configuration options, including per-project, per-directory, and per-filetype settings - 🔌 Powerful API with example integrations for popular plugins like telescope.nvim and oil.nvim - 💻 Compatible with Linux, macOS, and Windows, including WSL! 🔧 Requirements - Linux: xclip x11 or wl-clipboard wayland - MacOS: pngpaste - Windows: No additional requirements > !IMPORTANT > Run after installation to ensure requirements are satisfied. 📦 Installation Install the plugin with your preferred package manager: lazy.nvim 🚀 Usage Commands The plugin comes with the following commands: - : Pastes an image from the system clipboard - : Prints the debug log, including the output of shell commands - : Prints the current configuration > !TIP > Consider binding to something like . API You can also use the Lua equivalent, which allows you to override your configuration by passing the options directly to the function: <details> <summary>Example</summary> </details> ⚙️ Configuration Setup The plugin is highly configurable. Please refer to the default configuration below: Options Option values can be configured as either static values e.g. "assets", or by dynamically generating them through functions. <details> <summary>Example: Dynamically set the dir path</summary> To set the to match the name of the currently opened file: </details> Processing images The option allows you to specify a shell command to process the image before saving or embedding it as base64. The command should read the image data from the standard input and write the processed data to the standard output. <details> <summary>Example: ImageMagick</summary> Ensure the specified command and its dependencies are installed and accessible in your system's shell environment. The above examples require ImageMagick to be installed. </details> Filetypes Filetype specific options will override the default or global configuration. Any option can be specified for a specific filetype. Filetype specific options are determined by the filetype see . You can override settings for any filetype by specifying it as the key in your configuration: <details> <summary>Example: LaTeX-specific configuration</summary> If you only want to use absolute file paths for LaTeX, then: </details> Overriding options for specific files, directories or custom triggers Options can be overridden for specific files, directories or based on custom conditions. This means that you can have different options for different projects, or even different files within the same project. For files and directories, you can specify settings that apply to only a specific file or directory using its absolute path e.g. . You can also specify a general file or directory name e.g. which will apply the settings to any file. For custom options, you can specify a trigger function that returns a boolean value that is used to enable it. The plugin evaluates the options in the following order: 1. Custom options 2. File specific options 3. Directory specific options 4. Filetype specific options 5. Default options <details> <summary>Example</summary> The options can be nested arbitrarily deep: </details> Project-specific settings with the file Project-specific settings can be specified in a file in the root of your project. The plugin will automatically load this file and use it to override the default settings. If multiple files are found, the closest one to the current file in any parent directory will be used. The should return a Lua table containing the options similar to in lazy.nvim: <details> <summary>Example</summary> </details> Templates Templates in the plugin use placeholders that are dynamically replaced with the correct values at runtime. For available placeholders, see the following table and the demonstration: | Placeholder | Description | Example | | ------------------- | ------------------------------------------------------------------------------------------------------- | ---------------------------------- | | | File name, including its extension. | | | | File name, excluding its extension. | | | | File path. | | | | Figure label, generated from the file name, converted to lower-case and with spaces replaced by dashes. | from | | | Indicates where the cursor will be placed after insertion if is true. | | Templates can also be defined using functions with the above placeholders available as function parameters. <details> <summary>Example</summary> </details> 🖱️ Drag and drop The drag and drop feature enables users to drag images from the web browser or file explorer into the terminal to automatically embed them, in normal mode. Drag and drop can also be enabled in insert mode by setting the option to . For drag and drop to work properly, the terminal emulator must meet the following requirements: 1. The terminal emulator must paste the file path or URL to the image when it is dropped into the terminal. 2. The text must be inserted in bracketed paste mode, which allows Neovim to differentiate pasted text from typed-in text. This is required because the drag and drop feature is implemented by overriding . A list of terminal emulators and their capabilities is given below. <table> <thead> <tr> <th rowspan="2" style="text-align:center;">Terminal</th> <th colspan="2" style="text-align:center;">X11</th> <th colspan="2" style="text-align:center;">Wayland</th> <th colspan="2" style="text-align:center;">MacOS</th> <th colspan="2" style="text-align:center;">Windows</th> </tr> <tr> <th style="text-align:center;">File</th> <th style="text-align:center;">URL</th> <th style="text-align:center;">File</th> <th style="text-align:center;">URL</th> <th style="text-align:center;">File</th> <th style="text-align:center;">URL</th> <th style="text-align:center;">File</th> <th style="text-align:center;">URL</th> </tr> </thead> <tbody> <tr> <td><a href="https://github.com/kovidgoyal/kitty">Kitty</a></td> <td style="text-align:center;">✅</td> <td style="text-align:center;">✅</td> <td style="text-align:center;">✅</td> <td style="text-align:center;">✅</td> <td style="text-align:center;">✅</td> <td style="text-align:center;">✅</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> </tr> <tr> <td><a href="https://github.com/goblinfactory/konsole">Konsole</a></td> <td style="text-align:center;">✅</td> <td style="text-align:center;">✅</td> <td style="text-align:center;">❓️</td> <td style="text-align:center;">❓️</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> </tr> <tr> <td><a href="https://github.com/alacritty/alacritty">Alacritty</a></td> <td style="text-align:center;">✅</td> <td style="text-align:center;">❌</td> <td style="text-align:center;">❌</td> <td style="text-align:center;">❌</td> <td style="text-align:center;">✅</td> <td style="text-align:center;">❌</td> <td style="text-align:center;">✅</td> <td style="text-align:center;">❌</td> </tr> <tr> <td><a href="https://github.com/wez/wezterm">Wezterm</a></td> <td style="text-align:center;">❌</td> <td style="text-align:center;">❌</td> <td style="text-align:center;">❓️</td> <td style="text-align:center;">❓️</td> <td style="text-align:center;">✅</td> <td style="text-align:center;">❌</td> <td style="text-align:center;">✅</td> <td style="text-align:center;">❌</td> </tr> <tr> <td><a href="https://codeberg.org/dnkl/foot">Foot</a></td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">✅</td> <td style="text-align:center;">✅</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> </tr> <tr> <td><a href="https://en.wikipedia.org/wiki/TerminalmacOS">Terminal.app</a></td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">✅</td> <td style="text-align:center;">✅</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> </tr> <tr> <td><a href="https://iterm2.com/">iTerm.app</a></td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">✅</td> <td style="text-align:center;">✅</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> </tr> <tr> <td><a href="https://github.com/vercel/hyper">Hyper</a></td> <td style="text-align:center;">❌</td> <td style="text-align:center;">❌</td> <td style="text-align:center;">❓️</td> <td style="text-align:center;">❓️</td> <td style="text-align:center;">❌</td> <td style="text-align:center;">❌</td> <td style="text-align:center;">❌</td> <td style="text-align:center;">❌</td> </tr> <tr> <td><a href="https://en.wikipedia.org/wiki/Xterm">XTerm</a></td> <td style="text-align:center;">❌</td> <td style="text-align:center;">❌</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> </tr> <tr> <td><a href="https://apps.microsoft.com/detail/9N0DX20HK701">Windows Terminal</a></td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">✅</td> <td style="text-align:center;">✅</td> </tr> <tr> <td><a href="https://en.wikipedia.org/wiki/PowerShell">PowerShell</a></td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">❌</td> <td style="text-align:center;">❌</td> </tr> <tr> <td><a href="https://github.com/cmderdev/cmder">Cmder</a></td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">❌</td> <td style="text-align:center;">❌</td> </tr> <tr> <td><a href="https://github.com/Maximus5/ConEmu">ConEmu</a></td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">➖</td> <td style="text-align:center;">❌</td> <td style="text-align:center;">❌</td> </tr> </tbody> </table> > !TIP > If you're having issues on Windows, try changing the default shell to or . See . > !WARNING > MacOS URLs only work in Safari. 🔌 Integrations Telescope.nvim The plugin can be integrated with telescope.nvim to provide a seamless way to select and embed images using Telescope's powerful fuzzy finding capabilities. <details> <summary>Example configuration</summary> The above function should be bound to a keymap, e.g. through lazy.nvim. </details> Snacks.nvim The plugin can be integrated with Snacks.nvim picker which includes built-in support for previewing media files. <details> <summary>Example configuration</summary> The above function should be bound to a keymap, e.g. through lazy.nvim. </details> Oil.nvim The plugin also integrates with oil.nvim, providing a convenient way to browse and select images using Oil's file explorer. <details> <summary>Example configuration</summary> The above function should be bound to a keymap, e.g. through lazy.nvim. </details> Alternatively, you can invoke img-clip.nvim directly from your oil.nvim configuration: <details> <summary>Example configuration</summary> </details> 🙌 Contributing Contributions are welcome! If you have any ideas, suggestions, or bug reports, please open an issue on the GitHub repository.