!btop++ <a href="https://repology.org/project/btop/versions"> <img src="https://repology.org/badge/vertical-allrepos/btop.svg" alt="Packaging status" align="right"> </a> !Linux !macOS !FreeBSD !NetBSD !OpenBSD !Usage !c++20 !latestrelease !Donatehttps://paypal.me/aristocratos !Sponsorhttps://github.com/sponsors/aristocratos !Coffeehttps://ko-fi.com/aristocratos !btophttps://snapcraft.io/btop !Continuous Build Linuxhttps://github.com/aristocratos/btop/actions/workflows/continuous-build-linux.yml !Continuous Build macOShttps://github.com/aristocratos/btop/actions/workflows/continuous-build-macos.yml !Continuous Build FreeBSDhttps://github.com/aristocratos/btop/actions/workflows/continuous-build-freebsd.yml !Continuous Build NetBSDhttps://github.com/aristocratos/btop/actions/workflows/continuous-build-netbsd.yml !Continuous Build OpenBSDhttps://github.com/aristocratos/btop/actions/workflows/continuous-build-openbsd.yml Index News Documents Description Features Themes Support and funding Prerequisites Read this if you are having issues! Screenshots Keybindings Installation Linux/macOS Compilation Linux Compilation macOS Compilation FreeBSD Compilation NetBSD Compilation OpenBSD GPU compatibility Installing the snap Configurability License News 22 September 2024 Btop release v1.4.0 Intel GPU support added, note that only GPU utilization, power usage and clock speed available to monitor. Thanks to @bjia56 for contributions. NetBSD support added. Thanks to @fraggerfox for contributions. See CHANGELOG.md and latest release for detailed list of new features, bug fixes and new themes. 7 January 2024 Btop release v1.3.0 Big release with GPU support added for Linux and platform support for OpenBSD. Big thanks to @romner-set GPU support and @joske OpenBSD support for contributions. And a multitude of bugfixes and small changes, see CHANGELOG.md and latest release for detailed list and attributions. See news entry below for more information regarding GPU support. 25 November 2023 GPU monitoring added for Linux! Compile from git main to try it out. Use keys , , and to show/hide the gpu monitoring boxes. = Gpu 1, = Gpu 2, etc. Gpu stats/graphs can also be displayed in the "Cpu box" not as verbose, see the cpu options menu for info and configuration. Note that the binaries provided on the release page when released and the continuous builds will not have gpu support enabled. Because the GPU support relies on loading of dynamic gpu libraries, gpu support will not work when also static linking. See Compilation Linux for more info on how to compile with gpu monitoring support. Many thanks to @romner-set who wrote the vast majority of the implementation for GPU support. Big update with version bump to 1.3 coming soon. 28 August 2022 !btop4winhttps://github.com/aristocratos/btop4win First release of btop4win available at https://github.com/aristocratos/btop4win <details> <summary>More...</summary> 16 January 2022 Release v1.2.0 with FreeBSD support. No release binaries for FreeBSD provided as of yet. Again a big thanks to @joske for his porting efforts! Since compatibility with Linux, macOS and FreeBSD are done, the focus going forward will be on new features like GPU monitoring. 13 November 2021 Release v1.1.0 with macOS support. Binaries in continuous-build-macos are only x86 for now. macOS binaries + installer are included for both x86 and ARM64 Apple Silicon in the releases. Big thank you to @joske who wrote the vast majority of the implementation! 30 October 2021 Work on the OSX macOS and FreeBSD branches, both initiated and mostly worked on by @joske, will likely be completed in the coming weeks. The OSX macOS branch has some memory leaks that needs to be sorted out and both have some issues with the processes cpu usage calculation and other smaller issues that needs fixing. If you want to help out, test for bugs/fix bugs or just try out the branches: macOS / OSX FreeBSD Note that GNU make is recommended but not required for macOS/OSX but it is required on FreeBSD. 6 October 2021 macOS development have been started by @joske, big thanks : See branch OSX for current progress. 18 September 2021 The Linux version of btop++ is complete. Released as version 1.0.0 I will be providing statically compiled binaries for a range of architectures in every release for those having problems compiling. For compilation GCC 11 is required. Please report any bugs to the Issues page. The development plan right now: 1.1.0 macOS OSX support 1.2.0 FreeBSD support 1.3.0 Support for GPU monitoring 1.X.0 Other platforms and features... Windows support is not in the plans as of now, but if anyone else wants to take it on, I will try to help. 5 May 2021 This project is gonna take some time until it has complete feature parity with bpytop, since all system information gathering will have to be written from scratch without any external libraries. And will need some help in the form of code contributions to get complete support for BSD and macOS/OSX. </details> Documents CHANGELOG.md CONTRIBUTING.md CODEOFCONDUCT.md Description Resource monitor that shows usage and stats for processor, memory, disks, network and processes. C++ version and continuation of bashtop and bpytop. Features Easy to use, with a game inspired menu system. Full mouse support: all buttons with a highlighted key are clickable and mouse scrolling works in process list and menu boxes. Fast and responsive UI with UP, DOWN key process selection. Function for showing detailed stats for selected process. Ability to filter processes. Easy switching between sorting options. Tree view of processes. Send any signal to selected process. UI menu for changing all config file options. Auto scaling graph for network usage. Shows IO activity and speeds for disks. Battery meter Selectable symbols for the graphs. Custom presets And more... Themes Btop++ uses the same theme files as bpytop and bashtop some color values missing in bashtop themes. See themes folder for available themes. Btop searches the following directories for system themes: this path is relative to the btop executable The first directory that exists and isn't empty is used as the system themes directory. The user themes directory depends on which environment variables are set: If is set, the user themes directory is Otherwise, if is set, the user themes directory is Otherwise, the user themes directory is The command places the default themes in . User created themes should be placed in the user themes directory. Let me know if you want to contribute with new themes. Support and funding You can sponsor this project through GitHub. See my sponsors page for options. Or donate through PayPal or ko-fi. Any support is greatly appreciated! Prerequisites For the best experience run within a terminal with support for: 24-bit truecolor See list of terminals with truecolor support 256-color terminals are supported through 24-bit to 256-color conversion when setting "truecolor" to False in the options or with "-lc/--low-color" arguments. 16 color TTY mode will be activated if a real tty device is detected. Can be forced with "-t/--tty" arguments. Wide characters Are sometimes problematic in web-based terminals Also necessary is a UTF8 locale and a font that includes: Unicode Block “Braille Patterns” U+2800 - U+28FF Not needed in TTY mode or with graphs set to type: block or tty. Unicode Block “Geometric Shapes” U+25A0 - U+25FF Unicode Block "Box Drawing" and "Block Elements" U+2500 - U+259F Optional Dependencies Needed for GPU monitoring Only Linux GPU monitoring also requires a btop binary built with GPU support flag. See GPU compatibility section for more about compiling with GPU support. NVIDIA If you have an NVIDIA GPU you must use an official NVIDIA driver, both the closed-source and open-source ones have been verified to work. In addition to that you must also have the nvidia-ml dynamic library installed, which should be included with the driver package of your distribution. AMD If you have an AMD GPU is required, which may or may not be packaged for your distribution. INTEL Requires a working C compiler if compiling from source - tested with GCC12 and Clang16. Also requires the user to have permission to read from SYSFS. Can be set with preferred or or by running btop with or equivalent. Notice Text rendering issues If you are having problems with the characters in the graphs not looking like they do in the screenshots, it's likely a problem with your systems configured fallback font not having support for braille characters. See Terminess Powerline for an example of a font that includes the braille symbols. See comments by @sgleizes link and @XenHat link in issue 100 for possible solutions. If text is misaligned and you use Konsole or Yakuake, turning off "Bi-Directional text rendering" is a possible fix. Characters clipping into each other or text/border misalignments are not bugs caused by btop, but most likely a fontconfig or terminal problem where the braille characters making up the graphs aren't rendered correctly. Look to the creators of the terminal emulator you use to fix these issues if the previously mentioned fixes don't work for you. Screenshots Main UI showing details for a selected process !Screenshot 1 Main UI in TTY mode !Screenshot 2 Main UI with custom options !Screenshot 3 Main-menu !Screenshot 3 Options-menu !Screenshot 4 Help-menu !Screenshot 5 Installation Binaries for Linux are statically compiled with musl and work on kernel releases 2.6.39 and newer 1. Download btop-VERSION-ARCH-PLATFORM.tbz from latest release and unpack to a new folder Notice! Use x8664 for 64-bit x86 systems, i486 and i686 are 32-bit! 2. Install from created folder Run: 3. Optional/Required for Intel GPU Set extended capabilities or suid bit to btop Enables signal sending to any process without starting with and can prevent /proc read permissions problems on some systems. Is required for Intel GPU support. Run: or Uninstall Run: Show help Binary release from native os repo openSUSE Tumbleweed: For all other versions, see openSUSE Software: btop Fedora RHEL/Rocky/AlmaLinux 8+ FreeBSD NetBSD Binary release on Homebrew macOS x8664 & ARM64 / Linux x8664 Homebrew Compilation Linux Requires at least GCC 11 or Clang 16. The Makefile also needs GNU and should already be installed on any modern distribution. GPU compatibility Btop++ supports Nvidia and AMD GPUs and Intel IGPUs out of the box on Linux x8664, provided you have the correct drivers and libraries. Gpu support for Nvidia or AMD will not work when static linking glibc or musl, etc.! For x8664 Linux the flag is automatically set to , to manually disable gpu support set the flag to false, like: or with CMake NVIDIA You must use an official NVIDIA driver, both the closed-source and open-source ones have been verified to work. In addition to that you must also have the dynamic library installed, which should be included with the driver package of your distribution. AMD AMDGPU data is queried using the ROCm SMI library, which may or may not be packaged for your distribution. If your distribution doesn't provide a package, btop++ is statically linked to ROCm SMI with the make flag. This flag expects the ROCm SMI source code in , and compilation will fail if it's not there. The latest tested version is 5.6.x, which can be obtained with the following command: <details> <summary> With Make </summary> 1. Install dependencies example for Ubuntu 21.04 Hirsute 2. Clone repository 3. Compile Options for make: | Flag | Description | |---------------------------------|-------------------------------------------------------------------------| | | To display full compiler/linker commands | | | For static compilation | | | For less verbose output | | | To force stripping of debug symbols adds linker flag | | | Sets OPTFLAGS to and enables more verbose debug logging | | | To manually set the target architecture | | | Enable/disable GPU support Enabled by default on X8664 Linux | | | To statically link the ROCm SMI library used for querying AMDGPU | | | For appending flags to both compiler and linker | | | Manually set which compiler to use | Example: might give a performance boost if compiling only for your own system. Notice! If using LDAP Authentication, usernames will show as UID number for LDAP users if compiling statically with glibc. 4. Install Append to set target, default: Notice! Only use "sudo" when installing to a NON user owned directory. 5. Optional/Required for Intel GPU support Set extended capabilities or suid bit to btop No need for to enable signal sending to any process and to prevent /proc read permissions problems on some systems. Also required for Intel GPU monitoring. Run after make install and use same PREFIX if any was used at install. or Set and to select user and group, default is and Uninstall Remove any object files from source dir Remove all object files, binaries and created directories in source dir Show help </details> <details> <summary> With CMake Community maintained </summary> 1. Install build dependencies Requires Clang / GCC, CMake, Ninja, Lowdown and Git For example, with Debian Bookworm: 2. Clone the repository bash Configure cmake -B build -G Ninja Build cmake --build build bash cmake --install build cat build/installmanifest.txt | xargs rm -irv bash cmake --build build -t clean bash brew install coreutils make gcc@12 lowdown bash git clone https://github.com/aristocratos/btop.git cd btop bash gmake bash sudo gmake install bash sudo gmake setuid bash sudo gmake uninstall bash gmake clean bash gmake distclean bash gmake help bash brew update --quiet brew install cmake git llvm ninja lowdown bash git clone https://github.com/aristocratos/btop.git && cd btop bash Configure export LLVMPREFIX="$brew --prefix llvm" export CXX="$LLVMPREFIX/bin/clang++" export CPPFLAGS="-I$LLVMPREFIX/include" export LDFLAGS="-L$LLVMPREFIX/lib -L$LLVMPREFIX/lib/c++ -Wl,-rpath,$LLVMPREFIX/lib/c++ -fuse-ld=$LLVMPREFIX/bin/ld64.lld" cmake -B build -G Ninja Build cmake --build build bash cmake --install build cat build/installmanifest.txt | xargs rm -irv bash cmake --build build -t clean bash sudo pkg install gmake gcc11 coreutils git lowdown bash git clone https://github.com/aristocratos/btop.git cd btop bash gmake bash sudo gmake install bash sudo gmake setuid bash sudo gmake uninstall bash gmake clean bash gmake distclean bash gmake help bash pkg install cmake ninja lowdown bash pkg install cmake gcc13 ninja lowdown bash git clone https://github.com/aristocratos/btop.git && cd btop bash Configure cmake -B build -G Ninja Build cmake --build build bash Configure CXX=g++13 cmake -B build -G Ninja Build cmake --build build bash cmake --install build cat build/installmanifest.txt | xargs rm -irv bash cmake --build build -t clean bash pkgadd gmake gcc11 coreutils git bash git clone https://github.com/aristocratos/btop.git cd btop bash gmake CXXFLAGS="-DNDEBUG" bash sudo gmake install bash sudo gmake setuid bash sudo gmake uninstall bash gmake clean bash gmake distclean bash gmake help bash pkgadd cmake ninja-build gcc11 coreutils git bash git clone https://github.com/aristocratos/btop.git && cd btop bash Configure cmake -DCMAKECXXCOMPILER="/usr/pkg/gcc11/bin/g++" -B build -G Ninja Build cmake --build build bash cmake --install build cat build/installmanifest.txt | xargs rm -irv bash cmake --build build -t clean bash pkgadd gmake gcc%11 g++%11 coreutils git lowdown bash git clone https://github.com/aristocratos/btop.git cd btop bash gmake CXX=eg++ bash sudo gmake install bash sudo gmake setuid bash sudo gmake uninstall bash gmake clean bash gmake distclean bash gmake help bash pkgadd cmake g++%11 git ninja lowdown bash git clone https://github.com/aristocratos/btop.git && cd btop bash Configure CXX=eg++ cmake -B build -G Ninja Build cmake --build build bash cmake --install build cat build/installmanifest.txt | xargs rm -irv bash cmake --build build -t clean bash sudo snap install btop or sudo snap install btop-desktop sudo snap install btop --edge or sudo snap install btop-desktop --edge bash sudo snap connect btop:removable-media or sudo snap connect btop-desktop:removable-media bash ? Config file for btop v. 1.2.2 Name of a btop++/bpytop/bashtop formatted ".theme" file, "Default" and "TTY" for builtin themes. Themes should be placed in "../share/btop/themes" relative to binary or "$HOME/.config/btop/themes" colortheme = "Default" If the theme set background should be shown, set to False if you want terminal background transparency. themebackground = True Sets if 24-bit truecolor should be used, will convert 24-bit colors to 256 color 6x6x6 color cube if false. truecolor = True Set to true to force tty mode regardless if a real tty has been detected or not. Will force 16-color mode and TTY theme, set all graph symbols to "tty" and swap out other non tty friendly symbols. forcetty = False Define presets for the layout of the boxes. Preset 0 is always all boxes shown with default settings. Max 9 presets. Format: "boxname:P:G,boxname:P:G" P=0 or 1 for alternate positions, G=graph symbol to use for box. Use whitespace " " as separator between different presets. Example: "cpu:0:default,mem:0:tty,proc:1:default cpu:0:braille,proc:0:tty" presets = "cpu:1:default,proc:0:default cpu:0:default,mem:0:default,net:0:default cpu:0:block,net:0:tty" Set to True to enable "h,j,k,l,g,G" keys for directional control in lists. Conflicting keys for h:"help" and k:"kill" is accessible while holding shift. vimkeys = False Rounded corners on boxes, is ignored if TTY mode is ON. roundedcorners = True Default symbols to use for graph creation, "braille", "block" or "tty". "braille" offers the highest resolution but might not be included in all fonts. "block" has half the resolution of braille but uses more common characters. "tty" uses only 3 different symbols but will work with most fonts and should work in a real TTY. Note that "tty" only has half the horizontal resolution of the other two, so will show a shorter historical view. graphsymbol = "braille" Graph symbol to use for graphs in cpu box, "default", "braille", "block" or "tty". graphsymbolcpu = "default" Graph symbol to use for graphs in cpu box, "default", "braille", "block" or "tty". graphsymbolmem = "default" Graph symbol to use for graphs in cpu box, "default", "braille", "block" or "tty". graphsymbolnet = "default" Graph symbol to use for graphs in cpu box, "default", "braille", "block" or "tty". graphsymbolproc = "default" Manually set which boxes to show. Available values are "cpu mem net proc" and "gpu0" through "gpu5", separate values with whitespace. shownboxes = "proc cpu mem net" Update time in milliseconds, recommended 2000 ms or above for better sample times for graphs. updatems = 1500 Processes sorting, "pid" "program" "arguments" "threads" "user" "memory" "cpu lazy" "cpu direct", "cpu lazy" sorts top process over time easier to follow, "cpu direct" updates top process directly. procsorting = "cpu lazy" Reverse sorting order, True or False. procreversed = False Show processes as a tree. proctree = False Use the cpu graph colors in the process list. proccolors = True Use a darkening gradient in the process list. procgradient = True If process cpu usage should be of the core it's running on or usage of the total available cpu power. procpercore = True Show process memory as bytes instead of percent. procmembytes = True Use /proc/pid/smaps for memory information in the process info box very slow but more accurate procinfosmaps = False Show proc box on left side of screen instead of right. procleft = False Sets the CPU stat shown in upper half of the CPU graph, "total" is always available. Select from a list of detected attributes from the options menu. cpugraphupper = "total" Sets the CPU stat shown in lower half of the CPU graph, "total" is always available. Select from a list of detected attributes from the options menu. cpugraphlower = "total" Toggles if the lower CPU graph should be inverted. cpuinvertlower = True Set to True to completely disable the lower CPU graph. cpusinglegraph = False Show cpu box at bottom of screen instead of top. cpubottom = False Shows the system uptime in the CPU box. showuptime = True Show cpu temperature. checktemp = True Which sensor to use for cpu temperature, use options menu to select from list of available sensors. cpusensor = "Auto" Show temperatures for cpu cores also if checktemp is True and sensors has been found. showcoretemp = True Set a custom mapping between core and coretemp, can be needed on certain cpus to get correct temperature for correct core. Use lm-sensors or similar to see which cores are reporting temperatures on your machine. Format "x:y" x=core with wrong temp, y=core with correct temp, use space as separator between multiple entries. Example: "4:0 5:1 6:3" cpucoremap = "" Which temperature scale to use, available values: "celsius", "fahrenheit", "kelvin" and "rankine". tempscale = "celsius" Use base 10 for bits/bytes sizes, KB = 1000 instead of KiB = 1024. base10sizes = False Show CPU frequency. showcpufreq = True Draw a clock at top of screen, formatting according to strftime, empty string to disable. Special formatting: /host = hostname | /user = username | /uptime = system uptime clockformat = "%H:%M" Update main ui in background when menus are showing, set this to false if the menus is flickering too much for comfort. backgroundupdate = True Custom cpu model name, empty string to disable. customcpuname = "" Optional filter for shown disks, should be full path of a mountpoint, separate multiple values with whitespace " ". Begin line with "exclude=" to change to exclude filter, otherwise defaults to "most include" filter. Example: disksfilter="exclude=/boot /home/user". disksfilter = "exclude=/boot" Show graphs instead of meters for memory values. memgraphs = True Show mem box below net box instead of above. membelownet = False Count ZFS ARC in cached and available memory. zfsarccached = True If swap memory should be shown in memory box. showswap = True Show swap as a disk, ignores showswap value above, inserts itself after first disk. swapdisk = True If mem box should be split to also show disks info. showdisks = True Filter out non physical disks. Set this to False to include network disks, RAM disks and similar. onlyphysical = True Read disks list from /etc/fstab. This also disables onlyphysical. usefstab = False Set to true to show available disk space for privileged users. diskfreepriv = False Toggles if io activity % disk busy time should be shown in regular disk usage view. showiostat = True Toggles io mode for disks, showing big graphs for disk read/write speeds. iomode = False Set to True to show combined read/write io graphs in io mode. iographcombined = False Set the top speed for the io graphs in MiB/s 100 by default, use format "mountpoint:speed" separate disks with whitespace " ". Example: "/mnt/media:100 /:20 /boot:1". iographspeeds = "" Set fixed values for network graphs in Mebibits. Is only used if netauto is also set to False. netdownload = 100 netupload = 100 Use network graphs auto rescaling mode, ignores any values set above and rescales down to 10 Kibibytes at the lowest. netauto = True Sync the auto scaling for download and upload to whichever currently has the highest scale. netsync = False Starts with the Network Interface specified here. netiface = "br0" Show battery stats in top right if battery is present. showbattery = True Which battery to use if multiple are present. "Auto" for auto detection. selectedbattery = "Auto" Set loglevel for "~/.config/btop/btop.log" levels are: "ERROR" "WARNING" "INFO" "DEBUG". The level set includes all lower levels, i.e. "DEBUG" will show all logging info. loglevel = "DEBUG" text Usage: btop OPTIONS Options: -c, --config <file> Path to a config file -d, --debug Start in debug mode with additional logs and metrics -f, --filter <filter> Set an initial process filter --force-utf Override automatic UTF locale detection -l, --low-color Disable true color, 256 colors only -p, --preset <id> Start with a preset 0-9 -t, --tty Force tty mode with ANSI graph symbols and 16 colors only --no-tty Force disable tty mode -u, --update <ms> Set an initial update rate in milliseconds -h, --help Show this help message and exit -V, --version Show a version message and exit more with --version LICENSE Apache License 2.0