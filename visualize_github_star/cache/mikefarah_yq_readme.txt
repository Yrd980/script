yq !Build !Docker Pulls !Github Releases by Release !Go Report !CodeQL a lightweight and portable command-line YAML, JSON, INI and XML processor. uses jq like syntax but works with yaml files as well as json, xml, ini, properties, csv and tsv. It doesn't yet support everything does - but it does support the most common operations and functions, and more is being added continuously. yq is written in go - so you can download a dependency free binary for your platform and you are good to go! If you prefer there are a variety of package managers that can be used as well as Docker and Podman, all listed below. Quick Usage Guide Read a value: Pipe from STDIN: Update a yaml file, in place Update using environment variables Merge multiple files Multiple updates to a yaml file Find and update an item in an array: Convert JSON to YAML See recipes for more examples and the documentation for more information. Take a look at the discussions for common questions, and cool ideas Install Download the latest binary wget Use wget to download, gzipped pre-compiled binaries: For instance, VERSION=v4.2.0 and BINARY=yqlinuxamd64 Compressed via tar.gz Plain binary Latest version MacOS / Linux via Homebrew: Using Homebrew Linux via snap: Snap notes installs with strict confinement in snap, this means it doesn't have direct access to root files. To read root files you can: And to write to a root file you can either use sponge: or write to a temporary file: Run with Docker or Podman Oneshot use: Note that you can run in docker without network access and other privileges if you desire, namely . Pipe in via STDIN: You'll need to pass the flag to docker: Run commands interactively: It can be useful to have a bash function to avoid typing the whole docker command: Running as root: 's container image no longer runs under root https://github.com/mikefarah/yq/pull/860. If you'd like to install more things in the container image, or you're having permissions issues when attempting to read/write files you'll need to either: Or, in your Dockerfile: Missing timezone data By default, the alpine image yq uses does not include timezone data. If you'd like to use the operator, you'll need to include this data: Podman with SELinux If you are using podman with SELinux, you will need to set the shared volume flag on the volume mount: GitHub Action See https://mikefarah.gitbook.io/yq/usage/github-action for more. Go Install: Community Supported Installation methods As these are supported by the community :heart: - however, they may be out of date with the officially supported releases. Please note that the Debian package previously supported by @rmescandon is no longer maintained. Please use an alternative installation method. X-CMD Checkout on x-cmd: https://x-cmd.com/mod/yq - Instant Results: See the output of your yq filter in real-time. - Error Handling: Encounter a syntax error? It will display the error message and the results of the closest valid filter Thanks @edwinjhlee! Nix See here Webi See webi Supported by @adithyasunil26 https://github.com/webinstall/webi-installers/tree/master/yq Arch Linux Windows: Using Chocolatey !Chocolateyhttps://chocolatey.org/packages/yq !Chocolateyhttps://chocolatey.org/packages/yq Supported by @chillum https://chocolatey.org/packages/yq Using scoop Using winget Mac: Using MacPorts Supported by @herbygillot https://ports.macports.org/maintainer/github/herbygillot Alpine Linux Alpine Linux v3.20+ and Edge: Alpine Linux up to v3.19: Supported by Tuan Hoang https://pkgs.alpinelinux.org/packages?name=yq-go Flox: Flox can be used to install yq on Linux, MacOS, and Windows through WSL. Features - Detailed documentation with many examples - Written in portable go, so you can download a lovely dependency free binary - Uses similar syntax as but works with YAML, INI, JSON and XML files - Fully supports multi document yaml files - Supports yaml front matter blocks e.g. jekyll/assemble - Colorized yaml output - Date/Time manipulation and formatting with TZ - Deeply data structures - Sort keys - Manipulate yaml comments, styling, tags and anchors and aliases. - Update in place - Complex expressions to select and update - Keeps yaml formatting and comments when updating though there are issues with whitespace - Decode/Encode base64 data - Load content from other files - Convert to/from json/ndjson - Convert to/from xml - Convert to/from properties - Convert to/from csv/tsv - General shell completion scripts bash/zsh/fish/powershell - Reduce to merge multiple files or sum an array or other fancy things. - Github Action to use in your automated pipeline thanks @devorbitus Usage Check out the documentation for more detailed and advanced usage. Known Issues / Missing Features - attempts to preserve comment positions and whitespace as much as possible, but it does not handle all scenarios see https://github.com/go-yaml/yaml/tree/v3 for details - Powershell has its own...opinions on quoting yq - "yes", "no" were dropped as boolean values in the yaml 1.2 standard - which is the standard yq assumes. See tips and tricks for more common problems and solutions.