<div align="center"> ComfyUI The most powerful and modular visual AI engine and application. !Websitewebsite-shieldwebsite-url !Dynamic JSON Badgediscord-shielddiscord-url !Twittertwitter-shieldtwitter-url !Matrixmatrix-shieldmatrix-url <br> !github-release-shieldgithub-release-link !github-release-date-shieldgithub-release-link !github-downloads-shieldgithub-downloads-link !github-downloads-latest-shieldgithub-downloads-link matrix-shield: https://img.shields.io/badge/Matrix-000000?style=flat&logo=matrix&logoColor=white matrix-url: https://app.element.io//room/%23comfyuispace%3Amatrix.org website-shield: https://img.shields.io/badge/ComfyOrg-4285F4?style=flat website-url: https://www.comfy.org/ <!-- Workaround to display total user from https://github.com/badges/shields/issues/4500issuecomment-2060079995 --> discord-shield: https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscord.com%2Fapi%2Finvites%2Fcomfyorg%3Fwithcounts%3Dtrue&query=%24.approximatemembercount&logo=discord&logoColor=white&label=Discord&color=green&suffix=%20total discord-url: https://www.comfy.org/discord twitter-shield: https://img.shields.io/twitter/follow/ComfyUI twitter-url: https://x.com/ComfyUI github-release-shield: https://img.shields.io/github/v/release/comfyanonymous/ComfyUI?style=flat&sort=semver github-release-link: https://github.com/comfyanonymous/ComfyUI/releases github-release-date-shield: https://img.shields.io/github/release-date/comfyanonymous/ComfyUI?style=flat github-downloads-shield: https://img.shields.io/github/downloads/comfyanonymous/ComfyUI/total?style=flat github-downloads-latest-shield: https://img.shields.io/github/downloads/comfyanonymous/ComfyUI/latest/total?style=flat&label=downloads%40latest github-downloads-link: https://github.com/comfyanonymous/ComfyUI/releases !ComfyUI Screenshot </div> ComfyUI lets you design and execute advanced stable diffusion pipelines using a graph/nodes/flowchart based interface. Available on Windows, Linux, and macOS. Get Started Desktop Application - The easiest way to get started. - Available on Windows & macOS. Windows Portable Package - Get the latest commits and completely portable. - Available on Windows. Manual Install Supports all operating systems and GPU types NVIDIA, AMD, Intel, Apple Silicon, Ascend. Examples See what ComfyUI can do with the example workflows. Features - Nodes/graph/flowchart interface to experiment and create complex Stable Diffusion workflows without needing to code anything. - Image Models - SD1.x, SD2.x unCLIP - SDXL, SDXL Turbo - Stable Cascade - SD3 and SD3.5 - Pixart Alpha and Sigma - AuraFlow - HunyuanDiT - Flux - Lumina Image 2.0 - HiDream - Cosmos Predict2 - Qwen Image - Image Editing Models - Omnigen 2 - Flux Kontext - HiDream E1.1 - Video Models - Stable Video Diffusion - Mochi - LTX-Video - Hunyuan Video - Nvidia Cosmos and Cosmos Predict2 - Wan 2.1 - Wan 2.2 - Audio Models - Stable Audio - ACE Step - 3D Models - Hunyuan3D 2.0 - Asynchronous Queue system - Many optimizations: Only re-executes the parts of the workflow that changes between executions. - Smart memory management: can automatically run large models on GPUs with as low as 1GB vram with smart offloading. - Works even if you don't have a GPU with: slow - Can load ckpt and safetensors: All in one checkpoints or standalone diffusion models, VAEs and CLIP models. - Safe loading of ckpt, pt, pth, etc.. files. - Embeddings/Textual inversion - Loras regular, locon and loha - Hypernetworks - Loading full workflows with seeds from generated PNG, WebP and FLAC files. - Saving/Loading workflows as Json files. - Nodes interface can be used to create complex workflows like one for Hires fix or much more advanced ones. - Area Composition - Inpainting with both regular and inpainting models. - ControlNet and T2I-Adapter - Upscale Models ESRGAN, ESRGAN variants, SwinIR, Swin2SR, etc... - GLIGEN - Model Merging - LCM models and Loras - Latent previews with TAESD - Works fully offline: core will never download anything unless you want to. - Optional API nodes to use paid models from external providers through the online Comfy API. - Config file to set the search paths for models. Workflow examples can be found on the Examples page Release Process ComfyUI follows a weekly release cycle targeting Friday but this regularly changes because of model releases or large changes to the codebase. There are three interconnected repositories: 1. ComfyUI Core - Releases a new stable version e.g., v0.7.0 - Serves as the foundation for the desktop release 2. ComfyUI Desktop - Builds a new release using the latest stable core version 3. ComfyUI Frontend - Weekly frontend updates are merged into the core repository - Features are frozen for the upcoming core release - Development continues for the next release cycle Shortcuts | Keybind | Explanation | |------------------------------------|--------------------------------------------------------------------------------------------------------------------| | + | Queue up current graph for generation | | + + | Queue up current graph as first for generation | | + + | Cancel current generation | | + / + | Undo/Redo | | + | Save workflow | | + | Load workflow | | + | Select all nodes | | + | Collapse/uncollapse selected nodes | | + | Mute/unmute selected nodes | | + | Bypass selected nodes acts like the node was removed from the graph and the wires reconnected through | | / | Delete selected nodes | | + | Delete the current graph | | | Move the canvas around when held and moving the cursor | | / + | Add clicked node to selection | | + / + | Copy and paste selected nodes without maintaining connections to outputs of unselected nodes | | + / + + | Copy and paste selected nodes maintaining connections from outputs of unselected nodes to inputs of pasted nodes | | + | Move multiple selected nodes at the same time | | + | Load default graph | | + | Canvas Zoom in | | + | Canvas Zoom out | | + + LMB + Vertical drag | Canvas Zoom in/out | | | Pin/Unpin selected nodes | | + | Group selected nodes | | | Toggle visibility of the queue | | | Toggle visibility of history | | | Refresh graph | | | Show/Hide menu | | | Fit view to selection Whole graph when nothing is selected | | Double-Click LMB | Open node quick search palette | | + Drag | Move multiple wires at once | | + + LMB | Disconnect all wires from clicked slot | can also be replaced with instead for macOS users Installing Windows Portable There is a portable standalone build for Windows that should work for running on Nvidia GPUs or for running on your CPU only on the releases page. Direct link to download Simply download, extract with 7-Zip and run. Make sure you put your Stable Diffusion checkpoints/models the huge ckpt/safetensors files in: ComfyUI\models\checkpoints If you have trouble extracting it, right click the file -> properties -> unblock How do I share models between another UI and ComfyUI? See the Config file to set the search paths for models. In the standalone windows build you can find this file in the ComfyUI directory. Rename this file to extramodelpaths.yaml and edit it with your favorite text editor. comfy-cli You can install and start ComfyUI using comfy-cli: Manual Install Windows, Linux python 3.13 is supported but using 3.12 is recommended because some custom nodes and their dependencies might not support it yet. Git clone this repo. Put your SD checkpoints the huge ckpt/safetensors files in: models/checkpoints Put your VAE in: models/vae AMD GPUs Linux only AMD users can install rocm and pytorch with pip if you don't have it already installed, this is the command to install the stable version: This is the command to install the nightly with ROCm 6.4 which might have some performance improvements: Intel GPUs Windows and Linux Option 1 Intel Arc GPU users can install native PyTorch with torch.xpu support using pip currently available in PyTorch nightly builds. More information can be found here 1. To install PyTorch nightly, use the following command: 2. Launch ComfyUI by running Option 2 Alternatively, Intel GPUs supported by Intel Extension for PyTorch IPEX can leverage IPEX for improved performance. 1. For Intel® Arc™ A-Series Graphics utilizing IPEX, create a conda environment and use the commands below: For other supported Intel GPUs with IPEX, visit Installation for more information. Additional discussion and help can be found here. NVIDIA Nvidia users should install stable pytorch using this command: This is the command to install pytorch nightly instead which might have performance improvements. Troubleshooting If you get the "Torch not compiled with CUDA enabled" error, uninstall torch with: And install it again with the command above. Dependencies Install the dependencies by opening your terminal inside the ComfyUI folder and: After this you should have everything installed and can proceed to running ComfyUI. Others: Apple Mac silicon You can install ComfyUI in Apple Mac silicon M1 or M2 with any recent macOS version. 1. Install pytorch nightly. For instructions, read the Accelerated PyTorch training on Mac Apple Developer guide make sure to install the latest pytorch nightly. 1. Follow the ComfyUI manual installation instructions for Windows and Linux. 1. Install the ComfyUI dependencies. If you have another Stable Diffusion UI you might be able to reuse the dependencies. 1. Launch ComfyUI by running > Note: Remember to add your models, VAE, LoRAs etc. to the corresponding Comfy folders, as discussed in ComfyUI manual installation. DirectML AMD Cards on Windows This is very badly supported and is not recommended. There are some unofficial builds of pytorch ROCm on windows that exist that will give you a much better experience than this. This readme will be updated once official pytorch ROCm builds for windows come out. Then you can launch ComfyUI with: Ascend NPUs For models compatible with Ascend Extension for PyTorch torchnpu. To get started, ensure your environment meets the prerequisites outlined on the installation page. Here's a step-by-step guide tailored to your platform and installation method: 1. Begin by installing the recommended or newer kernel version for Linux as specified in the Installation page of torch-npu, if necessary. 2. Proceed with the installation of Ascend Basekit, which includes the driver, firmware, and CANN, following the instructions provided for your specific platform. 3. Next, install the necessary packages for torch-npu by adhering to the platform-specific instructions on the Installation page. 4. Finally, adhere to the ComfyUI manual installation guide for Linux. Once all components are installed, you can run ComfyUI as described earlier. Cambricon MLUs For models compatible with Cambricon Extension for PyTorch torchmlu. Here's a step-by-step guide tailored to your platform and installation method: 1. Install the Cambricon CNToolkit by adhering to the platform-specific instructions on the Installation 2. Next, install the PyTorchtorchmlu following the instructions on the Installation 3. Launch ComfyUI by running Iluvatar Corex For models compatible with Iluvatar Extension for PyTorch. Here's a step-by-step guide tailored to your platform and installation method: 1. Install the Iluvatar Corex Toolkit by adhering to the platform-specific instructions on the Installation 2. Launch ComfyUI by running Running For AMD cards not officially supported by ROCm Try running it with this command if you have issues: For 6700, 6600 and maybe other RDNA2 or older: For AMD 7600 and maybe other RDNA3 cards: AMD ROCm Tips You can enable experimental memory efficient attention on recent pytorch in ComfyUI on some AMD GPUs using this command, it should already be enabled by default on RDNA3. If this improves speed for you on latest pytorch on your GPU please report it so that I can enable it by default. You can also try setting this env variable which might speed things up at the cost of a very slow initial run. Notes Only parts of the graph that have an output with all the correct inputs will be executed. Only parts of the graph that change from each execution to the next will be executed, if you submit the same graph twice only the first will be executed. If you change the last part of the graph only the part you changed and the part that depends on it will be executed. Dragging a generated png on the webpage or loading one will give you the full workflow including seeds that were used to create it. You can use to change emphasis of a word or phrase like: good code:1.2 or bad code:0.8. The default emphasis for is 1.1. To use characters in your actual prompt escape them like \\ or \\. You can use day|night, for wildcard/dynamic prompts. With this syntax "wild|card|test" will be randomly replaced by either "wild", "card" or "test" by the frontend every time you queue the prompt. To use characters in your actual prompt escape them like: \\ or \\. Dynamic prompts also support C-style comments, like or . To use a textual inversion concepts/embeddings in a text prompt put them in the models/embeddings directory and use them in the CLIPTextEncode node like this you can omit the .pt extension: How to show high-quality previews? Use to enable previews. The default installation includes a fast latent preview method that's low-resolution. To enable higher-quality previews with TAESD, download the taesddecoder.pth, taesdxldecoder.pth, taesd3decoder.pth and taef1decoder.pth and place them in the folder. Once they're installed, restart ComfyUI and launch it with to enable high-quality previews. How to use TLS/SSL? Generate a self-signed certificate not appropriate for shared/production use and key by running the command: Use to enable TLS/SSL, the app will now be accessible with instead of . > Note: Windows users can use alexisrolland/docker-openssl or one of the 3rd party binary distributions to run the command example above. <br/><br/>If you use a container, note that the volume mount can be a relative path so would create the key & cert files in the current directory of your command prompt or powershell terminal. Support and dev channel Discord: Try the help or feedback channels. Matrix space: comfyuispace:matrix.org it's like discord but open source. See also: https://www.comfy.org/ Frontend Development As of August 15, 2024, we have transitioned to a new frontend, which is now hosted in a separate repository: ComfyUI Frontend. This repository now hosts the compiled JS from TS/Vue under the directory. Reporting Issues and Requesting Features For any bugs, issues, or feature requests related to the frontend, please use the ComfyUI Frontend repository. This will help us manage and address frontend-specific concerns more efficiently. Using the Latest Frontend The new frontend is now the default for ComfyUI. However, please note: 1. The frontend in the main ComfyUI repository is updated fortnightly. 2. Daily releases are available in the separate frontend repository. To use the most up-to-date frontend version: 1. For the latest daily release, launch ComfyUI with this command line argument: 2. For a specific version, replace with the desired version number: This approach allows you to easily switch between the stable fortnightly release and the cutting-edge daily updates, or even specific versions for testing purposes. Accessing the Legacy Frontend If you need to use the legacy frontend for any reason, you can access it using the following command line argument: This will use a snapshot of the legacy frontend preserved in the ComfyUI Legacy Frontend repository. QA Which GPU should I buy for this? See this page for some recommendations