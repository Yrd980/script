<p align="center"> <img src="https://raw.githubusercontent.com/marimo-team/marimo/main/docs/static/marimo-logotype-thick.svg"> </p> <p align="center"> <em>A reactive Python notebook that's reproducible, git-friendly, and deployable as scripts or apps.</em> <p align="center"> <a href="https://docs.marimo.io" target="blank"><strong>Docs</strong></a> · <a href="https://marimo.io/discord?ref=readme" target="blank"><strong>Discord</strong></a> · <a href="https://docs.marimo.io/examples/" target="blank"><strong>Examples</strong></a> · <a href="https://marimo.io/gallery/" target="blank"><strong>Gallery</strong></a> · <a href="https://www.youtube.com/@marimo-team/" target="blank"><strong>YouTube</strong></a> </p> <p align="center"> <b>English | </b> <a href="https://github.com/marimo-team/marimo/blob/main/READMETraditionalChinese.md" target="blank"><b>繁體中文</b></a> <b> | </b> <a href="https://github.com/marimo-team/marimo/blob/main/READMEChinese.md" target="blank"><b>简体中文</b></a> <b> | </b> <a href="https://github.com/marimo-team/marimo/blob/main/READMEJapanese.md" target="blank"><b>日本語</b></a> <b> | </b> <a href="https://github.com/marimo-team/marimo/blob/main/READMESpanish.md" target="blank"><b>Español</b></a> </p> <p align="center"> <a href="https://pypi.org/project/marimo/"><img src="https://img.shields.io/pypi/v/marimo?color=%2334D058&label=pypi"/></a> <a href="https://anaconda.org/conda-forge/marimo"><img src="https://img.shields.io/conda/vn/conda-forge/marimo.svg"/></a> <a href="https://marimo.io/discord?ref=readme"><img src="https://shields.io/discord/1059888774789730424" alt="discord" /></a> <img alt="Pepy Total Downloads" src="https://img.shields.io/pepy/dt/marimo?label=pypi%20%7C%20downloads"/> <img alt="Conda Downloads" src="https://img.shields.io/conda/d/conda-forge/marimo" /> <a href="https://github.com/marimo-team/marimo/blob/main/LICENSE"><img src="https://img.shields.io/pypi/l/marimo" /></a> </p> marimo is a reactive Python notebook: run a cell or interact with a UI element, and marimo automatically runs dependent cells or <a href="expensive-notebooks">marks them as stale</a>, keeping code and outputs consistent. marimo notebooks are stored as pure Python with first-class SQL support, executable as scripts, and deployable as apps. Highlights. - 🚀 batteries-included: replaces , , , , , and more - ⚡️ reactive: run a cell, and marimo reactively runs all dependent cells or <a href="expensive-notebooks">marks them as stale</a> - 🖐️ interactive: bind sliders, tables, plots, and more to Python — no callbacks required - 🐍 git-friendly: stored as files - 🛢️ designed for data: query dataframes, databases, warehouses, or lakehouses with SQL, filter and search dataframes - 🤖 AI-native: generate cells with AI tailored for data work - 🔬 reproducible: no hidden state, deterministic execution, built-in package management - 🏃 executable: execute as a Python script, parameterized by CLI args - 🛜 shareable: deploy as an interactive web app or slides, run in the browser via WASM - 🧩 reusable: import functions and classes from one notebook to another - 🧪 testable: run pytest on notebooks - ⌨️ a modern editor: GitHub Copilot, AI assistants, vim keybindings, variable explorer, and more Try marimo at our online playground, which runs entirely in the browser! Jump to the quickstart for a primer on our CLI. A reactive programming environment marimo guarantees your notebook code, outputs, and program state are consistent. This solves many problems associated with traditional notebooks like Jupyter. A reactive programming environment. Run a cell and marimo reacts by automatically running the cells that reference its variables, eliminating the error-prone task of manually re-running cells. Delete a cell and marimo scrubs its variables from program memory, eliminating hidden state. <img src="https://raw.githubusercontent.com/marimo-team/marimo/main/docs/static/reactive.gif" width="700px" /> <a name="expensive-notebooks"></a> Compatible with expensive notebooks. marimo lets you configure the runtime to be lazy, marking affected cells as stale instead of automatically running them. This gives you guarantees on program state while preventing accidental execution of expensive cells. Synchronized UI elements. Interact with UI elements like sliders, dropdowns, dataframe transformers, and chat interfaces, and the cells that use them are automatically re-run with their latest values. <img src="https://raw.githubusercontent.com/marimo-team/marimo/main/docs/static/readme-ui.gif" width="700px" /> Interactive dataframes. Page through, search, filter, and sort millions of rows blazingly fast, no code required. <img src="https://raw.githubusercontent.com/marimo-team/marimo/main/docs/static/docs-df.gif" width="700px" /> Generate cells with data-aware AI. Generate code with an AI assistant that is highly specialized for working with data, with context about your variables in memory; zero-shot entire notebooks. Customize the system prompt, bring your own API keys, or use local models. <img src="https://raw.githubusercontent.com/marimo-team/marimo/main/docs/static/readme-generate-with-ai.gif" width="700px" /> Query data with SQL. Build SQL queries that depend on Python values and execute them against dataframes, databases, lakehouses, CSVs, Google Sheets, or anything else using our built-in SQL engine, which returns the result as a Python dataframe. <img src="https://raw.githubusercontent.com/marimo-team/marimo/main/docs/static/readme-sql-cell.png" width="700px" /> Your notebooks are still pure Python, even if they use SQL. Dynamic markdown. Use markdown parametrized by Python variables to tell dynamic stories that depend on Python data. Built-in package management. marimo has built-in support for all major package managers, letting you install packages on import. marimo can even serialize package requirements in notebook files, and auto install them in isolated venv sandboxes. Deterministic execution order. Notebooks are executed in a deterministic order, based on variable references instead of cells' positions on the page. Organize your notebooks to best fit the stories you'd like to tell. Performant runtime. marimo runs only those cells that need to be run by statically analyzing your code. Batteries-included. marimo comes with GitHub Copilot, AI assistants, Ruff code formatting, HTML export, fast code completion, a VS Code extension, an interactive dataframe viewer, and many more quality-of-life features. Quickstart The marimo concepts playlist on our YouTube channel gives an overview of many features. Installation. In a terminal, run To install with additional dependencies that unlock SQL cells, AI completion, and more, run Create notebooks. Create or edit notebooks with Run apps. Run your notebook as a web app, with Python code hidden and uneditable: <img src="https://raw.githubusercontent.com/marimo-team/marimo/main/docs/static/docs-model-comparison.gif" style="border-radius: 8px" width="450px" /> Execute as scripts. Execute a notebook as a script at the command line: Automatically convert Jupyter notebooks. Automatically convert Jupyter notebooks to marimo notebooks with the CLI or use our web interface. Tutorials. List all tutorials: Share cloud-based notebooks. Use molab, a cloud-based marimo notebook service similar to Google Colab, to create and share notebook links. Questions? See the FAQ at our docs. Learn more marimo is easy to get started with, with lots of room for power users. For example, here's an embedding visualizer made in marimo video: <img src="https://raw.githubusercontent.com/marimo-team/marimo/main/docs/static/embedding.gif" width="700px" /> Check out our docs, usage examples, and our gallery to learn more. <table border="0"> <tr> <td> <a target="blank" href="https://docs.marimo.io/gettingstarted/keyconcepts.html"> <img src="https://docs.marimo.io/static/reactive.gif" style="max-height: 150px; width: auto; display: block" /> </a> </td> <td> <a target="blank" href="https://docs.marimo.io/api/inputs/index.html"> <img src="https://raw.githubusercontent.com/marimo-team/marimo/main/docs/static/readme-ui.gif" style="max-height: 150px; width: auto; display: block" /> </a> </td> <td> <a target="blank" href="https://docs.marimo.io/guides/workingwithdata/plotting.html"> <img src="https://raw.githubusercontent.com/marimo-team/marimo/main/docs/static/docs-intro.gif" style="max-height: 150px; width: auto; display: block" /> </a> </td> <td> <a target="blank" href="https://docs.marimo.io/api/layouts/index.html"> <img src="https://raw.githubusercontent.com/marimo-team/marimo/main/docs/static/outputs.gif" style="max-height: 150px; width: auto; display: block" /> </a> </td> </tr> <tr> <td> <a target="blank" href="https://docs.marimo.io/gettingstarted/keyconcepts.html"> Tutorial </a> </td> <td> <a target="blank" href="https://docs.marimo.io/api/inputs/index.html"> Inputs </a> </td> <td> <a target="blank" href="https://docs.marimo.io/guides/workingwithdata/plotting.html"> Plots </a> </td> <td> <a target="blank" href="https://docs.marimo.io/api/layouts/index.html"> Layout </a> </td> </tr> <tr> <td> <a target="blank" href="https://marimo.app/l/c7h6pz"> <img src="https://marimo.io/shield.svg"/> </a> </td> <td> <a target="blank" href="https://marimo.app/l/0ue871"> <img src="https://marimo.io/shield.svg"/> </a> </td> <td> <a target="blank" href="https://marimo.app/l/lxp1jk"> <img src="https://marimo.io/shield.svg"/> </a> </td> <td> <a target="blank" href="https://marimo.app/l/14ovyr"> <img src="https://marimo.io/shield.svg"/> </a> </td> </tr> </table> Contributing We appreciate all contributions! You don't need to be an expert to help out. Please see CONTRIBUTING.md for more details on how to get started. > Questions? Reach out to us on Discord. Community We're building a community. Come hang out with us! - 🌟 Star us on GitHub - 💬 Chat with us on Discord - 📧 Subscribe to our Newsletter - ☁️ Join our Cloud Waitlist - ✏️ Start a GitHub Discussion - 🦋 Follow us on Bluesky - 🐦 Follow us on Twitter - 🎥 Subscribe on YouTube - 🕴️ Follow us on LinkedIn A NumFOCUS affiliated project. marimo is a core part of the broader Python ecosystem and is a member of the NumFOCUS community, which includes projects such as NumPy, SciPy, and Matplotlib. <img src="https://raw.githubusercontent.com/marimo-team/marimo/main/docs/static/numfocusaffiliatedproject.png" height="40px" /> Inspiration ✨ marimo is a reinvention of the Python notebook as a reproducible, interactive, and shareable Python program, instead of an error-prone JSON scratchpad. We believe that the tools we use shape the way we think — better tools, for better minds. With marimo, we hope to provide the Python community with a better programming environment to do research and communicate it; to experiment with code and share it; to learn computational science and teach it. Our inspiration comes from many places and projects, especially Pluto.jl, ObservableHQ, and Bret Victor's essays. marimo is part of a greater movement toward reactive dataflow programming. From IPyflow, streamlit, TensorFlow, PyTorch, JAX, and React, the ideas of functional, declarative, and reactive programming are transforming a broad range of tools for the better. <p align="right"> <img src="https://raw.githubusercontent.com/marimo-team/marimo/main/docs/static/marimo-logotype-horizontal.png" height="200px"> </p>