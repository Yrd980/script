<div align="center"> fzf.fish üîçüêü üç¥ Mantained Fork with Tab Completions ‚å®Ô∏è All of the functionality is based on the Oddlama fork. Go give him some love! üíï !latest release badgehttps://github.com/patrickf1/fzf.fish/releases !build status badgehttps://github.com/patrickf1/fzf.fish/actions !awesome badgehttps://git.io/awsm.fish </div> Augment your Fish command line with mnemonic key bindings to efficiently find what you need using fzf. https://user-images.githubusercontent.com/1967248/197308919-51d04602-2d5f-46aa-a96e-6cf1617e3067.mov Search commands Use to interactively find and insert file paths, git commit hashes, and other entities into your command line. <kbd>Tab</kbd> to select multiple entries. If you trigger a search while your cursor is on a word, that word will be used to seed the fzf query and will be replaced by your selection. All searches include a preview of the entity hovered over to help you find what you're looking for. üìÅ Search Directory !Search Directory example - Fzf input: recursive listing of current directory's non-hidden files - Output: relative paths of selected files - Key binding and mnemonic: <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>F</kbd> for file - Preview window: file with syntax highlighting, directory contents, or file type - Remarks - directories are inserted with a trailing , so if you select exactly one directory, you can immediately hit <kbd>ENTER</kbd> to cd into itcd docs - if the current token is a directory with a trailing slash e.g. , then that directory is searched instead - ignores files that are also ignored by git ü™µ Search Git Log !Search Git Log example - Fzf input: the current repository's formatted - Output: hashes of selected commits - Key binding and mnemonic: <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>L</kbd> for log - Preview window: commit message and diff üìù Search Git Status !Search Git Status example - Fzf input: the current repository's - Output: relative paths of selected lines - Key binding and mnemonic: <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>S</kbd> for status - Preview window: the git diff of the file üìú Search History !Search History example - Fzf input: Fish's command history - Output: selected commands - Key binding and mnemonic: <kbd>Ctrl</kbd>+<kbd>R</kbd> for reverse-i-search - Preview window: the entire command with Fish syntax highlighting üñ•Ô∏è Search Processes !Search Processes example - Fzf input: the pid and command of all running processes, outputted by - Output: pids of selected processes - Key binding and mnemonic: <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>P</kbd> for process - Preview window: the CPU usage, memory usage, start time, and other information about the process üí≤ Search Variables !Search Variables example - Fzf input: all the shell variables currently in scopevar scope - Output: selected shell variables - Key binding and mnemonic: <kbd>Ctrl</kbd>+<kbd>V</kbd> for variable - Preview window: the variable's scope info and values - is excluded for technical reasons so use Search History instead to inspect it Installation First, install a proper version of these CLI dependencies: | CLI | Minimum version required | Description | | -------- | ------------------------ | --------------------------------------- | | fish | 3.4.0 | a modern shell | | fzf | 0.33.0 | fuzzy finder that powers this plugin | | fd | 8.5.0 | faster, colorized alternative to | | bat | 0.16.0 | smarter with syntax highlighting | fd and bat only need to be installed if you will use Search Directory. Next, because is incompatible with other fzf plugins, check for and remove these two common alternatives. Finally, install this plugin with Fisher. > can be installed manually or with other plugin managers but only Fisher is officially supported. Configuration Customize key bindings includes an ergonomic function for configuring its key bindings. Read its documentation: Call in your in order to persist your custom bindings. Change fzf options for all commands fzf supports global default options via the FZFDEFAULTOPTS and FZFDEFAULTOPTSFILE environment variables. If neither are set, sets its own default opts whenever it executes fzf. Change fzf options for a specific command Each command's fzf options can be configured via a variable: | Command | Variable | | ----------------- | --------------------- | | Search Directory | | | Search Git Log | | | Search Git Status | | | Search History | | | Search Processes | | | Search Variables | | The value of each variable is appended last to fzf's options list. Because fzf uses the last instance of an option if it is specified multiple times, custom options take precedence. Custom fzf options unlock a variety of augmentations: - add fzf key bindings to open files in Vim - adjust the preview command or window - re-populate fzf's input list on demand - change the search mode Find more ideas and tips in the Cookbook. Change how Search Directory previews directories and regular files Search Directory, by default, executes to preview directories and to preview regular files. To use your own directory preview command, set it in : And to use your own file preview command, set it in : Omit the target path for both variables as will itself specify the argument to preview. Change what files are listed by Search Directory To pass custom options to when Search Directory executes it to populate the list of files, set them in : <a id='fd-gi'></a>By default, hides files listed in . You can disable this behavior by adding the flag to . Change Search Git Log's commit formatting Search Git Log executes to format the list of commits. To use your own commit log format, set it in . For example, this shows the hash and subject for each commit: The format must be one line per commit and the hash must be the first field, or else Search Git Log will fail to determine which commits you selected. Integrate with a diff highlighter To pipe the git diff previews from Search Git Log and Search Git Status through a highlighter tool e.g. delta or diff-so-fancy, set a command invoking the highlighter in . It should not pipe its output to a pager: Change Search History's date time format Search History shows the date time each command was executed. To change how its formatted, set your strftime format string in . For example, this shows the date time as DD-MM-YY: Do not to include the vertical box-drawing character not to be confused with the pipe character as it is relied on to delineate the date time from the command. Further reading Find answers to these questions and more in the project Wiki: - How does compare to other popular fzf plugins for Fish? - Why isn't this command working? - How can I customize this command? - How can I contribute to this plugin? awesome badge: https://awesome.re/mentioned-badge.svg bat: https://github.com/sharkdp/bat build status badge: https://img.shields.io/github/actions/workflow/status/PatrickF1/fzf.fish/continuousintegration.yml?branch=main cd docs: https://fishshell.com/docs/current/cmds/cd.html fd: https://github.com/sharkdp/fd fish: https://fishshell.com fisher: https://github.com/jorgebucaran/fisher fzf: https://github.com/junegunn/fzf latest release badge: https://img.shields.io/github/v/release/patrickf1/fzf.fish search directory: -search-directory search git log: -search-git-log search git status: -search-git-status search history: -search-history var scope: https://fishshell.com/docs/current/variable-scope