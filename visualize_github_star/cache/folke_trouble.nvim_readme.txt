üö¶ Trouble A pretty list for showing diagnostics, references, telescope results, quickfix and location lists to help you solve all the trouble your code is causing. !image ‚ú® Features - Diagnostics - LSP references - LSP implementations - LSP definitions - LSP type definitions - LSP Document Symbols - LSP Incoming/Outgoing calls - quickfix list - location list - Telescope search results - fzf-lua results üì∞ What's new? This is a full rewrite of the original trouble.nvim. The new version is much more flexible and powerful, with a lot of new features and improvements: - multiple trouble windows at the same time - LSP document symbols - LSP incoming/outgoing calls - lots of options to configure trouble windows floats or splits - option to focus the trouble window when opened or not - option to follow the item under the cursor - option to pin the buffer as the source for the opened trouble window - full tree views of anything - highly configurable views with custom formatters, filters, and sorters - show multiple sections in the same view - multi-line messages - prettier and configurable indent guides - tree view that follows the natural hierarchy of the items like document symbols, or file structure - expansive API and command - trouble to define custom views - statusline component useful with document symbols ‚ö°Ô∏è Requirements - Neovim >= 0.9.2 - Neovim >= 0.10.0 OR the and nvim-treesitter parsers - Properly configured Neovim LSP client - nvim-web-devicons is optional to enable file icons - a theme with properly configured highlight groups for Neovim Diagnostics - a patched font for the default severity and fold icons üì¶ Installation Install the plugin with your preferred package manager: lazy.nvim ‚öôÔ∏è Configuration Setup Trouble is highly configurable. Please refer to the default settings below. <details><summary>Default Settings</summary> <!-- config:start --> <!-- config:end --> </details> Make sure to check the Examples! üöÄ Usage Commands The Trouble command is a wrapper around the Trouble API. It can do anything the regular API can do. - Some examples: - Toggle diagnostics for the current buffer and stay in the current window: - - Show document symbols on the right of the current window. Keep the document symbols in sync with the buffer you started the command in. - - You can use lua code in the options for the command. The examples below all do the same thing. - - - - Merging of nested options, with or without quoting strings: - - - Please refer to the API section for more information on the available actions and options. Modes: <!-- modes:start --> - diagnostics: diagnostics - fzf: FzfLua results previously opened with . - fzffiles: FzfLua results previously opened with . - loclist: Location List - lsp: LSP definitions, references, implementations, type definitions, and declarations - lspcommand: command - lspdeclarations: declarations - lspdefinitions: definitions - lspdocumentsymbols: document symbols - lspimplementations: implementations - lspincomingcalls: Incoming Calls - lspoutgoingcalls: Outgoing Calls - lspreferences: references - lsptypedefinitions: type definitions - qflist: Quickfix List - quickfix: Quickfix List - snacks: Snacks results previously opened with . - snacksfiles: Snacks results previously opened with . - symbols: document symbols - telescope: Telescope results previously opened with . - telescopefiles: Telescope results previously opened with . <!-- modes:end --> Filters Please refer to the filter docs for more information examples on filters. API You can use the following functions in your keybindings: <details><summary>API</summary> <!-- api:start --> <!-- api:end --> </details> Telescope You can easily open any search results in Trouble, by defining a custom action: When you open telescope, you can now hit to open the results in Trouble fzf-lua You can easily open any search results in Trouble, by defining a custom action: When you open fzf-lua, you can now hit to open the results in Trouble Statusline Component Example for lualine.nvim: üé® Colors The table below shows all the highlight groups defined for Trouble. <details><summary>Highlight Groups</summary> <!-- colors:start --> | Highlight Group | Default Group | Description | | --- | --- | --- | | TroubleBasename | TroubleFilename | | | TroubleCode | Special | | | TroubleCount | TabLineSel | | | TroubleDirectory | Directory | | | TroubleFilename | Directory | | | TroubleIconArray | @punctuation.bracket | | | TroubleIconBoolean | @boolean | | | TroubleIconClass | @type | | | TroubleIconConstant | @constant | | | TroubleIconConstructor | @constructor | | | TroubleIconDirectory | Special | | | TroubleIconEnum | @lsp.type.enum | | | TroubleIconEnumMember | @lsp.type.enumMember | | | TroubleIconEvent | Special | | | TroubleIconField | @variable.member | | | TroubleIconFile | Normal | | | TroubleIconFunction | @function | | | TroubleIconInterface | @lsp.type.interface | | | TroubleIconKey | @lsp.type.keyword | | | TroubleIconMethod | @function.method | | | TroubleIconModule | @module | | | TroubleIconNamespace | @module | | | TroubleIconNull | @constant.builtin | | | TroubleIconNumber | @number | | | TroubleIconObject | @constant | | | TroubleIconOperator | @operator | | | TroubleIconPackage | @module | | | TroubleIconProperty | @property | | | TroubleIconString | @string | | | TroubleIconStruct | @lsp.type.struct | | | TroubleIconTypeParameter | @lsp.type.typeParameter | | | TroubleIconVariable | @variable | | | TroubleIndent | LineNr | | | TroubleIndentFoldClosed | CursorLineNr | | | TroubleIndentFoldOpen | TroubleIndent | | | TroubleIndentLast | TroubleIndent | | | TroubleIndentMiddle | TroubleIndent | | | TroubleIndentTop | TroubleIndent | | | TroubleIndentWs | TroubleIndent | | | TroubleNormal | NormalFloat | | | TroubleNormalNC | NormalFloat | | | TroublePos | LineNr | | | TroublePreview | Visual | | | TroubleSource | Comment | | | TroubleText | Normal | | <!-- colors:end --> </details>