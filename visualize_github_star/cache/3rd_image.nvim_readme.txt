🖼️ image.nvim This plugin adds image support to Neovim using Kitty's Graphics Protocol or ueberzugpp. \ It works great with Kitty and Tmux, and it handles all the rendering complexity for you. Join on Discord: https://discord.gg/GTwbCxBNgz https://github.com/user-attachments/assets/0ae46acf-3240-446a-a458-7c7dfd03b9b7 We provide: - A library for working with images - A set of built-in integrations like Markdown and Neorg Try it out quickly by downloading minimal-setup.lua from the root of this repository and running Getting started Quick start for the best experience 1. Install the Kitty terminal 2. Install ImageMagick 3. Install the plugin and tweak the configuration 4. Optionally configure Tmux 5. Check the How to ...? section Dependencies Rendering backend We support two rendering backends, so first you need to set up one of these: 1. Kitty recommended >= 28.0 for the backend - Has the best performance, native clipping, caching, etc. - You need to use Kitty or a terminal emulator that implements Kitty's Graphics Protocol. - WezTerm implements it, but the performance is bad and it's not fully compliant. Most things work, but due to these issues it's not officially supported. - Ghostty not that much information about this yet! SUBJECT TO CHANGE 2. Überzug++ for the backend - Works with any terminal emulator. - Has much lower performance. ImageMagick We need to convert, scale, and crop images, and for that we use ImageMagick. \ There are two ways we can do this, and you need to pick and follow the setup for the one you prefer. 1. Via CLI wrapping default - using the processor - Shells out to ImageMagick's CLI utilities like and . - Slightly scary in some scenarios as we could potentially pass untrusted input to a shell. We try to keep things secure, but this would be the main selling point of using the bindings instead. 2. Via FFI bindings - using the processor and the magick Lua rock - Has slightly better performance. - Requires a working LuaRocks setup and building the magick rock. For the processor default you need a regular installation of ImageMagick. \ For the processor you need to install the development version of ImageMagick. <details> <summary>NixOS</summary> NixOS users need to install the package. For you need to install as well thanks to @donovanglover. - <details> <summary>Home Manager</summary> thanks to @wuliuqii in 13 </details> - <details> <summary>Vanilla NixOS</summary> </details> </details> <details> <summary>Arch</summary> </details> <details> <summary>Ubuntu/Debian</summary> </details> <details> <summary>macOS</summary> The setup is the same for both and : - Homebrew: - For some users homebrew might install it into a weird location, so you have to add to by adding something like to your shell profile probably or - MacPorts: - You must add to , similar to homebrew. </details> <details> <summary>Fedora</summary> </details> Tmux This plugin will always have first class support for Tmux, to make it work make sure you: - Use Tmux >= 3.3 - - Other - cURL for remote image support Extra: Installing Überzug++ <details> <summary>Pip</summary> </details> <details> <summary>Arch</summary> </details> <details> <summary>Ubuntu/Debian/Fedora</summary> Follow instructions on this link </details> <details> <summary>macOS</summary> - Homebrew: - For some users homebrew might install it into a weird location, so you have to add to by adding something like to your shell profile probably or - Setup the configuration - Put this in the same for MacOS: - You can remove the lines with and , once you have tried every available option until one or more worked! </details> Plugin installation After you've set up the dependencies, install the plugin. <details> <summary><b>For magickcli using Lazy</b></summary> </details> <details> <summary><b>For magickrock using Lazy >= v11.</b></summary> </details> <details> <summary><b>For magickrock using Lazy < v11.x</b></summary> It's recommended that you use vhyrro/luarocks.nvim to install Lua rocks for Neovim while using lazy, but you can install them manually as well. With luarocks.nvim \ Please read the luarocks.nvim README, it currently has an external dependency. Without luarocks.nvim \ You have to install the Lua rock manually. 1. Install LuaRocks on your system via your system package manager 2. Run </details> <details> <summary><b>For magickrock using Rocks.nvim</b></summary> </details> Configuration Default configuration Backends All the backends support rendering inside Tmux. - - best in class, works great and is very snappy - - backed by ueberzugpp, supports any terminal, but has lower performance - Supports multiple images thanks to @jstkdng. Integrations - - uses tree-sitter-markdown and supports any Markdown-based grammars Quarto, VimWiki Markdown - - uses tree-sitter-norg also check https://github.com/nvim-neorg/neorg/issues/971 - - thanks to @etiennecollin https://github.com/3rd/image.nvim/pull/223 - and - thanks to @zuloo https://github.com/3rd/image.nvim/pull/163 You can configure where images are searched for on a per-integration basis by passing a function to as shown below: Check https://github.com/3rd/image.nvim/issues/190issuecomment-2378156235 for how to configure this for Obsidian. How to ...? General <details> <summary>Enable / disable / get plugin status</summary> You can enable/disable the plugin and check its status on demand. </details> Integrations <details> <summary>Render images only when under the cursor</summary> This is a built-in feature that you can configure per-integration using the following options: </details> API Check types.lua for a better overview of how everything is modeled. --- Thank you Deep thanks to the awesome people who have gifted their time and energy to this project, and to those who work on Neovim and the dependencies without which this would not be possible. - @benlubas for their countless amazing contributions - @edluffy for hologram.nvim - of which I borrowed a lot of code - @vhyrro for their great ideas and hologram.nvim fork changes - @kovidgoyal for Kitty - the program I spend most of my time in - @jstkdng for ueberzugpp - the revived version of ueberzug !Analytics The story behind Some years ago, I took a trip to Emacs land for a few months to learn Elisp and also research what Org-mode is, how it works, and look for features of interest for my workflow. I already had my own document syntax, albeit a very simple one, hacked together with Vimscript and a lot of Regex, and I was looking for ideas to improve it and build features on top of it. I kept working on my syntax over the years, rewrote it many times, and today it's a proper Tree-sitter grammar, that I use for all my needs, from second braining to managing my tasks and time. It's helped me control my ADHD and be productive long before I was diagnosed, and it's still helping me be so much better than I'd be without it today. One thing Emacs and Org-mode had that I liked was the ability to embed images in the document. Of course, we don't "need" it, but... I really wanted to have images in my documents. About 3 years ago, I made my first attempt at solving this problem but didn't get far. If you have similar interests, you might have seen the vimage.nvim demo video on YouTube. It was using ueberzug, which is now dead. It was buggy and didn't handle things like window-relative positioning, attaching images to windows and buffers, folds, etc. Kitty's graphics protocol was a thing, but it didn't work with Tmux, which I'll probably use forever or replace it with something of my own. Now, things have changed, and I'm happy to announce that rendering images using Kitty's graphics protocol from Neovim inside Tmux is working, and it's working pretty well!