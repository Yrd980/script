MinIO Quickstart Guide !Slackhttps://slack.min.io !Docker Pullshttps://hub.docker.com/r/minio/minio/ !licensehttps://github.com/minio/minio/blob/master/LICENSE !MinIOhttps://min.io MinIO is a high-performance, S3-compatible object storage solution released under the GNU AGPL v3.0 license. Designed for speed and scalability, it powers AI/ML, analytics, and data-intensive workloads with industry-leading performance. ðŸ”¹ S3 API Compatible â€“ Seamless integration with existing S3 tools ðŸ”¹ Built for AI & Analytics â€“ Optimized for large-scale data pipelines ðŸ”¹ High Performance â€“ Ideal for demanding storage workloads. AI storage documentation https://min.io/solutions/object-storage-for-ai. This README provides quickstart instructions on running MinIO on bare metal hardware, including container-based installations. For Kubernetes environments, use the MinIO Kubernetes Operator. Container Installation Use the following commands to run a standalone MinIO server as a container. Standalone MinIO servers are best suited for early development and evaluation. Certain features such as versioning, object locking, and bucket replication require distributed deploying MinIO with Erasure Coding. For extended development and production, deploy MinIO with Erasure Coding enabled - specifically, with a minimum of 4 drives per MinIO server. See MinIO Erasure Code Overview for more complete documentation. Stable Run the following command to run the latest stable image of MinIO as a container using an ephemeral data volume: The MinIO deployment starts using default root credentials . You can test the deployment using the MinIO Console, an embedded object browser built into MinIO Server. Point a web browser running on the host machine to <http://127.0.0.1:9000> and log in with the root credentials. You can use the Browser to create buckets, upload objects, and browse the contents of the MinIO server. You can also connect using any S3-compatible tool, such as the MinIO Client commandline tool. See Test using MinIO Client for more information on using the commandline tool. For application developers, see <https://min.io/docs/minio/linux/developers/minio-drivers.html> to view MinIO SDKs for supported languages. > !NOTE > To deploy MinIO on with persistent storage, you must map local persistent directories from the host OS to the container using the option. > For example, maps the host OS drive at to on the container. macOS Use the following commands to run a standalone MinIO server on macOS. Standalone MinIO servers are best suited for early development and evaluation. Certain features such as versioning, object locking, and bucket replication require distributed deploying MinIO with Erasure Coding. For extended development and production, deploy MinIO with Erasure Coding enabled - specifically, with a minimum of 4 drives per MinIO server. See MinIO Erasure Code Overview for more complete documentation. Homebrew recommended Run the following command to install the latest stable MinIO package using Homebrew. Replace brew install miniominio/stable/miniominioadmin:minioadminmcmcmcminioadmin:minioadminmcmcmcwgetminioadmin:minioadminmcmcmcminioadmin:minioadminmcmcmcminioadmin:minioadminmcmcmcufwfirewall-cmdpublicpermanentiptables--console-address127.0.0.1:9000MINIOBROWSERREDIRECTURLhttps://minio.example.nethttps://console.minio.example.netMINIOBROWSERREDIRECTURLhttps://console.minio.example.netmcmcmc admin update/opt/bin/miniochmod +x /opt/bin/miniomc admin service restart alias//opt/bin/miniochmod +x /opt/bin/miniomc admin service restart alias/mc admin updatemc admin updatemcminio-go SDK with MinIO Serverhttps://min.io/docs/minio/linux/developers/go/minio-go.html - The MinIO documentation website Contribute to MinIO Project Please follow MinIO Contributor's Guide License - MinIO source is licensed under the GNU AGPLv3. - MinIO documentation is licensed under CC BY 4.0. - License Compliance