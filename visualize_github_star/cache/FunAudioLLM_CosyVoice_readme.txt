!SVG Bannershttps://github.com/Akshay090/svg-banners üëâüèª CosyVoice üëàüèª CosyVoice 3.0: Demos; Paper; CV3-Eval CosyVoice 2.0: Demos; Paper; Modelscope; HuggingFace CosyVoice 1.0: Demos; Paper; Modelscope Highlightüî• CosyVoice 2.0 has been released! Compared to version 1.0, the new version offers more accurate, more stable, faster, and better speech generation capabilities. Multilingual - Supported Language: Chinese, English, Japanese, Korean, Chinese dialects Cantonese, Sichuanese, Shanghainese, Tianjinese, Wuhanese, etc. - Crosslingual & MixlingualÔºöSupport zero-shot voice cloning for cross-lingual and code-switching scenarios. Ultra-Low Latency - Bidirectional Streaming Support: CosyVoice 2.0 integrates offline and streaming modeling technologies. - Rapid First Packet Synthesis: Achieves latency as low as 150ms while maintaining high-quality audio output. High Accuracy - Improved Pronunciation: Reduces pronunciation errors by 30% to 50% compared to CosyVoice 1.0. - Benchmark Achievements: Attains the lowest character error rate on the hard test set of the Seed-TTS evaluation set. Strong Stability - Consistency in Timbre: Ensures reliable voice consistency for zero-shot and cross-language speech synthesis. - Cross-language Synthesis: Marked improvements compared to version 1.0. Natural Experience - Enhanced Prosody and Sound Quality: Improved alignment of synthesized audio, raising MOS evaluation scores from 5.4 to 5.53. - Emotional and Dialectal Flexibility: Now supports more granular emotional controls and accent adjustments. Roadmap - x 2025/08 - x Thanks to the contribution from NVIDIA Yuekai Zhang, add triton trtllm runtime support - x 2025/07 - x release cosyvoice 3.0 eval set - x 2025/05 - x add cosyvoice 2.0 vllm support - x 2024/12 - x 25hz cosyvoice 2.0 released - x 2024/09 - x 25hz cosyvoice base model - x 25hz cosyvoice voice conversion model - x 2024/08 - x Repetition Aware SamplingRAS inference for llm stability - x Streaming inference mode support, including kv cache and sdpa for rtf optimization - x 2024/07 - x Flow matching training support - x WeTextProcessing support when ttsfrd is not available - x Fastapi server and client Install Clone and install - Clone the repo - Install Conda: please see https://docs.conda.io/en/latest/miniconda.html - Create Conda env: Model download We strongly recommend that you download our pretrained model and resource. Optionally, you can unzip resource and install package for better text normalization performance. Notice that this step is not necessary. If you do not install package, we will use wetext by default. Basic Usage We strongly recommend using for better performance. Follow the code below for detailed usage of each model. CosyVoice2 Usage CosyVoice2 vllm Usage If you want to use vllm for inference, please install . Older vllm version do not support CosyVoice2 inference. Notice that has a lot of specific requirements, for example . You can create a new env to in case your hardward do not support vllm and old env is corrupted. CosyVoice Usage Start web demo You can use our web demo page to get familiar with CosyVoice quickly. Please see the demo website for details. Advanced Usage For advanced users, we have provided training and inference scripts in . Build for deployment Optionally, if you want service deployment, You can run the following steps. Discussion & Communication You can directly discuss on Github Issues. You can also scan the QR code to join our official Dingding chat group. <img src="./asset/dingding.png" width="250px"> Acknowledge 1. We borrowed a lot of code from FunASR. 2. We borrowed a lot of code from FunCodec. 3. We borrowed a lot of code from Matcha-TTS. 4. We borrowed a lot of code from AcademiCodec. 5. We borrowed a lot of code from WeNet. Citations Disclaimer The content provided above is for academic purposes only and is intended to demonstrate technical capabilities. Some examples are sourced from the internet. If any content infringes on your rights, please contact us to request its removal.