<p align="center"><a href="https://github.com/tadata-org/fastapimcp"><img src="https://github.com/user-attachments/assets/7e44e98b-a0ba-4aff-a68a-4ffee3a6189c" alt="fastapi-to-mcp" height=100/></a></p> <div align="center"> <span style="font-size: 0.85em; font-weight: normal;">Built by <a href="https://tadata.com">Tadata</a></span> </div> <h1 align="center"> FastAPI-MCP </h1> <div align="center"> <a href="https://trendshift.io/repositories/14064" target="blank"><img src="https://trendshift.io/api/badge/repositories/14064" alt="tadata-org%2Ffastapimcp | Trendshift" style="width: 250px; height: 55px;" width="250" height="55"/></a> </div> <p align="center">Expose your FastAPI endpoints as Model Context Protocol MCP tools, with Auth!</p> <div align="center"> !PyPI versionhttps://pypi.org/project/fastapi-mcp/ !Python Versionshttps://pypi.org/project/fastapi-mcp/ !FastAPI !CIhttps://github.com/tadata-org/fastapimcp/actions/workflows/ci.yml !Coveragehttps://codecov.io/gh/tadata-org/fastapimcp </div> <p align="center"><a href="https://github.com/tadata-org/fastapimcp"><img src="https://github.com/user-attachments/assets/b205adc6-28c0-4e3c-a68b-9c1a80eb7d0c" alt="fastapi-mcp-usage" height="400"/></a></p> Features - Authentication built in, using your existing FastAPI dependencies! - FastAPI-native: Not just another OpenAPI -> MCP converter - Zero/Minimal configuration required - just point it at your FastAPI app and it works - Preserving schemas of your request models and response models - Preserve documentation of all your endpoints, just as it is in Swagger - Flexible deployment - Mount your MCP server to the same app, or deploy separately - ASGI transport - Uses FastAPI's ASGI interface directly for efficient communication Hosted Solution If you prefer a managed hosted solution check out tadata.com. Installation We recommend using uv, a fast Python package installer: Alternatively, you can install with pip: Basic Usage The simplest way to use FastAPI-MCP is to add an MCP server directly to your FastAPI application: That's it! Your auto-generated MCP server is now available at . Documentation, Examples and Advanced Usage FastAPI-MCP provides comprehensive documentation. Additionaly, check out the examples directory for code samples demonstrating these features in action. FastAPI-first Approach FastAPI-MCP is designed as a native extension of FastAPI, not just a converter that generates MCP tools from your API. This approach offers several key advantages: - Native dependencies: Secure your MCP endpoints using familiar FastAPI for authentication and authorization - ASGI transport: Communicates directly with your FastAPI app using its ASGI interface, eliminating the need for HTTP calls from the MCP to your API - Unified infrastructure: Your FastAPI app doesn't need to run separately from the MCP server though separate deployment is also supported This design philosophy ensures minimum friction when adding MCP capabilities to your existing FastAPI services. Development and Contributing Thank you for considering contributing to FastAPI-MCP! We encourage the community to post Issues and create Pull Requests. Before you get started, please see our Contribution Guide. Community Join MCParty Slack community to connect with other MCP enthusiasts, ask questions, and share your experiences with FastAPI-MCP. Requirements - Python 3.10+ Recommended 3.12 - uv License MIT License. Copyright c 2025 Tadata Inc.