<picture align="center"> <source media="prefers-color-scheme: dark" srcset="https://pandas.pydata.org/static/img/pandaswhite.svg"> <img alt="Pandas Logo" src="https://pandas.pydata.org/static/img/pandas.svg"> </picture> ----------------- pandas: A Powerful Python Data Analysis Toolkit | | | | --- | --- | | Testing | !CI - Testhttps://github.com/pandas-dev/pandas/actions/workflows/unit-tests.yml !Coveragehttps://codecov.io/gh/pandas-dev/pandas | | Package | !PyPI Latest Releasehttps://pypi.org/project/pandas/ !PyPI Downloadshttps://pypi.org/project/pandas/ !Conda Latest Releasehttps://anaconda.org/conda-forge/pandas !Conda Downloadshttps://anaconda.org/conda-forge/pandas | | Meta | !Powered by NumFOCUShttps://numfocus.org !DOIhttps://doi.org/10.5281/zenodo.3509134 !License - BSD 3-Clausehttps://github.com/pandas-dev/pandas/blob/main/LICENSE !Slackhttps://pandas.pydata.org/docs/dev/development/community.html?highlight=slackcommunity-slack | What is it? pandas is a Python package that provides fast, flexible, and expressive data structures designed to make working with "relational" or "labeled" data both easy and intuitive. It aims to be the fundamental high-level building block for doing practical, real world data analysis in Python. Additionally, it has the broader goal of becoming the most powerful and flexible open source data analysis / manipulation tool available in any language. It is already well on its way towards this goal. Table of Contents - Main Features - Where to get it - Dependencies - Installation from sources - License - Documentation - Background - Getting Help - Discussion and Development - Contributing to pandas Main Features Here are just a few of the things that pandas does well: - Easy handling of missing datamissing-data represented as , , or in floating point as well as non-floating point data - Size mutability: columns can be inserted and deletedinsertion-deletion from DataFrame and higher dimensional objects - Automatic and explicit data alignmentalignment: objects can be explicitly aligned to a set of labels, or the user can simply ignore the labels and let , , etc. automatically align the data for you in computations - Powerful, flexible group bygroupby functionality to perform split-apply-combine operations on data sets, for both aggregating and transforming data - Make it easy to convertconversion ragged, differently-indexed data in other Python and NumPy data structures into DataFrame objects - Intelligent label-based slicingslicing, fancy indexingfancy-indexing, and subsettingsubsetting of large data sets - Intuitive mergingmerging and joiningjoining data sets - Flexible reshapingreshape and pivotingpivot-table of data sets - Hierarchicalmi labeling of axes possible to have multiple labels per tick - Robust IO tools for loading data from flat filesflat-files CSV and delimited, Excel filesexcel, databasesdb, and saving/loading data from the ultrafast HDF5 formathdfstore - Time seriestimeseries-specific functionality: date range generation and frequency conversion, moving window statistics, date shifting and lagging missing-data: https://pandas.pydata.org/pandas-docs/stable/userguide/missingdata.html insertion-deletion: https://pandas.pydata.org/pandas-docs/stable/userguide/dsintro.htmlcolumn-selection-addition-deletion alignment: https://pandas.pydata.org/pandas-docs/stable/userguide/dsintro.html?highlight=alignmentintro-to-data-structures groupby: https://pandas.pydata.org/pandas-docs/stable/userguide/groupby.htmlgroup-by-split-apply-combine conversion: https://pandas.pydata.org/pandas-docs/stable/userguide/dsintro.htmldataframe slicing: https://pandas.pydata.org/pandas-docs/stable/userguide/indexing.htmlslicing-ranges fancy-indexing: https://pandas.pydata.org/pandas-docs/stable/userguide/advanced.htmladvanced subsetting: https://pandas.pydata.org/pandas-docs/stable/userguide/indexing.htmlboolean-indexing merging: https://pandas.pydata.org/pandas-docs/stable/userguide/merging.htmldatabase-style-dataframe-or-named-series-joining-merging joining: https://pandas.pydata.org/pandas-docs/stable/userguide/merging.htmljoining-on-index reshape: https://pandas.pydata.org/pandas-docs/stable/userguide/reshaping.html pivot-table: https://pandas.pydata.org/pandas-docs/stable/userguide/reshaping.html mi: https://pandas.pydata.org/pandas-docs/stable/userguide/indexing.htmlhierarchical-indexing-multiindex flat-files: https://pandas.pydata.org/pandas-docs/stable/userguide/io.htmlcsv-text-files excel: https://pandas.pydata.org/pandas-docs/stable/userguide/io.htmlexcel-files db: https://pandas.pydata.org/pandas-docs/stable/userguide/io.htmlsql-queries hdfstore: https://pandas.pydata.org/pandas-docs/stable/userguide/io.htmlhdf5-pytables timeseries: https://pandas.pydata.org/pandas-docs/stable/userguide/timeseries.htmltime-series-date-functionality Where to get it The source code is currently hosted on GitHub at: https://github.com/pandas-dev/pandas Binary installers for the latest released version are available at the Python Package Index PyPI and on Conda. The list of changes to pandas between each release can be found here. For full details, see the commit logs at https://github.com/pandas-dev/pandas. Dependencies - NumPy - Adds support for large, multi-dimensional arrays, matrices and high-level mathematical functions to operate on these arrays - python-dateutil - Provides powerful extensions to the standard datetime module - tzdata - Provides an IANA time zone database See the full installation instructions for minimum supported versions of required, recommended and optional dependencies. Installation from sources To install pandas from source you need Cython in addition to the normal dependencies above. Cython can be installed from PyPI: In the directory same one where you found this file after cloning the git repo, execute: or for installing in development mode: See the full instructions for installing from source. License BSD 3 Documentation The official documentation is hosted on PyData.org. Background Work on started at AQR a quantitative hedge fund in 2008 and has been under active development since then. Getting Help For usage questions, the best place to go to is StackOverflow. Further, general questions and discussions can also take place on the pydata mailing list. Discussion and Development Most development discussions take place on GitHub in this repo, via the GitHub issue tracker. Further, the pandas-dev mailing list can also be used for specialized discussions or design issues, and a Slack channel is available for quick development related questions. There are also frequent community meetings for project maintainers open to the community as well as monthly new contributor meetings to help support new contributors. Additional information on the communication channels can be found on the contributor community page. Contributing to pandas !Open Source Helpershttps://www.codetriage.com/pandas-dev/pandas All contributions, bug reports, bug fixes, documentation improvements, enhancements, and ideas are welcome. A detailed overview on how to contribute can be found in the contributing guide. If you are simply looking to start working with the pandas codebase, navigate to the GitHub "issues" tab and start looking through interesting issues. There are a number of issues listed under Docs and good first issue where you could start out. You can also triage issues which may include reproducing bug reports, or asking for vital information such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to subscribe to pandas on CodeTriage. Or maybe through using pandas you have an idea of your own or are looking for something in the documentation and thinking ‘this can be improved’...you can do something about it! Feel free to ask questions on the mailing list or on Slack. As contributors and maintainers to this project, you are expected to abide by pandas' code of conduct. More information can be found at: Contributor Code of Conduct <hr> Go to Top