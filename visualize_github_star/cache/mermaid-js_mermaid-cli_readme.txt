mermaid-cli !npm versionhttps://www.npmjs.com/package/@mermaid-js/mermaid-cli !node-lts scopedhttps://www.npmjs.com/package/@mermaid-js/mermaid-cli !Docker Image Version latest semverhttps://hub.docker.com/r/minlag/mermaid-cli !Build, test and deploy mermaid-cli Docker imagehttps://github.com/mermaid-js/mermaid-cli/actions/workflows/compile-mermaid.yml !This project is using Percy.io for visual regression testing.https://percy.io/Mermaid/mermaid-cli !Join our Slack!https://join.slack.com/t/mermaid-talk/sharedinvite/enQtNzc4NDIyNzk4OTAyLWVhYjQxOTI2OTg4YmE1ZmJkY2Y4MTU3ODliYmIwOTY3NDJlYjA0YjIyZTdkMDMyZTUwOGI0NjEzYmEwODcwOTE This is a command-line interface CLI for mermaid. It takes a mermaid definition file as input and generates an SVG/PNG/PDF file as output. Installation Usage Convert Mermaid mmd Diagram File To SVG > Note > > See Alternative installations if you don't want to install the package globally. > > Locate how to call the mmdc executable for your preferred method > i.e. Docker, Yarn, NPM, local install, etc. Examples Create A PNG With A Dark Theme And Transparent Background Animating an SVG file with custom CSS The option can be used to inline some custom CSS. Please see ./test-positive/flowchart1.css for an example of a CSS file that has animations. Warning: If you want to override 's https://mermaid.js.org/config/schema-docs/config.htmlthemecss, we recommend instead adding to your mermaid . You may also need to use https://developer.mozilla.org/en-US/docs/Web/CSS/important to override mermaid's . Warning: Inline CSS files may be blocked by your browser, depending on the HTTP Content-Security-Policy header of the website that hosts your SVG. <details> <summary>Example output: docs/animated-flowchart.svg</summary> !docs/animated-flowchart.svg </details> Transform a markdown file with mermaid diagrams This command transforms a markdown file itself. The mermaid-cli will find the mermaid diagrams, create SVG files from them and refer to those in the markdown output. This: ~~~md Some markdown Some more markdown Mermaid with custom title/desc ~~~ Becomes: Piping from stdin You can easily pipe input from stdin. This example shows how to use a heredoc to send a diagram as stdin to mermaid-cli mmdc. See All Available Options Alternative installations Use Docker/Podman: or pull from Github Container Registry or e.g. version 8.8.0 The container looks for input files in . So for example, if you have a diagram defined on your system in , you can use the container to generate an SVG file as follows: Or, if using Podman, instead do: The key differences in the podman command versus the docker command are: - The addition of the argument. This allows the container to keep the same UID as the current user's UID in the container namespace instead of mapping to a subuid. To learn more, see the documentation. - The addition of to the end of the volume mapping. This instructs podman to relabel the files in the volume with the SELinux label , which allows processes in the container to access the files. See the "Labeling Volume Mounts" section of podman-run 1 for more info. In previous version, the input files were mounted in . You can restore this behaviour with the option: Use Node.JS API It's possible to call via a Node.JS API. Please be aware that the NodeJS API is not covered by semver, as follows 's versioning. Install locally Some people are having issues installing this tool globally. Installing it locally is an alternative solution: Run with npx https://www.npmjs.com/package/npx is installed by default with NPM. It downloads and runs commands at the same time. To use Mermaid CLI with npx, you need to use the flag because the package name is different than the command it installs . Install with brew > Warning > > This method of installation is no longer supported. > For more details, see the discussion. > An old version of mermaid-cli can be installed with brew. > Known issues 1. Linux sandbox issue 2. Docker permission denied issue 3. How to setup up mermaid to use already installed chromium? For contributors Contributions are welcome. See the contribution guide.