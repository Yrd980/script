!https://www.getinboxzero.com <p align="center"> <a href="https://www.getinboxzero.com"> <h1 align="center">Inbox Zero - Your AI Email Assistant</h1> </a> <p align="center"> Open source email app to reach inbox zero fast. <br /> <a href="https://www.getinboxzero.com">Website</a> · <a href="https://www.getinboxzero.com/discord">Discord</a> · <a href="https://github.com/elie222/inbox-zero/issues">Issues</a> </p> </p> About There are two parts to Inbox Zero: 1. An AI email assistant that helps you spend less time on email. 2. Open source AI email client. If you're looking to contribute to the project, the email client is the best place to do this. <br /> <a href="https://vercel.com/oss"> <img alt="Vercel OSS Program" src="https://vercel.com/oss/program-badge.svg" /> </a <br /> !Deploy with Vercelhttps://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Felie222%2Finbox-zero&env=NEXTAUTHSECRET,GOOGLECLIENTID,GOOGLECLIENTSECRET,MICROSOFTCLIENTID,MICROSOFTCLIENTSECRET,EMAILENCRYPTSECRET,EMAILENCRYPTSALT,UPSTASHREDISURL,UPSTASHREDISTOKEN,GOOGLEPUBSUBTOPICNAME,DATABASEURL Features - AI Personal Assistant: Manages your email for you based on a plain text prompt file. It can take any action a human assistant can take on your behalf Draft reply, Label, Archive, Reply, Forward, Mark Spam, and even call a webhook. - Reply Zero: Track emails that need your reply and those awaiting responses. - Smart Categories: Categorize everyone that's ever emailed you. - Bulk Unsubscriber: Quickly unsubscribe from emails you never read in one-click. - Cold Email Blocker: Automatically block cold emails. - Email Analytics: Track your email activity with daily, weekly, and monthly stats. Learn more in our docs. Feature Screenshots | !AI Assistant | !Reply Zero | | :------------------------------------------------------: | :-------------------------------------------------------------: | | AI Assistant | Reply Zero | | !Gmail Client | !Bulk Unsubscriber | | Gmail client | Bulk Unsubscriber | Demo Video !Inbox Zero demohttp://www.youtube.com/watch?v=hfvKvTHBjG0 Built with - Next.js - Tailwind CSS - shadcn/ui - Prisma - Upstash - Turborepo Star History !Star History Charthttps://www.star-history.com/elie222/inbox-zero&Date Feature Requests To request a feature open a GitHub issue, or join our Discord. Getting Started for Developers We offer a hosted version of Inbox Zero at https://getinboxzero.com. To self-host follow the steps below. Setup Here's a video on how to set up the project. It covers the same steps mentioned in this document. But goes into greater detail on setting up the external services. Requirements - Node.js >= 18.0.0 - pnpm >= 8.6.12 - Docker desktop recommended but optional Make sure you have the above installed before starting. The external services that are required are detailed setup instructions below: - Google OAuth - Google PubSub Updating .env file: secrets Create your own file from the example supplied: Set the environment variables in the newly created . You can see a list of required variables in: . The required environment variables: Secrets: - -- can be any random string try using for a quick secure random string - -- Secret key for encrypting OAuth tokens try using for a secure key - -- Salt for encrypting OAuth tokens try using for a secure salt Redis: - -- Redis URL from Upstash. can be empty if you are using Docker Compose - -- Redis token from Upstash. or specify your own random string if you are using Docker Compose When using Vercel with Fluid Compute turned off, you should set or lower. See Vercel limits for different plans here. Updating .env file with Google OAuth credentials: - -- Google OAuth client ID. More info here - -- Google OAuth client secret. More info here Go to Google Cloud. Create a new project if necessary. Create new credentials: 1. If the banner shows up, configure consent screen if not, you can do this later 1. Click the banner, then Click . 2. Choose a name for your app, and enter your email. 3. In Audience, choose 4. Enter your contact information 5. Agree to the User Data policy and then click . 6. Return to APIs and Services using the left sidebar. 2. Create new credentials: 1. Click the button. Choose OAuth Client ID. 2. In , Choose 3. Choose a name for your web client 4. In Authorized JavaScript origins, add a URI and enter 5. In enter 6. Click . 7. A popup will show up with the new credentials, including the Client ID and secret. 3. Update .env file: 1. Copy the Client ID to 2. Copy the Client secret to 4. Update scopes 1. Go to in the left sidebar or click link above 2. Click 3. Copy paste the below into the box: 4. Click 5. Click in the Data Access page. 5. Add yourself as a test user 1. Go to Audience 2. In the section, click 3. Enter your email and press Updating .env file with Microsoft OAuth credentials: - -- Microsoft OAuth client ID - -- Microsoft OAuth client secret Go to Microsoft Azure Portal. Create a new Azure Active Directory app registration: 1. Navigate to Azure Active Directory 2. Go to "App registrations" in the left sidebar or search it in the searchbar 3. Click "New registration" 1. Choose a name for your application 2. Under "Supported account types" select "Accounts in any organizational directory Any Azure AD directory - Multitenant and personal Microsoft accounts e.g. Skype, Xbox" 3. Set the Redirect URI: - Platform: Web - URL: 4. Click "Register" 5. In the "Manage" menu click "Authentication Preview" 6. Add the Redirect URI: 4. Get your credentials: 1. The "Application client ID" shown is your 2. To get your client secret: - Click "Certificates & secrets" in the left sidebar - Click "New client secret" - Add a description and choose an expiry - Click "Add" - Copy the secret Value not the ID - this is your 5. Configure API permissions: 1. In the "Manage" menu click "API permissions" in the left sidebar 2. Click "Add a permission" 3. Select "Microsoft Graph" 4. Select "Delegated permissions" 5. Add the following permissions: - openid - profile - email - User.Read - offlineaccess - Mail.ReadWrite - Mail.Send - Mail.ReadBasic - Mail.Read - Mail.Read.Shared - MailboxSettings.ReadWrite - Contacts.ReadWrite 6. Click "Add permissions" 7. Click "Grant admin consent" if you're an admin 6. Update your .env file with the credentials: Updating .env file with LLM parameters You need to set an LLM, but you can use a local one too: - Anthropic - OpenAI - AWS Bedrock Anthropic - Google Gemini - Groq Llama 3.3 70B - Ollama local For the LLM, you can use Anthropic, OpenAI, or Anthropic on AWS Bedrock. You can also use Ollama by setting the following enviroment variables: Note: If you need to access Ollama hosted locally and the application is running on Docker setup, you can use as the base URL. You might also need to set to in the Ollama configuration file. You can select the model you wish to use in the app on the page of the app. If you are using local ollama, you can set it to be default: If this is the case you must also set the environment variable. Redis and Postgres We use Postgres for the database. For Redis, you can use Upstash Redis or set up your own Redis instance. You can run Postgres & Redis locally using Running the app To run the migrations: To run the app locally for development slower: Or from the project root: To build and run the app locally in production mode faster: Open http://localhost:3000 to view the app in your browser. Premium Many features are available only to premium users. To upgrade yourself, make yourself an admin in the : Then upgrade yourself at: http://localhost:3000/admin. Set up push notifications via Google PubSub to handle emails in real time Follow instructions here. 1. Create a topic 2. Create a subscription 3. Grant publish rights on your topic Set env var . When creating the subscription select Push and the url should look something like: or where the domain is your domain. Set in your file to be the value of . To run in development ngrok can be helpful: And then update the webhook endpoint in the Google PubSub subscriptions dashboard. To start watching emails visit: Watching for email updates Set a cron job to run these: The Google watch is necessary. Others are optional. Here are some easy ways to run cron jobs. Upstash is a free, easy option. I could never get the Vercel . Open to PRs if you find a fix for that. Contributing to the project You can view open tasks in our GitHub Issues. Join our Discord to discuss tasks and check what's being worked on. ARCHITECTURE.md explains the architecture of the project LLM generated.